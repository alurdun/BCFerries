{
  "name": "SemanticModel",
  "compatibilityLevel": 1200,
  "model": {
    "culture": "en-CA",
    "dataSources": [
      {
        "name": "Oracle scan.dev01.rac.bcferries.corp",
        "connectionString": "Provider=OraOLEDB.Oracle;Data Source=scan.dev01.rac.bcferries.corp;User ID=joanders;Persist Security Info=false",
        "impersonationMode": "impersonateServiceAccount",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "Oracle"
          }
        ]
      }
    ],
    "tables": [
      {
        "name": "dimContact",
        "columns": [
          {
            "name": "MR_MS",
            "dataType": "string",
            "sourceColumn": "MR_MS",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "LASTNAME",
            "dataType": "string",
            "sourceColumn": "LASTNAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "FIRSTNAME",
            "dataType": "string",
            "sourceColumn": "FIRSTNAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "MIDDLENAME",
            "dataType": "string",
            "sourceColumn": "MIDDLENAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PRIMARYPHONE",
            "dataType": "string",
            "sourceColumn": "PRIMARYPHONE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PRIMARYEMAIL",
            "dataType": "string",
            "sourceColumn": "PRIMARYEMAIL",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "STATUS",
            "dataType": "string",
            "sourceColumn": "STATUS",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "STATUSDATE",
            "dataType": "dateTime",
            "sourceColumn": "STATUSDATE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "STATUSEXPIRYDATE",
            "dataType": "dateTime",
            "sourceColumn": "STATUSEXPIRYDATE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "REASON",
            "dataType": "string",
            "sourceColumn": "REASON",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "CUSTOMERSINCE",
            "dataType": "dateTime",
            "sourceColumn": "CUSTOMERSINCE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "CONSUMERFLAG",
            "dataType": "string",
            "sourceColumn": "CONSUMERFLAG",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "UNVERIFIEDFLAG",
            "dataType": "string",
            "sourceColumn": "UNVERIFIEDFLAG",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "COMMENTS",
            "dataType": "string",
            "sourceColumn": "COMMENTS",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PREFERREDCOMMUNICATIONS",
            "dataType": "string",
            "sourceColumn": "PREFERREDCOMMUNICATIONS",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "CREATED",
            "dataType": "dateTime",
            "sourceColumn": "CREATED",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "CREATEDBY",
            "dataType": "string",
            "sourceColumn": "CREATEDBY",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "LASTUPDATEDTHISDATABASE",
            "dataType": "dateTime",
            "sourceColumn": "LASTUPDATEDTHISDATABASE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "LASTUPDATED",
            "dataType": "dateTime",
            "sourceColumn": "LASTUPDATED",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "LASTUPDATEDBY",
            "dataType": "string",
            "sourceColumn": "LASTUPDATEDBY",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "CONTACTID",
            "dataType": "string",
            "sourceColumn": "CONTACTID"
          },
          {
            "name": "CUSTOMERNUMBER",
            "dataType": "double",
            "sourceColumn": "CUSTOMERNUMBER"
          },
          {
            "name": "PRIMARYADDRESS",
            "dataType": "string",
            "sourceColumn": "PRIMARYADDRESS"
          },
          {
            "name": "PRIMARYADDRESSLINE2",
            "dataType": "string",
            "sourceColumn": "PRIMARYADDRESSLINE2"
          },
          {
            "name": "PRIMARYADDRESSCITY",
            "dataType": "string",
            "sourceColumn": "PRIMARYADDRESSCITY"
          },
          {
            "name": "PRIMARYADDRESSPROVINCESTATE",
            "dataType": "string",
            "sourceColumn": "PRIMARYADDRESSPROVINCESTATE"
          },
          {
            "name": "PRIMARYADDRESSCOUNTRY",
            "dataType": "string",
            "sourceColumn": "PRIMARYADDRESSCOUNTRY"
          },
          {
            "name": "PRIMARYPOSTALZIP",
            "dataType": "string",
            "sourceColumn": "PRIMARYPOSTALZIP"
          }
        ],
        "partitions": [
          {
            "name": "dimContact",
            "dataView": "full",
            "source": {
              "query": [
                "select ",
                "    CONTACT.ROW_ID as ContactID",
                "    , CONTACTX.ATTRIB_14 as CustomerNumber",
                "    , CONTACT.PER_TITLE as Mr_Ms",
                "    , CONTACT.LAST_NAME as LastName",
                "    , CONTACT.FST_NAME as FirstName",
                "    , CONTACT.MID_NAME as MiddleName",
                "    , PHONE.ADDR as PrimaryPhone",
                "    , EMAIL.ADDR as PrimaryEmail",
                "    , PERSONALADDRESS.ADDR as PrimaryAddress",
                "    , PERSONALADDRESS.ADDR_LINE_2 as PrimaryAddressLine2",
                "    , PERSONALADDRESS.CITY as PrimaryAddressCity",
                "    , PERSONALADDRESS.STATE as PrimaryAddressProvinceState",
                "    , PERSONALADDRESS.COUNTRY as PrimaryAddressCountry",
                "    , PERSONALADDRESS.ZIPCODE as PrimaryPostalZip",
                "    , CONTACT.CUST_STAT_CD as Status",
                "    , CONTACTX.ATTRIB_12 as StatusDate",
                "    , CONTACT.CUST_END_DT as StatusExpiryDate",
                "    , CONTACTX.ATTRIB_01 as Reason",
                "    , CONTACT.CUST_SINCE_DT as CustomerSince",
                "    , CONTACT.CONSUMER_FLG as ConsumerFlag",
                "    , CONTACT.X_TRAVEL_UNVERIFIED_FLG as UnverifiedFlag",
                "    , CONTACT.COMMENTS as Comments",
                "    , CONTACT.PREF_COMM_MEDIA_CD as PreferredCommunications",
                "    , CONTACT.CREATED as Created",
                "    , CONTACT.CREATED_BY as CreatedBy",
                "    , CONTACT.DB_LAST_UPD as LastUpdatedThisDatabase",
                "    , CONTACT.LAST_UPD as LastUpdated",
                "    , CONTACT.LAST_UPD_BY as LastUpdatedBy",
                "from SIEBEL_DEV.S_CONTACT CONTACT",
                "left outer join SIEBEL_DEV.S_PER_COMM_ADDR PHONE",
                "    on CONTACT.PR_ALT_PH_NUM_ID = PHONE.ROW_ID",
                "left outer join SIEBEL_DEV.S_PER_COMM_ADDR EMAIL ",
                "    on CONTACT.PR_EMAIL_ADDR_ID = PHONE.ROW_ID",
                "left outer join SIEBEL_DEV.S_ADDR_PER PERSONALADDRESS",
                "    on CONTACT.PR_PER_ADDR_ID = PERSONALADDRESS.ROW_ID",
                "left outer join SIEBEL_DEV.S_CONTACT_X CONTACTX ",
                "    on CONTACT.ROW_ID = CONTACTX.ROW_ID",
                "union",
                "select 'NOREL' as ContactID",
                "    , 0 as CustomerNumber",
                "    , 'NR' as Mr_Ms",
                "    , 'NOREL' as LastName",
                "    , 'NOREL' as FirstName",
                "    , 'NOREL' as MiddleName",
                "    , '0' as PrimaryPhone",
                "    , 'NOREL' as PrimaryEmail",
                "    , 'NOREL' as PrimaryAddress",
                "    , 'NOREL' as PrimaryAddressLine2",
                "    , 'NOREL' as PrimaryAddressCity",
                "    , 'NOREL' as PrimaryAddressProvinceState",
                "    , 'NOREL' as PrimaryAddressCountry",
                "    , 'NOREL' as PrimaryPostalZip",
                "    , 'NOREL' as Status",
                "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as StatusDate",
                "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as StatusExpiryDate",
                "    , 'NOREL' as Reason",
                "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as CustomerSince",
                "    , '0' as ConsumerFlag",
                "    , '0' as UnverifiedFlag",
                "    , 'NOREL' as Comments",
                "    , 'NOREL' as PreferredCommunications",
                "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as Created",
                "    , 'NOREL' as CreatedBy",
                "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as LastUpdatedThisDatabase",
                "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as LastUpdated",
                "    , 'NOREL' as LastUpdatedBy from dual"
              ],
              "dataSource": "Oracle scan.dev01.rac.bcferries.corp"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "    CONTACT.ROW_ID as ContactID",
                  "    , CONTACTX.ATTRIB_14 as CustomerNumber",
                  "    , CONTACT.PER_TITLE as Mr_Ms",
                  "    , CONTACT.LAST_NAME as LastName",
                  "    , CONTACT.FST_NAME as FirstName",
                  "    , CONTACT.MID_NAME as MiddleName",
                  "    , PHONE.ADDR as PrimaryPhone",
                  "    , EMAIL.ADDR as PrimaryEmail",
                  "    , PERSONALADDRESS.ADDR as PrimaryAddress",
                  "    , PERSONALADDRESS.ADDR_LINE_2 as PrimaryAddressLine2",
                  "    , PERSONALADDRESS.CITY as PrimaryAddressCity",
                  "    , PERSONALADDRESS.STATE as PrimaryAddressProvinceState",
                  "    , PERSONALADDRESS.COUNTRY as PrimaryAddressCountry",
                  "    , PERSONALADDRESS.ZIPCODE as PrimaryPostalZip",
                  "    , CONTACT.CUST_STAT_CD as Status",
                  "    , CONTACTX.ATTRIB_12 as StatusDate",
                  "    , CONTACT.CUST_END_DT as StatusExpiryDate",
                  "    , CONTACTX.ATTRIB_01 as Reason",
                  "    , CONTACT.CUST_SINCE_DT as CustomerSince",
                  "    , CONTACT.CONSUMER_FLG as ConsumerFlag",
                  "    , CONTACT.X_TRAVEL_UNVERIFIED_FLG as UnverifiedFlag",
                  "    , CONTACT.COMMENTS as Comments",
                  "    , CONTACT.PREF_COMM_MEDIA_CD as PreferredCommunications",
                  "    , CONTACT.CREATED as Created",
                  "    , CONTACT.CREATED_BY as CreatedBy",
                  "    , CONTACT.DB_LAST_UPD as LastUpdatedThisDatabase",
                  "    , CONTACT.LAST_UPD as LastUpdated",
                  "    , CONTACT.LAST_UPD_BY as LastUpdatedBy",
                  "from SIEBEL_DEV.S_CONTACT CONTACT",
                  "left outer join SIEBEL_DEV.S_PER_COMM_ADDR PHONE",
                  "    on CONTACT.PR_ALT_PH_NUM_ID = PHONE.ROW_ID",
                  "left outer join SIEBEL_DEV.S_PER_COMM_ADDR EMAIL ",
                  "    on CONTACT.PR_EMAIL_ADDR_ID = PHONE.ROW_ID",
                  "left outer join SIEBEL_DEV.S_ADDR_PER PERSONALADDRESS",
                  "    on CONTACT.PR_PER_ADDR_ID = PERSONALADDRESS.ROW_ID",
                  "left outer join SIEBEL_DEV.S_CONTACT_X CONTACTX ",
                  "    on CONTACT.ROW_ID = CONTACTX.ROW_ID",
                  "union",
                  "select 'NOREL' as ContactID",
                  "    , 0 as CustomerNumber",
                  "    , 'NR' as Mr_Ms",
                  "    , 'NOREL' as LastName",
                  "    , 'NOREL' as FirstName",
                  "    , 'NOREL' as MiddleName",
                  "    , '0' as PrimaryPhone",
                  "    , 'NOREL' as PrimaryEmail",
                  "    , 'NOREL' as PrimaryAddress",
                  "    , 'NOREL' as PrimaryAddressLine2",
                  "    , 'NOREL' as PrimaryAddressCity",
                  "    , 'NOREL' as PrimaryAddressProvinceState",
                  "    , 'NOREL' as PrimaryAddressCountry",
                  "    , 'NOREL' as PrimaryPostalZip",
                  "    , 'NOREL' as Status",
                  "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as StatusDate",
                  "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as StatusExpiryDate",
                  "    , 'NOREL' as Reason",
                  "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as CustomerSince",
                  "    , '0' as ConsumerFlag",
                  "    , '0' as UnverifiedFlag",
                  "    , 'NOREL' as Comments",
                  "    , 'NOREL' as PreferredCommunications",
                  "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as Created",
                  "    , 'NOREL' as CreatedBy",
                  "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as LastUpdatedThisDatabase",
                  "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as LastUpdated",
                  "    , 'NOREL' as LastUpdatedBy from dual</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "    CONTACT.ROW_ID as ContactID",
              "    , CONTACTX.ATTRIB_14 as CustomerNumber",
              "    , CONTACT.PER_TITLE as Mr_Ms",
              "    , CONTACT.LAST_NAME as LastName",
              "    , CONTACT.FST_NAME as FirstName",
              "    , CONTACT.MID_NAME as MiddleName",
              "    , PHONE.ADDR as PrimaryPhone",
              "    , EMAIL.ADDR as PrimaryEmail",
              "    , PERSONALADDRESS.ADDR as PrimaryAddress",
              "    , PERSONALADDRESS.ADDR_LINE_2 as PrimaryAddressLine2",
              "    , PERSONALADDRESS.CITY as PrimaryAddressCity",
              "    , PERSONALADDRESS.STATE as PrimaryAddressProvinceState",
              "    , PERSONALADDRESS.COUNTRY as PrimaryAddressCountry",
              "    , PERSONALADDRESS.ZIPCODE as PrimaryPostalZip",
              "    , CONTACT.CUST_STAT_CD as Status",
              "    , CONTACTX.ATTRIB_12 as StatusDate",
              "    , CONTACT.CUST_END_DT as StatusExpiryDate",
              "    , CONTACTX.ATTRIB_01 as Reason",
              "    , CONTACT.CUST_SINCE_DT as CustomerSince",
              "    , CONTACT.CONSUMER_FLG as ConsumerFlag",
              "    , CONTACT.X_TRAVEL_UNVERIFIED_FLG as UnverifiedFlag",
              "    , CONTACT.COMMENTS as Comments",
              "    , CONTACT.PREF_COMM_MEDIA_CD as PreferredCommunications",
              "    , CONTACT.CREATED as Created",
              "    , CONTACT.CREATED_BY as CreatedBy",
              "    , CONTACT.DB_LAST_UPD as LastUpdatedThisDatabase",
              "    , CONTACT.LAST_UPD as LastUpdated",
              "    , CONTACT.LAST_UPD_BY as LastUpdatedBy",
              "from SIEBEL_DEV.S_CONTACT CONTACT",
              "left outer join SIEBEL_DEV.S_PER_COMM_ADDR PHONE",
              "    on CONTACT.PR_ALT_PH_NUM_ID = PHONE.ROW_ID",
              "left outer join SIEBEL_DEV.S_PER_COMM_ADDR EMAIL ",
              "    on CONTACT.PR_EMAIL_ADDR_ID = PHONE.ROW_ID",
              "left outer join SIEBEL_DEV.S_ADDR_PER PERSONALADDRESS",
              "    on CONTACT.PR_PER_ADDR_ID = PERSONALADDRESS.ROW_ID",
              "left outer join SIEBEL_DEV.S_CONTACT_X CONTACTX ",
              "    on CONTACT.ROW_ID = CONTACTX.ROW_ID",
              "union",
              "select 'NOREL' as ContactID",
              "    , 0 as CustomerNumber",
              "    , 'NR' as Mr_Ms",
              "    , 'NOREL' as LastName",
              "    , 'NOREL' as FirstName",
              "    , 'NOREL' as MiddleName",
              "    , '0' as PrimaryPhone",
              "    , 'NOREL' as PrimaryEmail",
              "    , 'NOREL' as PrimaryAddress",
              "    , 'NOREL' as PrimaryAddressLine2",
              "    , 'NOREL' as PrimaryAddressCity",
              "    , 'NOREL' as PrimaryAddressProvinceState",
              "    , 'NOREL' as PrimaryAddressCountry",
              "    , 'NOREL' as PrimaryPostalZip",
              "    , 'NOREL' as Status",
              "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as StatusDate",
              "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as StatusExpiryDate",
              "    , 'NOREL' as Reason",
              "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as CustomerSince",
              "    , '0' as ConsumerFlag",
              "    , '0' as UnverifiedFlag",
              "    , 'NOREL' as Comments",
              "    , 'NOREL' as PreferredCommunications",
              "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as Created",
              "    , 'NOREL' as CreatedBy",
              "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as LastUpdatedThisDatabase",
              "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as LastUpdated",
              "    , 'NOREL' as LastUpdatedBy from dual"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimContact"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "    CONTACT.ROW_ID as ContactID",
              "    , CONTACTX.ATTRIB_14 as CustomerNumber",
              "    , CONTACT.PER_TITLE as Mr_Ms",
              "    , CONTACT.LAST_NAME as LastName",
              "    , CONTACT.FST_NAME as FirstName",
              "    , CONTACT.MID_NAME as MiddleName",
              "    , PHONE.ADDR as PrimaryPhone",
              "    , EMAIL.ADDR as PrimaryEmail",
              "    , PERSONALADDRESS.ADDR as PrimaryAddress",
              "    , PERSONALADDRESS.ADDR_LINE_2 as PrimaryAddressLine2",
              "    , PERSONALADDRESS.CITY as PrimaryAddressCity",
              "    , PERSONALADDRESS.STATE as PrimaryAddressProvinceState",
              "    , PERSONALADDRESS.COUNTRY as PrimaryAddressCountry",
              "    , PERSONALADDRESS.ZIPCODE as PrimaryPostalZip",
              "    , CONTACT.CUST_STAT_CD as Status",
              "    , CONTACTX.ATTRIB_12 as StatusDate",
              "    , CONTACT.CUST_END_DT as StatusExpiryDate",
              "    , CONTACTX.ATTRIB_01 as Reason",
              "    , CONTACT.CUST_SINCE_DT as CustomerSince",
              "    , CONTACT.CONSUMER_FLG as ConsumerFlag",
              "    , CONTACT.X_TRAVEL_UNVERIFIED_FLG as UnverifiedFlag",
              "    , CONTACT.COMMENTS as Comments",
              "    , CONTACT.PREF_COMM_MEDIA_CD as PreferredCommunications",
              "    , CONTACT.CREATED as Created",
              "    , CONTACT.CREATED_BY as CreatedBy",
              "    , CONTACT.DB_LAST_UPD as LastUpdatedThisDatabase",
              "    , CONTACT.LAST_UPD as LastUpdated",
              "    , CONTACT.LAST_UPD_BY as LastUpdatedBy",
              "from SIEBEL_DEV.S_CONTACT CONTACT",
              "left outer join SIEBEL_DEV.S_PER_COMM_ADDR PHONE",
              "    on CONTACT.PR_ALT_PH_NUM_ID = PHONE.ROW_ID",
              "left outer join SIEBEL_DEV.S_PER_COMM_ADDR EMAIL ",
              "    on CONTACT.PR_EMAIL_ADDR_ID = PHONE.ROW_ID",
              "left outer join SIEBEL_DEV.S_ADDR_PER PERSONALADDRESS",
              "    on CONTACT.PR_PER_ADDR_ID = PERSONALADDRESS.ROW_ID",
              "left outer join SIEBEL_DEV.S_CONTACT_X CONTACTX ",
              "    on CONTACT.ROW_ID = CONTACTX.ROW_ID",
              "union",
              "select 'NOREL' as ContactID",
              "    , 0 as CustomerNumber",
              "    , 'NR' as Mr_Ms",
              "    , 'NOREL' as LastName",
              "    , 'NOREL' as FirstName",
              "    , 'NOREL' as MiddleName",
              "    , '0' as PrimaryPhone",
              "    , 'NOREL' as PrimaryEmail",
              "    , 'NOREL' as PrimaryAddress",
              "    , 'NOREL' as PrimaryAddressLine2",
              "    , 'NOREL' as PrimaryAddressCity",
              "    , 'NOREL' as PrimaryAddressProvinceState",
              "    , 'NOREL' as PrimaryAddressCountry",
              "    , 'NOREL' as PrimaryPostalZip",
              "    , 'NOREL' as Status",
              "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as StatusDate",
              "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as StatusExpiryDate",
              "    , 'NOREL' as Reason",
              "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as CustomerSince",
              "    , '0' as ConsumerFlag",
              "    , '0' as UnverifiedFlag",
              "    , 'NOREL' as Comments",
              "    , 'NOREL' as PreferredCommunications",
              "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as Created",
              "    , 'NOREL' as CreatedBy",
              "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as LastUpdatedThisDatabase",
              "    , TO_DATE('2900-01-01', 'YYYY-MM-DD') as LastUpdated",
              "    , 'NOREL' as LastUpdatedBy from dual</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "dimSubscription",
        "columns": [
          {
            "name": "SUBSCRIPTIONID",
            "dataType": "string",
            "sourceColumn": "SUBSCRIPTIONID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "TYPE",
            "dataType": "string",
            "sourceColumn": "TYPE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DESCRIPTION",
            "dataType": "string",
            "sourceColumn": "DESCRIPTION",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SERVICENOTICEGROUP",
            "dataType": "string",
            "sourceColumn": "SERVICENOTICEGROUP",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SERVICENOTICEROUTEID",
            "dataType": "string",
            "sourceColumn": "SERVICENOTICEROUTEID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SERVICENOTICEROUTE",
            "dataType": "string",
            "sourceColumn": "SERVICENOTICEROUTE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "CONTACTMETHOD",
            "dataType": "string",
            "sourceColumn": "CONTACTMETHOD",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SOURCE",
            "dataType": "string",
            "sourceColumn": "SOURCE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "COMMENTS",
            "dataType": "string",
            "sourceColumn": "COMMENTS",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "dimSubscription",
            "dataView": "full",
            "source": {
              "query": [
                "select ",
                "    SUBSCRIPTION.ROW_ID as SubscriptionID",
                "    , SUBSCRIPTION.SUBTYPE_CD as Type",
                "    , SUBSCRIPTION.DESC_TEXT as Description",
                "    , SUBSCRIPTION.X_BCF_SUBS_GROUP as ServiceNoticeGroup",
                "    , SUBSCRIPTION.SEG_TYPE_CD as ServiceNoticeRouteID ",
                "    , SUBSCRIPTION.X_BCF_SUBS_ROUTE as ServiceNoticeRoute",
                "    , SUBSCRIPTION.MATCH_TYPE_CD as ContactMethod",
                "    , SUBSCRIPTION.FILE_SRC_TYPE as Source",
                "    , SUBSCRIPTION.NAME as Comments",
                "    from SIEBEL_DEV.S_CALL_LST SUBSCRIPTION",
                "union",
                "select ",
                "    'NOREL' as SubscriptionID",
                "    , 'NOREL' as Type",
                "    , 'NOREL' as Description",
                "    , 'NOREL' as ServiceNoticeGroup",
                "    , 'NOREL' as ServiceNoticeRouteID ",
                "    , 'NOREL' as ServiceNoticeRoute",
                "    , 'NOREL' as ContactMethod",
                "    , 'NOREL' as Source",
                "    , 'NOREL' as Comments",
                "from dual"
              ],
              "dataSource": "Oracle scan.dev01.rac.bcferries.corp"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "    SUBSCRIPTION.ROW_ID as SubscriptionID",
                  "    , SUBSCRIPTION.SUBTYPE_CD as Type",
                  "    , SUBSCRIPTION.DESC_TEXT as Description",
                  "    , SUBSCRIPTION.X_BCF_SUBS_GROUP as ServiceNoticeGroup",
                  "    , SUBSCRIPTION.SEG_TYPE_CD as ServiceNoticeRouteID ",
                  "    , SUBSCRIPTION.X_BCF_SUBS_ROUTE as ServiceNoticeRoute",
                  "    , SUBSCRIPTION.MATCH_TYPE_CD as ContactMethod",
                  "    , SUBSCRIPTION.FILE_SRC_TYPE as Source",
                  "    , SUBSCRIPTION.NAME as Comments",
                  "    from SIEBEL_DEV.S_CALL_LST SUBSCRIPTION",
                  "union",
                  "select ",
                  "    'NOREL' as SubscriptionID",
                  "    , 'NOREL' as Type",
                  "    , 'NOREL' as Description",
                  "    , 'NOREL' as ServiceNoticeGroup",
                  "    , 'NOREL' as ServiceNoticeRouteID ",
                  "    , 'NOREL' as ServiceNoticeRoute",
                  "    , 'NOREL' as ContactMethod",
                  "    , 'NOREL' as Source",
                  "    , 'NOREL' as Comments",
                  "from dual</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "    SUBSCRIPTION.ROW_ID as SubscriptionID",
              "    , SUBSCRIPTION.SUBTYPE_CD as Type",
              "    , SUBSCRIPTION.DESC_TEXT as Description",
              "    , SUBSCRIPTION.X_BCF_SUBS_GROUP as ServiceNoticeGroup",
              "    , SUBSCRIPTION.SEG_TYPE_CD as ServiceNoticeRouteID ",
              "    , SUBSCRIPTION.X_BCF_SUBS_ROUTE as ServiceNoticeRoute",
              "    , SUBSCRIPTION.MATCH_TYPE_CD as ContactMethod",
              "    , SUBSCRIPTION.FILE_SRC_TYPE as Source",
              "    , SUBSCRIPTION.NAME as Comments",
              "    from SIEBEL_DEV.S_CALL_LST SUBSCRIPTION",
              "union",
              "select ",
              "    'NOREL' as SubscriptionID",
              "    , 'NOREL' as Type",
              "    , 'NOREL' as Description",
              "    , 'NOREL' as ServiceNoticeGroup",
              "    , 'NOREL' as ServiceNoticeRouteID ",
              "    , 'NOREL' as ServiceNoticeRoute",
              "    , 'NOREL' as ContactMethod",
              "    , 'NOREL' as Source",
              "    , 'NOREL' as Comments",
              "from dual"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimSubscription"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "    SUBSCRIPTION.ROW_ID as SubscriptionID",
              "    , SUBSCRIPTION.SUBTYPE_CD as Type",
              "    , SUBSCRIPTION.DESC_TEXT as Description",
              "    , SUBSCRIPTION.X_BCF_SUBS_GROUP as ServiceNoticeGroup",
              "    , SUBSCRIPTION.SEG_TYPE_CD as ServiceNoticeRouteID ",
              "    , SUBSCRIPTION.X_BCF_SUBS_ROUTE as ServiceNoticeRoute",
              "    , SUBSCRIPTION.MATCH_TYPE_CD as ContactMethod",
              "    , SUBSCRIPTION.FILE_SRC_TYPE as Source",
              "    , SUBSCRIPTION.NAME as Comments",
              "    from SIEBEL_DEV.S_CALL_LST SUBSCRIPTION",
              "union",
              "select ",
              "    'NOREL' as SubscriptionID",
              "    , 'NOREL' as Type",
              "    , 'NOREL' as Description",
              "    , 'NOREL' as ServiceNoticeGroup",
              "    , 'NOREL' as ServiceNoticeRouteID ",
              "    , 'NOREL' as ServiceNoticeRoute",
              "    , 'NOREL' as ContactMethod",
              "    , 'NOREL' as Source",
              "    , 'NOREL' as Comments",
              "from dual</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "factSubscription",
        "columns": [
          {
            "name": "SUBSCRIPTIONDATE",
            "dataType": "dateTime",
            "sourceColumn": "SUBSCRIPTIONDATE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "SUBSCRIPTIONTIME",
            "dataType": "dateTime",
            "sourceColumn": "SUBSCRIPTIONTIME",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "USERID",
            "dataType": "string",
            "sourceColumn": "USERID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "OPTOUTFULFILLEDDATE",
            "dataType": "dateTime",
            "sourceColumn": "OPTOUTFULFILLEDDATE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "OPTOUTFULFILLEDTIME",
            "dataType": "dateTime",
            "sourceColumn": "OPTOUTFULFILLEDTIME",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "OPTOUTDATE",
            "dataType": "dateTime",
            "sourceColumn": "OPTOUTDATE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "OPTOUTTIME",
            "dataType": "dateTime",
            "sourceColumn": "OPTOUTTIME",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "SUBSCRIPTIONFLAG",
            "dataType": "string",
            "sourceColumn": "SUBSCRIPTIONFLAG",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "AGREEMENTID",
            "dataType": "string",
            "sourceColumn": "AGREEMENTID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "CONTACTID",
            "dataType": "string",
            "sourceColumn": "CONTACTID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ACCOUNTID",
            "dataType": "string",
            "sourceColumn": "ACCOUNTID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "FSUBSCRIPTIONID",
            "dataType": "string",
            "sourceColumn": "FSUBSCRIPTIONID"
          },
          {
            "name": "SUBSCRIPTIONID",
            "dataType": "string",
            "sourceColumn": "SUBSCRIPTIONID"
          },
          {
            "type": "calculated",
            "name": "ContactIDNoRel",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "IF( CALCULATE( ",
              "        COUNTROWS(dimContact) , ",
              "        FILTER(DimContact, ",
              "        dimContact[ContactID] = factSubscription[ContactID]) ) = 0, ",
              "    \"NOREL\", ",
              "      CALCULATE( ",
              "        FIRSTNONBLANK(dimContact[ContactID], 1) ,  FILTER(dimContact, ",
              "       dimContact[ContactID]  = factSubscription[ContactID])))"
            ]
          }
        ],
        "partitions": [
          {
            "name": "factSubscription",
            "dataView": "full",
            "source": {
              "query": [
                "select ",
                "    SUBSCRIPTION.ROW_ID as fSubscriptionID",
                "    ,SUBSCRIPTION.PURCH_DT as SubscriptionDate",
                "    , SUBSCRIPTION.X_SUBSCRIPTION_TIME as SubscriptionTime",
                "    ,SUBSCRIPTION.CREATED_BY as UserID",
                "    , SUBSCRIPTION.X_OPT_OUT_FUL_DATE as OptOutFulfilledDate",
                "    , SUBSCRIPTION.X_OPT_OUT_FUL_TIME as OptOutFulfilledTime",
                "    , SUBSCRIPTION.EXPIRATION_DT as OptOutDate",
                "    , SUBSCRIPTION.X_OPT_OUT_TIME as OptOutTime ",
                "    , SUBSCRIPTION.INCL_EMP_FLG as SubscriptionFlag",
                "    , SUBSCRIPTION.X_AGREE_ID as AgreementId",
                "    , SUBSCRIPTION.X_CONTACT_ID as ContactId",
                "    , SUBSCRIPTION.X_ACCNT_ID as AccountId",
                "    , SUBSCRIPTION.ROW_ID as SubscriptionID",
                "    from SIEBEL_DEV.S_CALL_LST SUBSCRIPTION"
              ],
              "dataSource": "Oracle scan.dev01.rac.bcferries.corp"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "    SUBSCRIPTION.ROW_ID as fSubscriptionID",
                  "    ,SUBSCRIPTION.PURCH_DT as SubscriptionDate",
                  "    , SUBSCRIPTION.X_SUBSCRIPTION_TIME as SubscriptionTime",
                  "    ,SUBSCRIPTION.CREATED_BY as UserID",
                  "    , SUBSCRIPTION.X_OPT_OUT_FUL_DATE as OptOutFulfilledDate",
                  "    , SUBSCRIPTION.X_OPT_OUT_FUL_TIME as OptOutFulfilledTime",
                  "    , SUBSCRIPTION.EXPIRATION_DT as OptOutDate",
                  "    , SUBSCRIPTION.X_OPT_OUT_TIME as OptOutTime ",
                  "    , SUBSCRIPTION.INCL_EMP_FLG as SubscriptionFlag",
                  "    , SUBSCRIPTION.X_AGREE_ID as AgreementId",
                  "    , SUBSCRIPTION.X_CONTACT_ID as ContactId",
                  "    , SUBSCRIPTION.X_ACCNT_ID as AccountId",
                  "    , SUBSCRIPTION.ROW_ID as SubscriptionID",
                  "    from SIEBEL_DEV.S_CALL_LST SUBSCRIPTION</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "    SUBSCRIPTION.ROW_ID as fSubscriptionID",
              "    ,SUBSCRIPTION.PURCH_DT as SubscriptionDate",
              "    , SUBSCRIPTION.X_SUBSCRIPTION_TIME as SubscriptionTime",
              "    ,SUBSCRIPTION.CREATED_BY as UserID",
              "    , SUBSCRIPTION.X_OPT_OUT_FUL_DATE as OptOutFulfilledDate",
              "    , SUBSCRIPTION.X_OPT_OUT_FUL_TIME as OptOutFulfilledTime",
              "    , SUBSCRIPTION.EXPIRATION_DT as OptOutDate",
              "    , SUBSCRIPTION.X_OPT_OUT_TIME as OptOutTime ",
              "    , SUBSCRIPTION.INCL_EMP_FLG as SubscriptionFlag",
              "    , SUBSCRIPTION.X_AGREE_ID as AgreementId",
              "    , SUBSCRIPTION.X_CONTACT_ID as ContactId",
              "    , SUBSCRIPTION.X_ACCNT_ID as AccountId",
              "    , SUBSCRIPTION.ROW_ID as SubscriptionID",
              "    from SIEBEL_DEV.S_CALL_LST SUBSCRIPTION"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "factSubscription"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "    SUBSCRIPTION.ROW_ID as fSubscriptionID",
              "    ,SUBSCRIPTION.PURCH_DT as SubscriptionDate",
              "    , SUBSCRIPTION.X_SUBSCRIPTION_TIME as SubscriptionTime",
              "    ,SUBSCRIPTION.CREATED_BY as UserID",
              "    , SUBSCRIPTION.X_OPT_OUT_FUL_DATE as OptOutFulfilledDate",
              "    , SUBSCRIPTION.X_OPT_OUT_FUL_TIME as OptOutFulfilledTime",
              "    , SUBSCRIPTION.EXPIRATION_DT as OptOutDate",
              "    , SUBSCRIPTION.X_OPT_OUT_TIME as OptOutTime ",
              "    , SUBSCRIPTION.INCL_EMP_FLG as SubscriptionFlag",
              "    , SUBSCRIPTION.X_AGREE_ID as AgreementId",
              "    , SUBSCRIPTION.X_CONTACT_ID as ContactId",
              "    , SUBSCRIPTION.X_ACCNT_ID as AccountId",
              "    , SUBSCRIPTION.ROW_ID as SubscriptionID",
              "    from SIEBEL_DEV.S_CALL_LST SUBSCRIPTION</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "factAgreement",
        "columns": [
          {
            "name": "AGREEMENTSTARTDATE",
            "dataType": "dateTime",
            "sourceColumn": "AGREEMENTSTARTDATE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "AGREEMENTENDDATE",
            "dataType": "dateTime",
            "sourceColumn": "AGREEMENTENDDATE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "CONTACTID",
            "dataType": "string",
            "sourceColumn": "CONTACTID"
          },
          {
            "name": "FAGREEMENTID",
            "dataType": "string",
            "sourceColumn": "FAGREEMENTID"
          },
          {
            "name": "AGREEMENTID",
            "dataType": "string",
            "sourceColumn": "AGREEMENTID"
          },
          {
            "type": "calculated",
            "name": "ContactIDNoRel",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "IF( CALCULATE( ",
              "        COUNTROWS(dimContact) , ",
              "        FILTER(DimContact, ",
              "        dimContact[ContactID] = factAgreement[ContactID]) ) = 0, ",
              "    \"NOREL\", ",
              "      CALCULATE( ",
              "        FIRSTNONBLANK(dimContact[ContactID], 1) ,  FILTER(dimContact, ",
              "       dimContact[ContactID]  = factAgreement[ContactID])))"
            ]
          }
        ],
        "partitions": [
          {
            "name": "factAgreement",
            "dataView": "full",
            "source": {
              "query": [
                "select ",
                "    AGREEMENT.ROW_ID as fAgreementId",
                "    , AGREEMENT.EFF_START_DT as AgreementStartDate",
                "    , AGREEMENT.EFF_END_DT as AgreementEndDate",
                "    , AGREEMENT.ROW_ID as AgreementId",
                "    , CONTACT.ROW_ID as ContactID",
                "from SIEBEL_DEV.S_DOC_AGREE AGREEMENT",
                "left join SIEBEL_DEV.S_CONTACT CONTACT",
                "        on AGREEMENT.ROW_ID = CONTACT.X_AGREE_ID"
              ],
              "dataSource": "Oracle scan.dev01.rac.bcferries.corp"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "    AGREEMENT.ROW_ID as fAgreementId",
                  "    , AGREEMENT.EFF_START_DT as AgreementStartDate",
                  "    , AGREEMENT.EFF_END_DT as AgreementEndDate",
                  "    , AGREEMENT.ROW_ID as AgreementId",
                  "    , CONTACT.ROW_ID as ContactID",
                  "from SIEBEL_DEV.S_DOC_AGREE AGREEMENT",
                  "left join SIEBEL_DEV.S_CONTACT CONTACT",
                  "        on AGREEMENT.ROW_ID = CONTACT.X_AGREE_ID</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "    AGREEMENT.ROW_ID as fAgreementId",
              "    , AGREEMENT.EFF_START_DT as AgreementStartDate",
              "    , AGREEMENT.EFF_END_DT as AgreementEndDate",
              "    , AGREEMENT.ROW_ID as AgreementId",
              "    , CONTACT.ROW_ID as ContactID",
              "from SIEBEL_DEV.S_DOC_AGREE AGREEMENT",
              "left join SIEBEL_DEV.S_CONTACT CONTACT",
              "        on AGREEMENT.ROW_ID = CONTACT.X_AGREE_ID"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "factAgreement"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "    AGREEMENT.ROW_ID as fAgreementId",
              "    , AGREEMENT.EFF_START_DT as AgreementStartDate",
              "    , AGREEMENT.EFF_END_DT as AgreementEndDate",
              "    , AGREEMENT.ROW_ID as AgreementId",
              "    , CONTACT.ROW_ID as ContactID",
              "from SIEBEL_DEV.S_DOC_AGREE AGREEMENT",
              "left join SIEBEL_DEV.S_CONTACT CONTACT",
              "        on AGREEMENT.ROW_ID = CONTACT.X_AGREE_ID</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "dimAgreement",
        "columns": [
          {
            "name": "AGREEMENTID",
            "dataType": "string",
            "sourceColumn": "AGREEMENTID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "AGREEMENTNUMBER",
            "dataType": "string",
            "sourceColumn": "AGREEMENTNUMBER",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "NAME",
            "dataType": "string",
            "sourceColumn": "NAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "AMENDMENT",
            "dataType": "string",
            "sourceColumn": "AMENDMENT",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "AGREEMENTTYPE",
            "dataType": "string",
            "sourceColumn": "AGREEMENTTYPE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "AGREEMENTSUBTYPE",
            "dataType": "string",
            "sourceColumn": "AGREEMENTSUBTYPE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "AGREEMENTSTATUS",
            "dataType": "string",
            "sourceColumn": "AGREEMENTSTATUS",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "REVISIONNUMBER",
            "dataType": "double",
            "sourceColumn": "REVISIONNUMBER",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "NOTES",
            "dataType": "string",
            "sourceColumn": "NOTES",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "dimAgreement",
            "dataView": "full",
            "source": {
              "query": [
                "select ",
                "    AGREEMENT.ROW_ID as AgreementId",
                "    , AGREEMENT.AGREE_NUM as AgreementNumber",
                "    , AGREEMENT.NAME as Name",
                "    , AGREEMENT.AMENDMENT as Amendment",
                "    , AGREEMENT.AGREE_CD as AgreementType",
                "    , X_AGREE_SUB_CD as AgreementSubtype",
                "    , AGREEMENT.STAT_CD as AgreementStatus",
                "    , AGREEMENT.REV_NUM as RevisionNumber",
                "    , AGREEMENT.DESC_TEXT as Notes",
                "from SIEBEL_DEV.S_DOC_AGREE AGREEMENT",
                "union",
                "select ",
                "    'NOREL' as AgreementId",
                "    , '0' as AgreementNumber",
                "    , 'NOREL' as Name",
                "    , 'NOREL' as Amendment",
                "    , 'NOREL' as AgreementType",
                "    , 'NOREL' as AgreementSubtype",
                "    , 'NOREL' as AgreementStatus",
                "    , 0 as RevisionNumber",
                "    , 'NOREL' as Notes",
                "from dual"
              ],
              "dataSource": "Oracle scan.dev01.rac.bcferries.corp"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "    AGREEMENT.ROW_ID as AgreementId",
                  "    , AGREEMENT.AGREE_NUM as AgreementNumber",
                  "    , AGREEMENT.NAME as Name",
                  "    , AGREEMENT.AMENDMENT as Amendment",
                  "    , AGREEMENT.AGREE_CD as AgreementType",
                  "    , X_AGREE_SUB_CD as AgreementSubtype",
                  "    , AGREEMENT.STAT_CD as AgreementStatus",
                  "    , AGREEMENT.REV_NUM as RevisionNumber",
                  "    , AGREEMENT.DESC_TEXT as Notes",
                  "from SIEBEL_DEV.S_DOC_AGREE AGREEMENT",
                  "union",
                  "select ",
                  "    'NOREL' as AgreementId",
                  "    , '0' as AgreementNumber",
                  "    , 'NOREL' as Name",
                  "    , 'NOREL' as Amendment",
                  "    , 'NOREL' as AgreementType",
                  "    , 'NOREL' as AgreementSubtype",
                  "    , 'NOREL' as AgreementStatus",
                  "    , 0 as RevisionNumber",
                  "    , 'NOREL' as Notes",
                  "from dual</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "    AGREEMENT.ROW_ID as AgreementId",
              "    , AGREEMENT.AGREE_NUM as AgreementNumber",
              "    , AGREEMENT.NAME as Name",
              "    , AGREEMENT.AMENDMENT as Amendment",
              "    , AGREEMENT.AGREE_CD as AgreementType",
              "    , X_AGREE_SUB_CD as AgreementSubtype",
              "    , AGREEMENT.STAT_CD as AgreementStatus",
              "    , AGREEMENT.REV_NUM as RevisionNumber",
              "    , AGREEMENT.DESC_TEXT as Notes",
              "from SIEBEL_DEV.S_DOC_AGREE AGREEMENT",
              "union",
              "select ",
              "    'NOREL' as AgreementId",
              "    , '0' as AgreementNumber",
              "    , 'NOREL' as Name",
              "    , 'NOREL' as Amendment",
              "    , 'NOREL' as AgreementType",
              "    , 'NOREL' as AgreementSubtype",
              "    , 'NOREL' as AgreementStatus",
              "    , 0 as RevisionNumber",
              "    , 'NOREL' as Notes",
              "from dual"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimAgreement"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "    AGREEMENT.ROW_ID as AgreementId",
              "    , AGREEMENT.AGREE_NUM as AgreementNumber",
              "    , AGREEMENT.NAME as Name",
              "    , AGREEMENT.AMENDMENT as Amendment",
              "    , AGREEMENT.AGREE_CD as AgreementType",
              "    , X_AGREE_SUB_CD as AgreementSubtype",
              "    , AGREEMENT.STAT_CD as AgreementStatus",
              "    , AGREEMENT.REV_NUM as RevisionNumber",
              "    , AGREEMENT.DESC_TEXT as Notes",
              "from SIEBEL_DEV.S_DOC_AGREE AGREEMENT",
              "union",
              "select ",
              "    'NOREL' as AgreementId",
              "    , '0' as AgreementNumber",
              "    , 'NOREL' as Name",
              "    , 'NOREL' as Amendment",
              "    , 'NOREL' as AgreementType",
              "    , 'NOREL' as AgreementSubtype",
              "    , 'NOREL' as AgreementStatus",
              "    , 0 as RevisionNumber",
              "    , 'NOREL' as Notes",
              "from dual</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "factAddress",
        "columns": [
          {
            "name": "FADDRESSID",
            "dataType": "string",
            "sourceColumn": "FADDRESSID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "CONTACTID",
            "dataType": "string",
            "sourceColumn": "CONTACTID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ACCOUNTID",
            "dataType": "string",
            "sourceColumn": "ACCOUNTID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ADDRESSID",
            "dataType": "string",
            "sourceColumn": "ADDRESSID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "CREATEDDATE",
            "dataType": "dateTime",
            "sourceColumn": "CREATEDDATE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "CREATEDBYUSERID",
            "dataType": "string",
            "sourceColumn": "CREATEDBYUSERID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "LASTUPDATEDDATE",
            "dataType": "dateTime",
            "sourceColumn": "LASTUPDATEDDATE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "LASTUPDATEDUSERID",
            "dataType": "string",
            "sourceColumn": "LASTUPDATEDUSERID",
            "sourceProviderType": "VarChar"
          },
          {
            "type": "calculated",
            "name": "ContactIDNoRel",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "IF( CALCULATE( ",
              "        COUNTROWS(dimContact) , ",
              "        FILTER(DimContact, ",
              "        dimContact[ContactID] = factAddress[ContactID]) ) = 0, ",
              "    \"NOREL\", ",
              "      CALCULATE( ",
              "        FIRSTNONBLANK(dimContact[ContactID], 1) ,  FILTER(dimContact, ",
              "       dimContact[ContactID]  = factAddress[ContactID])))"
            ]
          }
        ],
        "partitions": [
          {
            "name": "factAddress",
            "dataView": "full",
            "source": {
              "query": [
                "select",
                "    ROW_ID as fAddressID",
                "    , CONTACT_ID as ContactID",
                "    , ACCNT_ID as AccountID",
                "    , ADDR_PER_ID as AddressID",
                "    , CREATED as CreatedDate",
                "    , CREATED_BY as CreatedByUserID",
                "    , LAST_UPD as LastUpdatedDate",
                "    , LAST_UPD_BY as LastUpdatedUSerId",
                "    from SIEBEL_DEV.S_CON_ADDR"
              ],
              "dataSource": "Oracle scan.dev01.rac.bcferries.corp"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select",
                  "    ROW_ID as fAddressID",
                  "    , CONTACT_ID as ContactID",
                  "    , ACCNT_ID as AccountID",
                  "    , ADDR_PER_ID as AddressID",
                  "    , CREATED as CreatedDate",
                  "    , CREATED_BY as CreatedByUserID",
                  "    , LAST_UPD as LastUpdatedDate",
                  "    , LAST_UPD_BY as LastUpdatedUSerId",
                  "    from SIEBEL_DEV.S_CON_ADDR</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select",
              "    ROW_ID as fAddressID",
              "    , CONTACT_ID as ContactID",
              "    , ACCNT_ID as AccountID",
              "    , ADDR_PER_ID as AddressID",
              "    , CREATED as CreatedDate",
              "    , CREATED_BY as CreatedByUserID",
              "    , LAST_UPD as LastUpdatedDate",
              "    , LAST_UPD_BY as LastUpdatedUSerId",
              "    from SIEBEL_DEV.S_CON_ADDR"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "factAddress"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select",
              "    ROW_ID as fAddressID",
              "    , CONTACT_ID as ContactID",
              "    , ACCNT_ID as AccountID",
              "    , ADDR_PER_ID as AddressID",
              "    , CREATED as CreatedDate",
              "    , CREATED_BY as CreatedByUserID",
              "    , LAST_UPD as LastUpdatedDate",
              "    , LAST_UPD_BY as LastUpdatedUSerId",
              "    from SIEBEL_DEV.S_CON_ADDR</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "dimAddress",
        "columns": [
          {
            "name": "ADDRESSID",
            "dataType": "string",
            "sourceColumn": "ADDRESSID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "NAME",
            "dataType": "string",
            "sourceColumn": "NAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ADDRESS",
            "dataType": "string",
            "sourceColumn": "ADDRESS",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ADDRESSLINE2",
            "dataType": "string",
            "sourceColumn": "ADDRESSLINE2",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "CITY",
            "dataType": "string",
            "sourceColumn": "CITY",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "COUNTRY",
            "dataType": "string",
            "sourceColumn": "COUNTRY",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PROVINCESTATE",
            "dataType": "string",
            "sourceColumn": "PROVINCESTATE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "POSTALZIP",
            "dataType": "string",
            "sourceColumn": "POSTALZIP",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "dimAddress",
            "dataView": "full",
            "source": {
              "query": [
                "select ",
                "    ROW_ID as AddressID",
                "    , ADDR_NAME as Name",
                "    , ADDR as Address",
                "    , ADDR_LINE_2 as AddressLine2",
                "    , CITY as City",
                "    , COUNTRY as Country",
                "    , STATE as ProvinceState",
                "    , ZIPCODE as PostalZip",
                "     from SIEBEL_DEV.S_ADDR_PER",
                "union",
                "select 'NOREL' as AddressID",
                "    , 'NOREL' as Name",
                "    , 'NOREL' as Address",
                "    , 'NOREL' as AddressLine2",
                "    , 'NOREL' as City",
                "    , 'NOREL' as Country",
                "    , 'NOREL' as ProvinceState",
                "    , 'NOREL' as PostalZip",
                "    from dual"
              ],
              "dataSource": "Oracle scan.dev01.rac.bcferries.corp"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "    ROW_ID as AddressID",
                  "    , ADDR_NAME as Name",
                  "    , ADDR as Address",
                  "    , ADDR_LINE_2 as AddressLine2",
                  "    , CITY as City",
                  "    , COUNTRY as Country",
                  "    , STATE as ProvinceState",
                  "    , ZIPCODE as PostalZip",
                  "     from SIEBEL_DEV.S_ADDR_PER",
                  "union",
                  "select 'NOREL' as AddressID",
                  "    , 'NOREL' as Name",
                  "    , 'NOREL' as Address",
                  "    , 'NOREL' as AddressLine2",
                  "    , 'NOREL' as City",
                  "    , 'NOREL' as Country",
                  "    , 'NOREL' as ProvinceState",
                  "    , 'NOREL' as PostalZip",
                  "    from dual</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "    ROW_ID as AddressID",
              "    , ADDR_NAME as Name",
              "    , ADDR as Address",
              "    , ADDR_LINE_2 as AddressLine2",
              "    , CITY as City",
              "    , COUNTRY as Country",
              "    , STATE as ProvinceState",
              "    , ZIPCODE as PostalZip",
              "     from SIEBEL_DEV.S_ADDR_PER",
              "union",
              "select 'NOREL' as AddressID",
              "    , 'NOREL' as Name",
              "    , 'NOREL' as Address",
              "    , 'NOREL' as AddressLine2",
              "    , 'NOREL' as City",
              "    , 'NOREL' as Country",
              "    , 'NOREL' as ProvinceState",
              "    , 'NOREL' as PostalZip",
              "    from dual"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimAddress"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "    ROW_ID as AddressID",
              "    , ADDR_NAME as Name",
              "    , ADDR as Address",
              "    , ADDR_LINE_2 as AddressLine2",
              "    , CITY as City",
              "    , COUNTRY as Country",
              "    , STATE as ProvinceState",
              "    , ZIPCODE as PostalZip",
              "     from SIEBEL_DEV.S_ADDR_PER",
              "union",
              "select 'NOREL' as AddressID",
              "    , 'NOREL' as Name",
              "    , 'NOREL' as Address",
              "    , 'NOREL' as AddressLine2",
              "    , 'NOREL' as City",
              "    , 'NOREL' as Country",
              "    , 'NOREL' as ProvinceState",
              "    , 'NOREL' as PostalZip",
              "    from dual</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "dimAccount",
        "columns": [
          {
            "name": "ACCOUNTID",
            "dataType": "string",
            "sourceColumn": "ACCOUNTID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "NAME",
            "dataType": "string",
            "sourceColumn": "NAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "LOCATION",
            "dataType": "string",
            "sourceColumn": "LOCATION",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ACCOUNTSTATUS",
            "dataType": "string",
            "sourceColumn": "ACCOUNTSTATUS",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "FINSACCOUNTNUMBER",
            "dataType": "string",
            "sourceColumn": "FINSACCOUNTNUMBER",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ACCOUNTSINCE",
            "dataType": "dateTime",
            "sourceColumn": "ACCOUNTSINCE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "REASONREF",
            "dataType": "string",
            "sourceColumn": "REASONREF",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "RESTRICTEDFLAG",
            "dataType": "string",
            "sourceColumn": "RESTRICTEDFLAG",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ACCOUNTSTATUSDATE",
            "dataType": "dateTime",
            "sourceColumn": "ACCOUNTSTATUSDATE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "STATUSEXPIRYDATE",
            "dataType": "dateTime",
            "sourceColumn": "STATUSEXPIRYDATE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "CSDACCOUNTFLAG",
            "dataType": "string",
            "sourceColumn": "CSDACCOUNTFLAG",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ACCOUNTWEBTYPE",
            "dataType": "string",
            "sourceColumn": "ACCOUNTWEBTYPE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "NOTIFY",
            "dataType": "dateTime",
            "sourceColumn": "NOTIFY",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          }
        ],
        "partitions": [
          {
            "name": "dimAccount",
            "dataView": "full",
            "source": {
              "query": [
                "select ",
                "        ACCOUNT.ROW_ID as AccountID",
                "        , ACCOUNT.NAME as Name",
                "        , ACCOUNT.LOC as Location",
                "        , ACCOUNT.CUST_STAT_CD as AccountStatus",
                "        , ACCOUNTX.ATTRIB_07 as FINSAccountNumber",
                "        , ACCOUNT.CUST_SINCE_DT as AccountSince",
                "        , ACCOUNTX.ATTRIB_40 as ReasonRef",
                "        , ACCOUNT.X_BCF_RESTRICTED_FLG as RestrictedFlag",
                "        , ACCOUNT.STAT_CHG_DT as AccountStatusDate",
                "        , ACCOUNTX.ATTRIB_29 as StatusExpiryDate",
                "        , ACCOUNT.X_BCF_CSD_ACCOUNT_FLAG as CSDAccountFlag",
                "        , ACCOUNT.X_BCF_ACC_WEB_TYPE as AccountWebType",
                "        , ACCOUNT.X_BCF_NOTIFY as Notify",
                "from SIEBEL_DEV.S_ORG_EXT ACCOUNT",
                "left join SIEBEL_DEV.S_ORG_EXT_X ACCOUNTX",
                "    on ACCOUNT.ROW_ID = ACCOUNTX.PAR_ROW_ID",
                "union",
                "select",
                "    'NOREL' as AccountID",
                "        , 'NOREL' as Name",
                "        , 'NOREL' as Location",
                "        , 'NOREL' as AccountStatus",
                "        , 'NOREL' as FINSAccountNumber",
                "        , TO_DATE('1900-01-01', 'YYYY-MM-DD') as AccountSince",
                "        , 'NOREL' as ReasonRef",
                "        , '0' as RestrictedFlag",
                "        , TO_DATE('1900-01-01', 'YYYY-MM-DD') as AccountStatusDate",
                "        , TO_DATE('1900-01-01', 'YYYY-MM-DD') as StatusExpiryDate",
                "        , '0' as CSDAccountFlag",
                "        , 'NOREL' as AccountWebType",
                "        , TO_DATE('1900-01-01', 'YYYY-MM-DD') as Notify",
                "    from dual"
              ],
              "dataSource": "Oracle scan.dev01.rac.bcferries.corp"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "        ACCOUNT.ROW_ID as AccountID",
                  "        , ACCOUNT.NAME as Name",
                  "        , ACCOUNT.LOC as Location",
                  "        , ACCOUNT.CUST_STAT_CD as AccountStatus",
                  "        , ACCOUNTX.ATTRIB_07 as FINSAccountNumber",
                  "        , ACCOUNT.CUST_SINCE_DT as AccountSince",
                  "        , ACCOUNTX.ATTRIB_40 as ReasonRef",
                  "        , ACCOUNT.X_BCF_RESTRICTED_FLG as RestrictedFlag",
                  "        , ACCOUNT.STAT_CHG_DT as AccountStatusDate",
                  "        , ACCOUNTX.ATTRIB_29 as StatusExpiryDate",
                  "        , ACCOUNT.X_BCF_CSD_ACCOUNT_FLAG as CSDAccountFlag",
                  "        , ACCOUNT.X_BCF_ACC_WEB_TYPE as AccountWebType",
                  "        , ACCOUNT.X_BCF_NOTIFY as Notify",
                  "from SIEBEL_DEV.S_ORG_EXT ACCOUNT",
                  "left join SIEBEL_DEV.S_ORG_EXT_X ACCOUNTX",
                  "    on ACCOUNT.ROW_ID = ACCOUNTX.PAR_ROW_ID",
                  "union",
                  "select",
                  "    'NOREL' as AccountID",
                  "        , 'NOREL' as Name",
                  "        , 'NOREL' as Location",
                  "        , 'NOREL' as AccountStatus",
                  "        , 'NOREL' as FINSAccountNumber",
                  "        , TO_DATE('1900-01-01', 'YYYY-MM-DD') as AccountSince",
                  "        , 'NOREL' as ReasonRef",
                  "        , '0' as RestrictedFlag",
                  "        , TO_DATE('1900-01-01', 'YYYY-MM-DD') as AccountStatusDate",
                  "        , TO_DATE('1900-01-01', 'YYYY-MM-DD') as StatusExpiryDate",
                  "        , '0' as CSDAccountFlag",
                  "        , 'NOREL' as AccountWebType",
                  "        , TO_DATE('1900-01-01', 'YYYY-MM-DD') as Notify",
                  "    from dual</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "        ACCOUNT.ROW_ID as AccountID",
              "        , ACCOUNT.NAME as Name",
              "        , ACCOUNT.LOC as Location",
              "        , ACCOUNT.CUST_STAT_CD as AccountStatus",
              "        , ACCOUNTX.ATTRIB_07 as FINSAccountNumber",
              "        , ACCOUNT.CUST_SINCE_DT as AccountSince",
              "        , ACCOUNTX.ATTRIB_40 as ReasonRef",
              "        , ACCOUNT.X_BCF_RESTRICTED_FLG as RestrictedFlag",
              "        , ACCOUNT.STAT_CHG_DT as AccountStatusDate",
              "        , ACCOUNTX.ATTRIB_29 as StatusExpiryDate",
              "        , ACCOUNT.X_BCF_CSD_ACCOUNT_FLAG as CSDAccountFlag",
              "        , ACCOUNT.X_BCF_ACC_WEB_TYPE as AccountWebType",
              "        , ACCOUNT.X_BCF_NOTIFY as Notify",
              "from SIEBEL_DEV.S_ORG_EXT ACCOUNT",
              "left join SIEBEL_DEV.S_ORG_EXT_X ACCOUNTX",
              "    on ACCOUNT.ROW_ID = ACCOUNTX.PAR_ROW_ID",
              "union",
              "select",
              "    'NOREL' as AccountID",
              "        , 'NOREL' as Name",
              "        , 'NOREL' as Location",
              "        , 'NOREL' as AccountStatus",
              "        , 'NOREL' as FINSAccountNumber",
              "        , TO_DATE('1900-01-01', 'YYYY-MM-DD') as AccountSince",
              "        , 'NOREL' as ReasonRef",
              "        , '0' as RestrictedFlag",
              "        , TO_DATE('1900-01-01', 'YYYY-MM-DD') as AccountStatusDate",
              "        , TO_DATE('1900-01-01', 'YYYY-MM-DD') as StatusExpiryDate",
              "        , '0' as CSDAccountFlag",
              "        , 'NOREL' as AccountWebType",
              "        , TO_DATE('1900-01-01', 'YYYY-MM-DD') as Notify",
              "    from dual"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimAccount"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "        ACCOUNT.ROW_ID as AccountID",
              "        , ACCOUNT.NAME as Name",
              "        , ACCOUNT.LOC as Location",
              "        , ACCOUNT.CUST_STAT_CD as AccountStatus",
              "        , ACCOUNTX.ATTRIB_07 as FINSAccountNumber",
              "        , ACCOUNT.CUST_SINCE_DT as AccountSince",
              "        , ACCOUNTX.ATTRIB_40 as ReasonRef",
              "        , ACCOUNT.X_BCF_RESTRICTED_FLG as RestrictedFlag",
              "        , ACCOUNT.STAT_CHG_DT as AccountStatusDate",
              "        , ACCOUNTX.ATTRIB_29 as StatusExpiryDate",
              "        , ACCOUNT.X_BCF_CSD_ACCOUNT_FLAG as CSDAccountFlag",
              "        , ACCOUNT.X_BCF_ACC_WEB_TYPE as AccountWebType",
              "        , ACCOUNT.X_BCF_NOTIFY as Notify",
              "from SIEBEL_DEV.S_ORG_EXT ACCOUNT",
              "left join SIEBEL_DEV.S_ORG_EXT_X ACCOUNTX",
              "    on ACCOUNT.ROW_ID = ACCOUNTX.PAR_ROW_ID",
              "union",
              "select",
              "    'NOREL' as AccountID",
              "        , 'NOREL' as Name",
              "        , 'NOREL' as Location",
              "        , 'NOREL' as AccountStatus",
              "        , 'NOREL' as FINSAccountNumber",
              "        , TO_DATE('1900-01-01', 'YYYY-MM-DD') as AccountSince",
              "        , 'NOREL' as ReasonRef",
              "        , '0' as RestrictedFlag",
              "        , TO_DATE('1900-01-01', 'YYYY-MM-DD') as AccountStatusDate",
              "        , TO_DATE('1900-01-01', 'YYYY-MM-DD') as StatusExpiryDate",
              "        , '0' as CSDAccountFlag",
              "        , 'NOREL' as AccountWebType",
              "        , TO_DATE('1900-01-01', 'YYYY-MM-DD') as Notify",
              "    from dual</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "dimActivity",
        "columns": [
          {
            "name": "ACTIVITYID",
            "dataType": "string",
            "sourceColumn": "ACTIVITYID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "TYPE",
            "dataType": "string",
            "sourceColumn": "TYPE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DESCRIPTION",
            "dataType": "string",
            "sourceColumn": "DESCRIPTION",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "STATUS",
            "dataType": "string",
            "sourceColumn": "STATUS",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PRIORITY",
            "dataType": "string",
            "sourceColumn": "PRIORITY",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "OWNER",
            "dataType": "string",
            "sourceColumn": "OWNER",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DONEFLAG",
            "dataType": "string",
            "sourceColumn": "DONEFLAG",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "CREATEDBY",
            "dataType": "string",
            "sourceColumn": "CREATEDBY",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SOURCENAME",
            "dataType": "string",
            "sourceColumn": "SOURCENAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "CONTACTMETHOD",
            "dataType": "string",
            "sourceColumn": "CONTACTMETHOD",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "dimActivity",
            "dataView": "full",
            "source": {
              "query": [
                "select ",
                "    ACTIVITY.ROW_ID as ActivityID",
                "    , ACTIVITY.TODO_CD as Type",
                "    , ACTIVITY.NAME as Description",
                "    , ACTIVITY.EVT_STAT_CD as Status",
                "    , ACTIVITY.EVT_PRIORITY_CD as Priority",
                "    , ACTIVITY.OWNER_LOGIN as Owner",
                "    , ACTIVITY.DONE_FLG as DoneFlag",
                "    , ACTIVITY.CREATOR_LOGIN as CreatedBy",
                "    , ACTIVITYX.ATTRIB_07 as SourceName",
                "    , ACTIVITYX.ATTRIB_06 as ContactMethod",
                "    from SIEBEL_DEV.S_EVT_ACT ACTIVITY",
                "    left join SIEBEL_DEV.S_EVT_ACT_X ACTIVITYX",
                "        on ACTIVITY.ROW_ID = ACTIVITYX.PAR_ROW_ID",
                "union",
                "select ",
                "    'NOREL' as ActivityID",
                "    , 'NOREL' as Type",
                "    , 'NOREL' as Description",
                "    , 'NOREL' as Status",
                "    , 'NOREL' as Priority",
                "    , 'NOREL' as Owner",
                "    , '0' as DoneFlag",
                "    , 'NOREL' as CreatedBy",
                "    , 'NOREL' as SourceName",
                "    , 'NOREL' as ContactMethod",
                "    from dual"
              ],
              "dataSource": "Oracle scan.dev01.rac.bcferries.corp"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "    ACTIVITY.ROW_ID as ActivityID",
                  "    , ACTIVITY.TODO_CD as Type",
                  "    , ACTIVITY.NAME as Description",
                  "    , ACTIVITY.EVT_STAT_CD as Status",
                  "    , ACTIVITY.EVT_PRIORITY_CD as Priority",
                  "    , ACTIVITY.OWNER_LOGIN as Owner",
                  "    , ACTIVITY.DONE_FLG as DoneFlag",
                  "    , ACTIVITY.CREATOR_LOGIN as CreatedBy",
                  "    , ACTIVITYX.ATTRIB_07 as SourceName",
                  "    , ACTIVITYX.ATTRIB_06 as ContactMethod",
                  "    from SIEBEL_DEV.S_EVT_ACT ACTIVITY",
                  "    left join SIEBEL_DEV.S_EVT_ACT_X ACTIVITYX",
                  "        on ACTIVITY.ROW_ID = ACTIVITYX.PAR_ROW_ID",
                  "union",
                  "select ",
                  "    'NOREL' as ActivityID",
                  "    , 'NOREL' as Type",
                  "    , 'NOREL' as Description",
                  "    , 'NOREL' as Status",
                  "    , 'NOREL' as Priority",
                  "    , 'NOREL' as Owner",
                  "    , '0' as DoneFlag",
                  "    , 'NOREL' as CreatedBy",
                  "    , 'NOREL' as SourceName",
                  "    , 'NOREL' as ContactMethod",
                  "    from dual</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "    ACTIVITY.ROW_ID as ActivityID",
              "    , ACTIVITY.TODO_CD as Type",
              "    , ACTIVITY.NAME as Description",
              "    , ACTIVITY.EVT_STAT_CD as Status",
              "    , ACTIVITY.EVT_PRIORITY_CD as Priority",
              "    , ACTIVITY.OWNER_LOGIN as Owner",
              "    , ACTIVITY.DONE_FLG as DoneFlag",
              "    , ACTIVITY.CREATOR_LOGIN as CreatedBy",
              "    , ACTIVITYX.ATTRIB_07 as SourceName",
              "    , ACTIVITYX.ATTRIB_06 as ContactMethod",
              "    from SIEBEL_DEV.S_EVT_ACT ACTIVITY",
              "    left join SIEBEL_DEV.S_EVT_ACT_X ACTIVITYX",
              "        on ACTIVITY.ROW_ID = ACTIVITYX.PAR_ROW_ID",
              "union",
              "select ",
              "    'NOREL' as ActivityID",
              "    , 'NOREL' as Type",
              "    , 'NOREL' as Description",
              "    , 'NOREL' as Status",
              "    , 'NOREL' as Priority",
              "    , 'NOREL' as Owner",
              "    , '0' as DoneFlag",
              "    , 'NOREL' as CreatedBy",
              "    , 'NOREL' as SourceName",
              "    , 'NOREL' as ContactMethod",
              "    from dual"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dimActivity"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "    ACTIVITY.ROW_ID as ActivityID",
              "    , ACTIVITY.TODO_CD as Type",
              "    , ACTIVITY.NAME as Description",
              "    , ACTIVITY.EVT_STAT_CD as Status",
              "    , ACTIVITY.EVT_PRIORITY_CD as Priority",
              "    , ACTIVITY.OWNER_LOGIN as Owner",
              "    , ACTIVITY.DONE_FLG as DoneFlag",
              "    , ACTIVITY.CREATOR_LOGIN as CreatedBy",
              "    , ACTIVITYX.ATTRIB_07 as SourceName",
              "    , ACTIVITYX.ATTRIB_06 as ContactMethod",
              "    from SIEBEL_DEV.S_EVT_ACT ACTIVITY",
              "    left join SIEBEL_DEV.S_EVT_ACT_X ACTIVITYX",
              "        on ACTIVITY.ROW_ID = ACTIVITYX.PAR_ROW_ID",
              "union",
              "select ",
              "    'NOREL' as ActivityID",
              "    , 'NOREL' as Type",
              "    , 'NOREL' as Description",
              "    , 'NOREL' as Status",
              "    , 'NOREL' as Priority",
              "    , 'NOREL' as Owner",
              "    , '0' as DoneFlag",
              "    , 'NOREL' as CreatedBy",
              "    , 'NOREL' as SourceName",
              "    , 'NOREL' as ContactMethod",
              "    from dual</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "factActivity",
        "columns": [
          {
            "name": "FACTIVITYID",
            "dataType": "string",
            "sourceColumn": "FACTIVITYID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ACTIVITYID",
            "dataType": "string",
            "sourceColumn": "ACTIVITYID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "CONTACTID",
            "dataType": "string",
            "sourceColumn": "CONTACTID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PLANNEDSTARTDATE",
            "dataType": "dateTime",
            "sourceColumn": "PLANNEDSTARTDATE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "SENTDATE",
            "dataType": "dateTime",
            "sourceColumn": "SENTDATE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "CREATEDBYUSERID",
            "dataType": "string",
            "sourceColumn": "CREATEDBYUSERID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "CREATEDATE",
            "dataType": "dateTime",
            "sourceColumn": "CREATEDATE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "NOTIFICATIONDATE",
            "dataType": "string",
            "sourceColumn": "NOTIFICATIONDATE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "NOTIFICATIONTIME",
            "dataType": "string",
            "sourceColumn": "NOTIFICATIONTIME",
            "sourceProviderType": "VarChar"
          },
          {
            "type": "calculated",
            "name": "ContactIDNoRel",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "IF( CALCULATE( ",
              "        COUNTROWS(dimContact) , ",
              "        FILTER(DimContact, ",
              "        dimContact[ContactID] = factActivity[ContactID]) ) = 0, ",
              "    \"NOREL\", ",
              "      CALCULATE( ",
              "        FIRSTNONBLANK(dimContact[ContactID], 1) ,  FILTER(dimContact, ",
              "       dimContact[ContactID]  = factActivity[ContactID])))"
            ]
          }
        ],
        "partitions": [
          {
            "name": "factActivity",
            "dataView": "full",
            "source": {
              "query": [
                "select ",
                "    ACTCON.ROW_ID as fActivityID",
                "    , ACTCON.ACTIVITY_ID as ActivityID",
                "    , ACTCON.CON_ID as ContactID",
                "    , ACTIVITY.TODO_PLAN_START_DT as PlannedStartDate",
                "    , ACTIVITY.DOC_SENT_DT as SentDate",
                "    , ACTCON.CREATED_BY as CreatedByUserId",
                "    , ACTCON.CREATED as CreateDate",
                "    , ACTIVITYX.ATTRIB_01 as NotificationDate",
                "    , ACTIVITYX.ATTRIB_02 as NotificationTime",
                "    from SIEBEL_DEV.S_ACT_CONTACT ACTCON",
                "    left join SIEBEL_DEV.S_EVT_ACT ACTIVITY",
                "        on ACTCON.ACTIVITY_ID = ACTIVITY.ROW_ID",
                "    left join SIEBEL_DEV.S_EVT_ACT_X ACTIVITYX",
                "        on ACTIVITY.ROW_ID = ACTIVITYX.PAR_ROW_ID"
              ],
              "dataSource": "Oracle scan.dev01.rac.bcferries.corp"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "    ACTCON.ROW_ID as fActivityID",
                  "    , ACTCON.ACTIVITY_ID as ActivityID",
                  "    , ACTCON.CON_ID as ContactID",
                  "    , ACTIVITY.TODO_PLAN_START_DT as PlannedStartDate",
                  "    , ACTIVITY.DOC_SENT_DT as SentDate",
                  "    , ACTCON.CREATED_BY as CreatedByUserId",
                  "    , ACTCON.CREATED as CreateDate",
                  "    , ACTIVITYX.ATTRIB_01 as NotificationDate",
                  "    , ACTIVITYX.ATTRIB_02 as NotificationTime",
                  "    from SIEBEL_DEV.S_ACT_CONTACT ACTCON",
                  "    left join SIEBEL_DEV.S_EVT_ACT ACTIVITY",
                  "        on ACTCON.ACTIVITY_ID = ACTIVITY.ROW_ID",
                  "    left join SIEBEL_DEV.S_EVT_ACT_X ACTIVITYX",
                  "        on ACTIVITY.ROW_ID = ACTIVITYX.PAR_ROW_ID</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "    ACTCON.ROW_ID as fActivityID",
              "    , ACTCON.ACTIVITY_ID as ActivityID",
              "    , ACTCON.CON_ID as ContactID",
              "    , ACTIVITY.TODO_PLAN_START_DT as PlannedStartDate",
              "    , ACTIVITY.DOC_SENT_DT as SentDate",
              "    , ACTCON.CREATED_BY as CreatedByUserId",
              "    , ACTCON.CREATED as CreateDate",
              "    , ACTIVITYX.ATTRIB_01 as NotificationDate",
              "    , ACTIVITYX.ATTRIB_02 as NotificationTime",
              "    from SIEBEL_DEV.S_ACT_CONTACT ACTCON",
              "    left join SIEBEL_DEV.S_EVT_ACT ACTIVITY",
              "        on ACTCON.ACTIVITY_ID = ACTIVITY.ROW_ID",
              "    left join SIEBEL_DEV.S_EVT_ACT_X ACTIVITYX",
              "        on ACTIVITY.ROW_ID = ACTIVITYX.PAR_ROW_ID"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "factActivity"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "    ACTCON.ROW_ID as fActivityID",
              "    , ACTCON.ACTIVITY_ID as ActivityID",
              "    , ACTCON.CON_ID as ContactID",
              "    , ACTIVITY.TODO_PLAN_START_DT as PlannedStartDate",
              "    , ACTIVITY.DOC_SENT_DT as SentDate",
              "    , ACTCON.CREATED_BY as CreatedByUserId",
              "    , ACTCON.CREATED as CreateDate",
              "    , ACTIVITYX.ATTRIB_01 as NotificationDate",
              "    , ACTIVITYX.ATTRIB_02 as NotificationTime",
              "    from SIEBEL_DEV.S_ACT_CONTACT ACTCON",
              "    left join SIEBEL_DEV.S_EVT_ACT ACTIVITY",
              "        on ACTCON.ACTIVITY_ID = ACTIVITY.ROW_ID",
              "    left join SIEBEL_DEV.S_EVT_ACT_X ACTIVITYX",
              "        on ACTIVITY.ROW_ID = ACTIVITYX.PAR_ROW_ID</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "db477b7b-9964-4ed5-91d5-4bfae7257755",
        "fromTable": "factSubscription",
        "fromColumn": "AGREEMENTID",
        "toTable": "dimAgreement",
        "toColumn": "AGREEMENTID"
      },
      {
        "name": "4a0373bc-699c-46d6-bc5f-23d4cfa6eb17",
        "fromTable": "factSubscription",
        "fromColumn": "ACCOUNTID",
        "toTable": "dimAccount",
        "toColumn": "ACCOUNTID"
      },
      {
        "name": "5f684e07-8802-499c-b9c7-fc8b3f6ce416",
        "fromTable": "factSubscription",
        "fromColumn": "SUBSCRIPTIONID",
        "toTable": "dimSubscription",
        "toColumn": "SUBSCRIPTIONID"
      },
      {
        "name": "5432672e-ecd5-4218-83e9-219d1dab2307",
        "fromTable": "factAgreement",
        "fromColumn": "AGREEMENTID",
        "toTable": "dimAgreement",
        "toColumn": "AGREEMENTID"
      },
      {
        "name": "2b8bb4e8-f55c-4095-9a4f-c1c7ce5301f1",
        "fromTable": "factActivity",
        "fromColumn": "ACTIVITYID",
        "toTable": "dimActivity",
        "toColumn": "ACTIVITYID"
      },
      {
        "name": "56ab5efb-5703-4069-ad08-cf1553ee70b5",
        "fromTable": "factAddress",
        "fromColumn": "ACCOUNTID",
        "toTable": "dimAccount",
        "toColumn": "ACCOUNTID"
      },
      {
        "name": "5d291a70-0516-4dd8-b107-bb52c633548f",
        "fromTable": "factAddress",
        "fromColumn": "ADDRESSID",
        "toTable": "dimAddress",
        "toColumn": "ADDRESSID"
      },
      {
        "name": "58ef114d-286c-48f8-873c-591365cd3233",
        "fromTable": "factAgreement",
        "fromColumn": "ContactIDNoRel",
        "toTable": "dimContact",
        "toColumn": "CONTACTID"
      },
      {
        "name": "f7ec5fac-0f27-4276-ab11-96440d21d431",
        "fromTable": "factActivity",
        "fromColumn": "ContactIDNoRel",
        "toTable": "dimContact",
        "toColumn": "CONTACTID"
      },
      {
        "name": "6bbf228f-9fb9-4503-a60f-7cecc60c24b4",
        "fromTable": "factSubscription",
        "fromColumn": "ContactIDNoRel",
        "toTable": "dimContact",
        "toColumn": "CONTACTID"
      },
      {
        "name": "63c310d1-a025-45bc-8ef4-ce98a09c6de5",
        "fromTable": "factAddress",
        "fromColumn": "ContactIDNoRel",
        "toTable": "dimContact",
        "toColumn": "CONTACTID"
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "400"
      }
    ]
  },
  "id": "SemanticModel"
}