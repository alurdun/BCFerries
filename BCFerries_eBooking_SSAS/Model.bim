{
  "name": "SemanticModel",
  "compatibilityLevel": 1200,
  "model": {
    "defaultMode": "directQuery",
    "culture": "en-CA",
    "dataSources": [
      {
        "name": "Oracle scan.stg01.rac.bcferries.corp",
        "connectionString": "Provider=OraOLEDB.Oracle;Data Source=scan.dev01.rac.bcferries.corpsBooking;Persist Security Info=true;User ID=report_proxy_user;Extended Properties=UseSessionFormat=1",
        "impersonationMode": "impersonateServiceAccount",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "Oracle"
          }
        ]
      }
    ],
    "tables": [
      {
        "name": "Sailings",
        "columns": [
          {
            "name": "SailingKey",
            "dataType": "string",
            "sourceColumn": "SAILING_PK"
          },
          {
            "name": "SailingCode",
            "dataType": "string",
            "sourceColumn": "SAI_CODE"
          },
          {
            "name": "SailingDepartureDate",
            "dataType": "dateTime",
            "sourceColumn": "SAI_SAILINGDEPARTUREDATE",
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"4105\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "SailingLocked",
            "dataType": "string",
            "sourceColumn": "SAI_LOCKED"
          },
          {
            "name": "SailingScheduleCode",
            "dataType": "string",
            "sourceColumn": "SAI_SCHEDULECODE"
          },
          {
            "name": "SailingArrivalDate",
            "dataType": "dateTime",
            "sourceColumn": "SAI_SAILINGARRIVALDATE"
          },
          {
            "name": "SailingHideInformation",
            "dataType": "string",
            "sourceColumn": "SAI_HIDEINFORMATION"
          },
          {
            "name": "LineCode",
            "dataType": "string",
            "sourceColumn": "LIN_CODE"
          },
          {
            "name": "LineDescription",
            "dataType": "string",
            "sourceColumn": "LIN_DESCRIPTION"
          },
          {
            "name": "ShipCode",
            "dataType": "string",
            "sourceColumn": "SHI_CODE"
          },
          {
            "name": "ShipName",
            "dataType": "string",
            "sourceColumn": "SHI_NAME"
          },
          {
            "name": "ShipType",
            "dataType": "string",
            "sourceColumn": "SHI_SHIPTYPE"
          },
          {
            "name": "ShipDivision",
            "dataType": "string",
            "sourceColumn": "SHI_DIVISION"
          },
          {
            "name": "PhysicalShipName",
            "dataType": "string",
            "sourceColumn": "SHI_PHYSICALSHIPNAME"
          },
          {
            "name": "ShipPhysicalDescription",
            "dataType": "string",
            "sourceColumn": "PHY_DESCRIPTION"
          },
          {
            "name": "DeparturePortCode",
            "dataType": "string",
            "sourceColumn": "DEP_PORTCODE"
          },
          {
            "name": "DeparturePortOrder",
            "dataType": "double",
            "sourceColumn": "DEP_PORTORDER"
          },
          {
            "name": "DepartureTime",
            "dataType": "string",
            "sourceColumn": "DEP_DEPARTURETIME"
          },
          {
            "name": "ArrivalSailingCode",
            "dataType": "string",
            "sourceColumn": "ARR_SAILINGCODE"
          },
          {
            "name": "ArrivalPortCode",
            "dataType": "string",
            "sourceColumn": "ARR_PORTCODE"
          },
          {
            "name": "ArrivalPortOrder",
            "dataType": "double",
            "sourceColumn": "ARR_PORTORDER"
          },
          {
            "name": "ArrivalTime",
            "dataType": "dateTime",
            "sourceColumn": "ARR_ARRIVALTIME"
          },
          {
            "name": "LegCode",
            "dataType": "string",
            "sourceColumn": "LEG_CODE"
          },
          {
            "name": "DeparturePortGeographicalArea",
            "dataType": "string",
            "sourceColumn": "DPO_GEOGRAPHICALAREA"
          },
          {
            "name": "DeparturePortName",
            "dataType": "string",
            "sourceColumn": "DPO_NAME"
          },
          {
            "name": "DeparturePortDescription",
            "dataType": "string",
            "sourceColumn": "DPO_DESCRIPTION"
          },
          {
            "name": "ArrivalPortGeographicalArea",
            "dataType": "string",
            "sourceColumn": "APO_GEOGRAPHICALAREA"
          },
          {
            "name": "ArrivalPortName",
            "dataType": "string",
            "sourceColumn": "APO_NAME"
          },
          {
            "name": "ArrivalPortDescription",
            "dataType": "string",
            "sourceColumn": "APO_DESCRIPTION"
          },
          {
            "name": "DepartureGeographicalAreaName",
            "dataType": "string",
            "sourceColumn": "GED_NAME"
          },
          {
            "name": "ArrivalGeographicalAreaName",
            "dataType": "string",
            "sourceColumn": "GEA_NAME"
          },
          {
            "name": "RouteCode",
            "dataType": "string",
            "sourceColumn": "ROUTECODE"
          },
          {
            "name": "RouteSort",
            "dataType": "string",
            "sourceColumn": "ROUTESORT"
          },
          {
            "name": "DepartureDateTime",
            "dataType": "dateTime",
            "sourceColumn": "DEP_DEPARTUREDATETIME"
          },
          {
            "name": "DepartureDate",
            "dataType": "dateTime",
            "sourceColumn": "DEP_DEPARTUREDATE",
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"4105\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "DepartureTimeHour",
            "dataType": "string",
            "sourceColumn": "DEP_DEPARTURETIMEHOUR"
          },
          {
            "name": "ArrivalDateTime",
            "dataType": "dateTime",
            "sourceColumn": "ARR_ARRIVALDATETIME"
          },
          {
            "name": "ArrivalDate",
            "dataType": "dateTime",
            "sourceColumn": "ARR_ARRIVALDATE"
          },
          {
            "name": "ArrivalTimeHour",
            "dataType": "string",
            "sourceColumn": "ARR_ARRIVALTIMEHOUR"
          },
          {
            "name": "DepartureDateMonth",
            "dataType": "string",
            "sourceColumn": "DEP_DEPARTUREDATEMONTH"
          },
          {
            "name": "DepartureDateTimeMonthSort",
            "dataType": "string",
            "sourceColumn": "DEP_DEPARTUREDATEMONTHSORT"
          },
          {
            "name": "DepartureDateDayOfWeek",
            "dataType": "string",
            "sourceColumn": "DEP_DEPARTUREDATEDAYOFWEEK"
          },
          {
            "name": "DepartureDateDayOfWeekSort",
            "dataType": "string",
            "sourceColumn": "DEP_DEPARTUREDATEDAYOFWEEKSORT"
          },
          {
            "name": "DepartureDateDay",
            "dataType": "string",
            "sourceColumn": "DEP_DEPARTUREDATEDAY"
          },
          {
            "name": "LicenseCrewnumber",
            "dataType": "double",
            "sourceColumn": "LIC_CREWNUMBER"
          },
          {
            "name": "LicenseSellableCapacity",
            "dataType": "double",
            "sourceColumn": "LIC_SELLABLECAPACITY"
          },
          {
            "type": "calculated",
            "name": "DepartureAllocationKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "Sailings[SailingCode] & Sailings[DeparturePortCode]"
          },
          {
            "type": "calculated",
            "name": "ArrivalAllocationKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "Sailings[SailingCode] & Sailings[ArrivalPortCode]"
          },
          {
            "type": "calculated",
            "name": "DepartureDateDefault",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " IF(",
              "\tMONTH(",
              "\t\tSailings[DepartureDate])=MONTH(",
              "\t\t\tNOW()) && YEAR(Sailings[DepartureDate])=YEAR(NOW()) && DAY(Sailings[DepartureDate])=DAY(NOW()),\"1\",\"0\")"
            ]
          },
          {
            "name": "SAILING_STARTDATE",
            "dataType": "dateTime",
            "sourceColumn": "SAILING_STARTDATE"
          },
          {
            "name": "SAILING_ENDDATE",
            "dataType": "dateTime",
            "sourceColumn": "SAILING_ENDDATE"
          },
          {
            "name": "SAI_STARTDATE",
            "dataType": "string",
            "sourceColumn": "SAI_STARTDATE"
          },
          {
            "name": "SAI_DESCRIPTION",
            "dataType": "string",
            "sourceColumn": "SAI_DESCRIPTION"
          },
          {
            "name": "SAI_ENDDATE",
            "dataType": "string",
            "sourceColumn": "SAI_ENDDATE"
          },
          {
            "name": "SAI_JOURNEYDURATION",
            "dataType": "double",
            "sourceColumn": "SAI_JOURNEYDURATION"
          },
          {
            "name": "SAI_SCHEDULESTARTDATE",
            "dataType": "string",
            "sourceColumn": "SAI_SCHEDULESTARTDATE"
          },
          {
            "name": "SAI_SHIPTEMPLATECODE",
            "dataType": "string",
            "sourceColumn": "SAI_SHIPTEMPLATECODE"
          },
          {
            "name": "SAI_SHIPTEMPLATESTARTDATE",
            "dataType": "string",
            "sourceColumn": "SAI_SHIPTEMPLATESTARTDATE"
          },
          {
            "name": "SAI_LINECODE",
            "dataType": "string",
            "sourceColumn": "SAI_LINECODE"
          },
          {
            "name": "SAI_LINESTARTDATE",
            "dataType": "string",
            "sourceColumn": "SAI_LINESTARTDATE"
          },
          {
            "name": "SAI_DAYNIGHT",
            "dataType": "string",
            "sourceColumn": "SAI_DAYNIGHT"
          },
          {
            "name": "SAI_VERSION",
            "dataType": "double",
            "sourceColumn": "SAI_VERSION"
          },
          {
            "name": "SAI_COMMENTS",
            "dataType": "string",
            "sourceColumn": "SAI_COMMENTS"
          },
          {
            "name": "SAI_VOYAGECODE",
            "dataType": "string",
            "sourceColumn": "SAI_VOYAGECODE"
          },
          {
            "name": "SAI_MDS",
            "dataType": "string",
            "sourceColumn": "SAI_MDS"
          },
          {
            "name": "SAI_NORESERVABLE",
            "dataType": "string",
            "sourceColumn": "SAI_NORESERVABLE"
          },
          {
            "name": "LIN_STARTDATE",
            "dataType": "string",
            "sourceColumn": "LIN_STARTDATE"
          },
          {
            "name": "LIN_MILES",
            "dataType": "double",
            "sourceColumn": "LIN_MILES"
          },
          {
            "name": "LIN_DEPARTURE_TIME",
            "dataType": "dateTime",
            "sourceColumn": "LIN_DEPARTURE_TIME"
          },
          {
            "name": "LIN_ARRIVAL_TIME",
            "dataType": "dateTime",
            "sourceColumn": "LIN_ARRIVAL_TIME"
          },
          {
            "name": "LIN_ENDDATE",
            "dataType": "string",
            "sourceColumn": "LIN_ENDDATE"
          },
          {
            "name": "LIN_RTSPODEPARTURENUMBER",
            "dataType": "double",
            "sourceColumn": "LIN_RTSPODEPARTURENUMBER"
          },
          {
            "name": "LIN_VERSION",
            "dataType": "double",
            "sourceColumn": "LIN_VERSION"
          },
          {
            "name": "LIN_LINEDIRECTIONID",
            "dataType": "double",
            "sourceColumn": "LIN_LINEDIRECTIONID"
          },
          {
            "name": "LIN_HOURS_BEFORE_DEPARTURE",
            "dataType": "double",
            "sourceColumn": "LIN_HOURS_BEFORE_DEPARTURE"
          },
          {
            "name": "SHI_STARTDATE",
            "dataType": "string",
            "sourceColumn": "SHI_STARTDATE"
          },
          {
            "name": "SHI_PHYSICALSHIPSTARTDATE",
            "dataType": "string",
            "sourceColumn": "SHI_PHYSICALSHIPSTARTDATE"
          },
          {
            "name": "SHI_DAYNIGHT",
            "dataType": "string",
            "sourceColumn": "SHI_DAYNIGHT"
          },
          {
            "name": "SHI_ENDDATE",
            "dataType": "string",
            "sourceColumn": "SHI_ENDDATE"
          },
          {
            "name": "SHI_VERSION",
            "dataType": "double",
            "sourceColumn": "SHI_VERSION"
          },
          {
            "name": "PHY_NAME",
            "dataType": "string",
            "sourceColumn": "PHY_NAME"
          },
          {
            "name": "PHY_STARTDATE",
            "dataType": "string",
            "sourceColumn": "PHY_STARTDATE"
          },
          {
            "name": "PHY_ENDDATE",
            "dataType": "string",
            "sourceColumn": "PHY_ENDDATE"
          },
          {
            "name": "PHY_VERSION",
            "dataType": "double",
            "sourceColumn": "PHY_VERSION"
          },
          {
            "name": "PHY_VINGCARDNAME",
            "dataType": "string",
            "sourceColumn": "PHY_VINGCARDNAME"
          },
          {
            "name": "PHY_LLOYDSREGISTER",
            "dataType": "string",
            "sourceColumn": "PHY_LLOYDSREGISTER"
          },
          {
            "name": "PHY_CALLRADIOSIGNAL",
            "dataType": "string",
            "sourceColumn": "PHY_CALLRADIOSIGNAL"
          },
          {
            "name": "PHY_CODE",
            "dataType": "string",
            "sourceColumn": "PHY_CODE"
          },
          {
            "name": "PHY_WIDTHTRESHOLD",
            "dataType": "double",
            "sourceColumn": "PHY_WIDTHTRESHOLD"
          },
          {
            "name": "PHY_BUILDYEAR",
            "dataType": "string",
            "sourceColumn": "PHY_BUILDYEAR"
          },
          {
            "name": "PHY_COUNTRYFLAG",
            "dataType": "string",
            "sourceColumn": "PHY_COUNTRYFLAG"
          },
          {
            "name": "PHY_ICECLASS",
            "dataType": "string",
            "sourceColumn": "PHY_ICECLASS"
          },
          {
            "name": "PHY_ISDUMMYSHIP",
            "dataType": "string",
            "sourceColumn": "PHY_ISDUMMYSHIP"
          },
          {
            "name": "DEP_SAILINGCODE",
            "dataType": "string",
            "sourceColumn": "DEP_SAILINGCODE"
          },
          {
            "name": "DEP_SAILINGSTARTDATE",
            "dataType": "string",
            "sourceColumn": "DEP_SAILINGSTARTDATE"
          },
          {
            "name": "DEP_PORTSTARTDATE",
            "dataType": "string",
            "sourceColumn": "DEP_PORTSTARTDATE"
          },
          {
            "name": "DEP_STARTDATE",
            "dataType": "string",
            "sourceColumn": "DEP_STARTDATE"
          },
          {
            "name": "DEP_ARRIVALTIME",
            "dataType": "dateTime",
            "sourceColumn": "DEP_ARRIVALTIME"
          },
          {
            "name": "DEP_ENDDATE",
            "dataType": "string",
            "sourceColumn": "DEP_ENDDATE"
          },
          {
            "name": "DEP_VERSION",
            "dataType": "double",
            "sourceColumn": "DEP_VERSION"
          },
          {
            "name": "DEP_GVNUMBERIMPORT",
            "dataType": "string",
            "sourceColumn": "DEP_GVNUMBERIMPORT"
          },
          {
            "name": "DEP_GVNUMBEREXPORT",
            "dataType": "string",
            "sourceColumn": "DEP_GVNUMBEREXPORT"
          },
          {
            "name": "DEP_ACTUALDEPARTUREDATE",
            "dataType": "dateTime",
            "sourceColumn": "DEP_ACTUALDEPARTUREDATE"
          },
          {
            "name": "DEP_ACTUALARRIVALDATE",
            "dataType": "dateTime",
            "sourceColumn": "DEP_ACTUALARRIVALDATE"
          },
          {
            "name": "DEP_GSVOYAGECODE",
            "dataType": "string",
            "sourceColumn": "DEP_GSVOYAGECODE"
          },
          {
            "name": "DEP_REPORTCLOSED",
            "dataType": "string",
            "sourceColumn": "DEP_REPORTCLOSED"
          },
          {
            "name": "DEP_BERTH",
            "dataType": "string",
            "sourceColumn": "DEP_BERTH"
          },
          {
            "name": "ARR_SAILINGSTARTDATE",
            "dataType": "string",
            "sourceColumn": "ARR_SAILINGSTARTDATE"
          },
          {
            "name": "ARR_PORTSTARTDATE",
            "dataType": "string",
            "sourceColumn": "ARR_PORTSTARTDATE"
          },
          {
            "name": "ARR_STARTDATE",
            "dataType": "string",
            "sourceColumn": "ARR_STARTDATE"
          },
          {
            "name": "ARR_DEPARTURETIME",
            "dataType": "dateTime",
            "sourceColumn": "ARR_DEPARTURETIME"
          },
          {
            "name": "ARR_ENDDATE",
            "dataType": "string",
            "sourceColumn": "ARR_ENDDATE"
          },
          {
            "name": "ARR_VERSION",
            "dataType": "double",
            "sourceColumn": "ARR_VERSION"
          },
          {
            "name": "ARR_GVNUMBERIMPORT",
            "dataType": "string",
            "sourceColumn": "ARR_GVNUMBERIMPORT"
          },
          {
            "name": "ARR_GVNUMBEREXPORT",
            "dataType": "string",
            "sourceColumn": "ARR_GVNUMBEREXPORT"
          },
          {
            "name": "ARR_ACTUALDEPARTUREDATE",
            "dataType": "dateTime",
            "sourceColumn": "ARR_ACTUALDEPARTUREDATE"
          },
          {
            "name": "ARR_ACTUALARRIVALDATE",
            "dataType": "dateTime",
            "sourceColumn": "ARR_ACTUALARRIVALDATE"
          },
          {
            "name": "ARR_GSVOYAGECODE",
            "dataType": "string",
            "sourceColumn": "ARR_GSVOYAGECODE"
          },
          {
            "name": "ARR_REPORTCLOSED",
            "dataType": "string",
            "sourceColumn": "ARR_REPORTCLOSED"
          },
          {
            "name": "ARR_BERTH",
            "dataType": "string",
            "sourceColumn": "ARR_BERTH"
          },
          {
            "name": "LEG_STARTDATE",
            "dataType": "string",
            "sourceColumn": "LEG_STARTDATE"
          },
          {
            "name": "LEG_DEPARTURE_PORT",
            "dataType": "string",
            "sourceColumn": "LEG_DEPARTURE_PORT"
          },
          {
            "name": "LEG_DEPARTURE_PORTSTARTDATE",
            "dataType": "string",
            "sourceColumn": "LEG_DEPARTURE_PORTSTARTDATE"
          },
          {
            "name": "LEG_ARRIVAL_PORT",
            "dataType": "string",
            "sourceColumn": "LEG_ARRIVAL_PORT"
          },
          {
            "name": "LEG_ARRIVAL_PORTSTARTDATE",
            "dataType": "string",
            "sourceColumn": "LEG_ARRIVAL_PORTSTARTDATE"
          },
          {
            "name": "LEG_ENDDATE",
            "dataType": "string",
            "sourceColumn": "LEG_ENDDATE"
          },
          {
            "name": "LEG_VERSION",
            "dataType": "double",
            "sourceColumn": "LEG_VERSION"
          },
          {
            "name": "LEG_MANDATORYDOCUMENT",
            "dataType": "string",
            "sourceColumn": "LEG_MANDATORYDOCUMENT"
          },
          {
            "name": "DPO_CODE",
            "dataType": "string",
            "sourceColumn": "DPO_CODE"
          },
          {
            "name": "DPO_STARTDATE",
            "dataType": "string",
            "sourceColumn": "DPO_STARTDATE"
          },
          {
            "name": "DPO_COUNTRY",
            "dataType": "string",
            "sourceColumn": "DPO_COUNTRY"
          },
          {
            "name": "DPO_EMAIL",
            "dataType": "string",
            "sourceColumn": "DPO_EMAIL"
          },
          {
            "name": "DPO_FAX",
            "dataType": "string",
            "sourceColumn": "DPO_FAX"
          },
          {
            "name": "DPO_ENDDATE",
            "dataType": "string",
            "sourceColumn": "DPO_ENDDATE"
          },
          {
            "name": "DPO_VERSION",
            "dataType": "double",
            "sourceColumn": "DPO_VERSION"
          },
          {
            "name": "DPO_PORTID",
            "dataType": "string",
            "sourceColumn": "DPO_PORTID"
          },
          {
            "name": "DPO_ADDRESS",
            "dataType": "string",
            "sourceColumn": "DPO_ADDRESS"
          },
          {
            "name": "DPO_TOWN",
            "dataType": "string",
            "sourceColumn": "DPO_TOWN"
          },
          {
            "name": "DPO_DISTRICT",
            "dataType": "string",
            "sourceColumn": "DPO_DISTRICT"
          },
          {
            "name": "DPO_POSTCODE",
            "dataType": "string",
            "sourceColumn": "DPO_POSTCODE"
          },
          {
            "name": "DPO_DESTINATIONCODE",
            "dataType": "string",
            "sourceColumn": "DPO_DESTINATIONCODE"
          },
          {
            "name": "APO_CODE",
            "dataType": "string",
            "sourceColumn": "APO_CODE"
          },
          {
            "name": "APO_STARTDATE",
            "dataType": "string",
            "sourceColumn": "APO_STARTDATE"
          },
          {
            "name": "APO_COUNTRY",
            "dataType": "string",
            "sourceColumn": "APO_COUNTRY"
          },
          {
            "name": "APO_EMAIL",
            "dataType": "string",
            "sourceColumn": "APO_EMAIL"
          },
          {
            "name": "APO_FAX",
            "dataType": "string",
            "sourceColumn": "APO_FAX"
          },
          {
            "name": "APO_ENDDATE",
            "dataType": "string",
            "sourceColumn": "APO_ENDDATE"
          },
          {
            "name": "APO_VERSION",
            "dataType": "double",
            "sourceColumn": "APO_VERSION"
          },
          {
            "name": "APO_PORTID",
            "dataType": "string",
            "sourceColumn": "APO_PORTID"
          },
          {
            "name": "APO_ADDRESS",
            "dataType": "string",
            "sourceColumn": "APO_ADDRESS"
          },
          {
            "name": "APO_TOWN",
            "dataType": "string",
            "sourceColumn": "APO_TOWN"
          },
          {
            "name": "APO_DISTRICT",
            "dataType": "string",
            "sourceColumn": "APO_DISTRICT"
          },
          {
            "name": "APO_POSTCODE",
            "dataType": "string",
            "sourceColumn": "APO_POSTCODE"
          },
          {
            "name": "APO_DESTINATIONCODE",
            "dataType": "string",
            "sourceColumn": "APO_DESTINATIONCODE"
          },
          {
            "name": "GED_CODE",
            "dataType": "string",
            "sourceColumn": "GED_CODE"
          },
          {
            "name": "GED_COUNTRY",
            "dataType": "string",
            "sourceColumn": "GED_COUNTRY"
          },
          {
            "name": "GEA_CODE",
            "dataType": "string",
            "sourceColumn": "GEA_CODE"
          },
          {
            "name": "GEA_COUNTRY",
            "dataType": "string",
            "sourceColumn": "GEA_COUNTRY"
          },
          {
            "name": "LIC_VESSELLICENSECODE",
            "dataType": "string",
            "sourceColumn": "LIC_VESSELLICENSECODE"
          },
          {
            "name": "LIC_MAXCAPACITY",
            "dataType": "double",
            "sourceColumn": "LIC_MAXCAPACITY"
          },
          {
            "type": "calculated",
            "name": "SailingDetail",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "Sailings[LineCode] & \" - \" & Sailings[DeparturePortCode] & \" - \" & Sailings[DeparturePortDescription] & \" (\" & Sailings[DepartureDate] & \" \" & Sailings[DepartureTime] & \") - \" & Sailings[ArrivalPortCode] & \" - \" & Sailings[ArrivalPortDescription] & \" (\" & Sailings[ArrivalDate] & \" \" & Sailings[ArrivalTime] & \") - \" & Sailings[ShipPhysicalDescription]"
          }
        ],
        "partitions": [
          {
            "name": "Query 1",
            "dataView": "full",
            "source": {
              "query": [
                "SELECT",
                "SAILING.CODE || '-' || SAILING.STARTDATE || '-' || DEPARTSAILINGPORTSCHEDULE.PORTCODE || '-' || ARRIVALSAILINGPORTSCHEDULE.PORTCODE  as SAILING_PK ,",
                "TO_DATE (SAILING.STARTDATE, 'YYYY-MM-DD hh24:mi:ss') as SAILING_STARTDATE ,",
                "TO_DATE (SAILING.ENDDATE,   'YYYY-MM-DD hh24:mi:ss') as SAILING_ENDDATE ,",
                "SAILING.CODE as SAI_CODE,",
                "SAILING.STARTDATE as SAI_STARTDATE ,",
                "SAILING.DESCRIPTION as SAI_DESCRIPTION ,",
                "SAILING.ENDDATE as SAI_ENDDATE ,",
                "SAILING.SAILINGDEPARTUREDATE as SAI_SAILINGDEPARTUREDATE   ,",
                "SAILING.JOURNEYDURATION as SAI_JOURNEYDURATION   ,",
                "SAILING.LOCKED as SAI_LOCKED ,",
                "SAILING.SCHEDULECODE as SAI_SCHEDULECODE ,",
                "SAILING.SCHEDULESTARTDATE as SAI_SCHEDULESTARTDATE ,",
                "SAILING.SHIPTEMPLATECODE as SAI_SHIPTEMPLATECODE ,",
                "SAILING.SHIPTEMPLATESTARTDATE as SAI_SHIPTEMPLATESTARTDATE ,",
                "SAILING.LINECODE as SAI_LINECODE ,",
                "SAILING.LINESTARTDATE as SAI_LINESTARTDATE ,",
                "SAILING.SAILINGARRIVALDATE as SAI_SAILINGARRIVALDATE ,",
                "SAILING.DAYNIGHT as SAI_DAYNIGHT ,",
                "SAILING.VERSION as SAI_VERSION ,",
                "SAILING.COMMENTS as SAI_COMMENTS ,",
                "SAILING.VOYAGECODE as SAI_VOYAGECODE ,",
                "SAILING.HIDEINFORMATION as SAI_HIDEINFORMATION ,",
                "SAILING.MDS as SAI_MDS ,",
                "SAILING.NORESERVABLE as SAI_NORESERVABLE ,",
                "LINE.CODE as LIN_CODE ",
                "      ,case",
                "            when (LINE.CODE) in ('10BECA', '10BECB', '10BECC', '10PBBA', '10PBBB', '10PBBC', '10POFA', '10SHWA', '10SHWB') then ('10S')",
                "            when (LINE.CODE) in ('10PPHA', '10PPHB', '10PPHC', '10PPHD', '10PPRA', '10PPRB', '10PPRC', '10PPRD') then ('10')",
                "            when (substr(LINE.CODE,1 ,1) in ('5', '9')) then (substr(LINE.CODE,1,1))",
                "            when (substr(LINE.CODE,1,2) in ('01', '02', '03')) then (substr(LINE.CODE,2,1))",
                "            when (substr(LINE.CODE,1,1) not in ('5', '9')) then (substr(LINE.CODE,1,2))",
                "        end as ROUTECODE,",
                "       case",
                "           when (LINE.CODE) in ('10BECA', '10BECB', '10BECC', '10PBBA', '10PBBB', '10PBBC', '10POFA', '10SHWA', '10SHWB') then ('10S')",
                "           when (LINE.CODE) in ('10PPHA', '10PPHB', '10PPHC', '10PPHD', '10PPRA', '10PPRB', '10PPRC', '10PPRD') then ('10')",
                "           when (substr( LINE.CODE,1 ,1) in ('5', '9')) then ( '0' || (substr( LINE.CODE,1,1)) )",
                "           when (substr( LINE.CODE,1,1) not in ('5', '9')) then (substr( LINE.CODE,1,2))",
                "        end as ROUTESORT,",
                "LINE.STARTDATE as LIN_STARTDATE ,",
                "LINE.DESCRIPTION as LIN_DESCRIPTION,",
                "LINE.MILES as LIN_MILES ,",
                "LINE.DEPARTURE_TIME as LIN_DEPARTURE_TIME ,",
                "LINE.ARRIVAL_TIME as LIN_ARRIVAL_TIME ,",
                "LINE.ENDDATE as LIN_ENDDATE,",
                "LINE.RTSPODEPARTURENUMBER as LIN_RTSPODEPARTURENUMBER ,",
                "LINE.VERSION as LIN_VERSION ,",
                "LINE.LINEDIRECTIONID as LIN_LINEDIRECTIONID ,",
                "LINE.HOURS_BEFORE_DEPARTURE LIN_HOURS_BEFORE_DEPARTURE ,",
                "SHIPTEMPLATE.CODE as SHI_CODE,",
                "SHIPTEMPLATE.STARTDATE as SHI_STARTDATE ,",
                "SHIPTEMPLATE.NAME as  SHI_NAME,",
                "SHIPTEMPLATE.SHIPTYPE as SHI_SHIPTYPE,",
                "SHIPTEMPLATE.DIVISION as SHI_DIVISION ,",
                "SHIPTEMPLATE.PHYSICALSHIPNAME as SHI_PHYSICALSHIPNAME ,",
                "SHIPTEMPLATE.PHYSICALSHIPSTARTDATE as SHI_PHYSICALSHIPSTARTDATE ,",
                "SHIPTEMPLATE.DAYNIGHT as SHI_DAYNIGHT,",
                "SHIPTEMPLATE.ENDDATE as SHI_ENDDATE,",
                "SHIPTEMPLATE.VERSION as SHI_VERSION ,",
                "PHYSICALSHIP.NAME as PHY_NAME ,",
                "PHYSICALSHIP.STARTDATE as PHY_STARTDATE ,",
                "PHYSICALSHIP.ENDDATE as PHY_ENDDATE ,",
                "PHYSICALSHIP.DESCRIPTION as PHY_DESCRIPTION ,",
                "PHYSICALSHIP.VERSION as PHY_VERSION ,",
                "PHYSICALSHIP.VINGCARDNAME as PHY_VINGCARDNAME ,",
                "PHYSICALSHIP.LLOYDSREGISTER as PHY_LLOYDSREGISTER ,",
                "PHYSICALSHIP.CALLRADIOSIGNAL as PHY_CALLRADIOSIGNAL ,",
                "PHYSICALSHIP.CODE as PHY_CODE ,",
                "PHYSICALSHIP.WIDTHTRESHOLD as PHY_WIDTHTRESHOLD ,",
                "PHYSICALSHIP.BUILDYEAR as PHY_BUILDYEAR ,",
                "PHYSICALSHIP.COUNTRYFLAG as PHY_COUNTRYFLAG ,",
                "PHYSICALSHIP.ICECLASS as PHY_ICECLASS ,",
                "PHYSICALSHIP.ISDUMMYSHIP as PHY_ISDUMMYSHIP ,",
                "DEPARTSAILINGPORTSCHEDULE.SAILINGCODE as DEP_SAILINGCODE ,",
                "DEPARTSAILINGPORTSCHEDULE.SAILINGSTARTDATE as DEP_SAILINGSTARTDATE ,",
                "DEPARTSAILINGPORTSCHEDULE.PORTCODE as DEP_PORTCODE ,",
                "DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE as DEP_PORTSTARTDATE ,",
                "DEPARTSAILINGPORTSCHEDULE.STARTDATE as DEP_STARTDATE ,",
                "DEPARTSAILINGPORTSCHEDULE.PORTORDER as DEP_PORTORDER",
                ",DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME                       as DEP_DEPARTUREDATETIME",
                ",TRUNC(DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME)                as DEP_DEPARTUREDATE",
                ",to_char( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'HH24:MI' ) as DEP_DEPARTURETIME",
                ",to_char( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'HH24' )    as DEP_DEPARTURETIMEHOUR",
                ",to_char ( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'Month' ) as DEP_DEPARTUREDATEMONTH",
                ",to_char ( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'MM' ) as DEP_DEPARTUREDATEMONTHSORT",
                ",to_char ( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'Day' ) as DEP_DEPARTUREDATEDAYOFWEEK",
                ",to_char ( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'Day',  'NLS_DATE_LANGUAGE=''numeric date language''' ) as DEP_DEPARTUREDATEDAYOFWEEKSORT",
                ",to_char ( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'DD' ) as DEP_DEPARTUREDATEDAY,",
                "DEPARTSAILINGPORTSCHEDULE.ARRIVALTIME as DEP_ARRIVALTIME ,",
                "DEPARTSAILINGPORTSCHEDULE.ENDDATE as DEP_ENDDATE ,",
                "DEPARTSAILINGPORTSCHEDULE.VERSION as DEP_VERSION ,",
                "DEPARTSAILINGPORTSCHEDULE.GVNUMBERIMPORT as DEP_GVNUMBERIMPORT ,",
                "DEPARTSAILINGPORTSCHEDULE.GVNUMBEREXPORT as DEP_GVNUMBEREXPORT ,",
                "DEPARTSAILINGPORTSCHEDULE.ACTUALDEPARTUREDATE as DEP_ACTUALDEPARTUREDATE ,",
                "DEPARTSAILINGPORTSCHEDULE.ACTUALARRIVALDATE as DEP_ACTUALARRIVALDATE ,",
                "DEPARTSAILINGPORTSCHEDULE.GSVOYAGECODE as DEP_GSVOYAGECODE ,",
                "DEPARTSAILINGPORTSCHEDULE.REPORTCLOSED as DEP_REPORTCLOSED ,",
                "DEPARTSAILINGPORTSCHEDULE.BERTH  as DEP_BERTH ,",
                "ARRIVALSAILINGPORTSCHEDULE.SAILINGCODE as ARR_SAILINGCODE ,",
                "ARRIVALSAILINGPORTSCHEDULE.SAILINGSTARTDATE as ARR_SAILINGSTARTDATE ,",
                "ARRIVALSAILINGPORTSCHEDULE.PORTCODE as ARR_PORTCODE ,",
                "ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE as ARR_PORTSTARTDATE ,",
                "ARRIVALSAILINGPORTSCHEDULE.STARTDATE as ARR_STARTDATE ,",
                "ARRIVALSAILINGPORTSCHEDULE.PORTORDER as ARR_PORTORDER ,",
                "ARRIVALSAILINGPORTSCHEDULE.DEPARTURETIME as ARR_DEPARTURETIME ,",
                "ARRIVALSAILINGPORTSCHEDULE.ARRIVALTIME as ARR_ARRIVALDATETIME ",
                "       ,TRUNC(ARRIVALSAILINGPORTSCHEDULE.ARRIVALTIME) as ARR_ARRIVALDATE",
                "       ,to_char( ARRIVALSAILINGPORTSCHEDULE.ARRIVALTIME, 'HH24:MI' ) as ARR_ARRIVALTIME",
                "       ,to_char( ARRIVALSAILINGPORTSCHEDULE.ARRIVALTIME, 'HH24' ) as ARR_ARRIVALTIMEHOUR,",
                "ARRIVALSAILINGPORTSCHEDULE.ENDDATE as ARR_ENDDATE ,",
                "ARRIVALSAILINGPORTSCHEDULE.VERSION as ARR_VERSION ,",
                "ARRIVALSAILINGPORTSCHEDULE.GVNUMBERIMPORT as ARR_GVNUMBERIMPORT ,",
                "ARRIVALSAILINGPORTSCHEDULE.GVNUMBEREXPORT as ARR_GVNUMBEREXPORT ,",
                "ARRIVALSAILINGPORTSCHEDULE.ACTUALDEPARTUREDATE as ARR_ACTUALDEPARTUREDATE ,",
                "ARRIVALSAILINGPORTSCHEDULE.ACTUALARRIVALDATE as ARR_ACTUALARRIVALDATE ,",
                "ARRIVALSAILINGPORTSCHEDULE.GSVOYAGECODE as ARR_GSVOYAGECODE ,",
                "ARRIVALSAILINGPORTSCHEDULE.REPORTCLOSED as ARR_REPORTCLOSED ,",
                "ARRIVALSAILINGPORTSCHEDULE.BERTH  as ARR_BERTH ,",
                "LEG.CODE as LEG_CODE ,",
                "LEG.STARTDATE as LEG_STARTDATE ,",
                "LEG.DEPARTURE_PORT as LEG_DEPARTURE_PORT ,",
                "LEG.DEPARTURE_PORTSTARTDATE as LEG_DEPARTURE_PORTSTARTDATE ,",
                "LEG.ARRIVAL_PORT as LEG_ARRIVAL_PORT ,",
                "LEG.ARRIVAL_PORTSTARTDATE as LEG_ARRIVAL_PORTSTARTDATE ,",
                "LEG.ENDDATE as LEG_ENDDATE ,",
                "LEG.VERSION as LEG_VERSION ,",
                "LEG.MANDATORYDOCUMENT as LEG_MANDATORYDOCUMENT ,",
                "DEPARTPORT.CODE as DPO_CODE  ,",
                "DEPARTPORT.STARTDATE as DPO_STARTDATE  ,",
                "DEPARTPORT.GEOGRAPHICALAREA as DPO_GEOGRAPHICALAREA  ,",
                "DEPARTPORT.COUNTRY as DPO_COUNTRY  ,",
                "DEPARTPORT.NAME as DPO_NAME  ,",
                "DEPARTPORT.DESCRIPTION as DPO_DESCRIPTION  ,",
                "DEPARTPORT.EMAIL as DPO_EMAIL  ,",
                "DEPARTPORT.FAX as DPO_FAX  ,",
                "DEPARTPORT.ENDDATE as DPO_ENDDATE  ,",
                "DEPARTPORT.VERSION as DPO_VERSION  ,",
                "DEPARTPORT.PORTID as DPO_PORTID  ,",
                "DEPARTPORT.ADDRESS as DPO_ADDRESS  ,",
                "DEPARTPORT.TOWN as DPO_TOWN  ,",
                "DEPARTPORT.DISTRICT as DPO_DISTRICT  ,",
                "DEPARTPORT.POSTCODE as DPO_POSTCODE  ,",
                "DEPARTPORT.DESTINATIONCODE as DPO_DESTINATIONCODE  ,",
                "ARRIVALPORT.CODE as APO_CODE  ,",
                "ARRIVALPORT.STARTDATE as APO_STARTDATE  ,",
                "ARRIVALPORT.GEOGRAPHICALAREA as APO_GEOGRAPHICALAREA  ,",
                "ARRIVALPORT.COUNTRY as APO_COUNTRY  ,",
                "ARRIVALPORT.NAME as APO_NAME  ,",
                "ARRIVALPORT.DESCRIPTION as APO_DESCRIPTION  ,",
                "ARRIVALPORT.EMAIL as APO_EMAIL  ,",
                "ARRIVALPORT.FAX as APO_FAX  ,",
                "ARRIVALPORT.ENDDATE as APO_ENDDATE  ,",
                "ARRIVALPORT.VERSION as APO_VERSION  ,",
                "ARRIVALPORT.PORTID as APO_PORTID  ,",
                "ARRIVALPORT.ADDRESS as APO_ADDRESS  ,",
                "ARRIVALPORT.TOWN as APO_TOWN  ,",
                "ARRIVALPORT.DISTRICT as APO_DISTRICT  ,",
                "ARRIVALPORT.POSTCODE as APO_POSTCODE  ,",
                "ARRIVALPORT.DESTINATIONCODE as APO_DESTINATIONCODE  ,",
                "DEPARTGEOGRAPHICALAREA.CODE as GED_CODE ,",
                "DEPARTGEOGRAPHICALAREA.NAME as GED_NAME ,",
                "DEPARTGEOGRAPHICALAREA.COUNTRY as GED_COUNTRY ,",
                "ARRIVALGEOGRAPHICALAREA.CODE as GEA_CODE ,",
                "ARRIVALGEOGRAPHICALAREA.NAME as GEA_NAME ,",
                "ARRIVALGEOGRAPHICALAREA.COUNTRY as GEA_COUNTRY,",
                "SAILINGVESSELLICENSE.VESSELLICENSECODE as LIC_VESSELLICENSECODE,",
                "SAILINGVESSELLICENSE.CREWNUMBER as LIC_CREWNUMBER,",
                "SAILINGVESSELLICENSE.SELLABLECAPACITY as LIC_SELLABLECAPACITY,",
                "SAILINGVESSELLICENSE.MAXCAPACITY as LIC_MAXCAPACITY",
                "FROM",
                "eBooking.MSP_SAILING SAILING,",
                "(select CODE, MAX(STARTDATE) as STARTDATE ",
                " from eBooking.MSP_SAILING ",
                " group by CODE) SAILINGFILTER,",
                "eBooking.MSP_LINE LINE ,",
                "eBooking.MSP_SHIPTEMPLATE SHIPTEMPLATE ,",
                "eBooking.MSP_PHYSICALSHIP PHYSICALSHIP ,",
                "eBooking.MSP_SAILINGPORTSCHEDULE DEPARTSAILINGPORTSCHEDULE ,",
                "eBooking.MSP_SAILINGPORTSCHEDULE ARRIVALSAILINGPORTSCHEDULE ,",
                "eBooking.MSP_LEG LEG ,",
                "eBooking.MSP_PORT DEPARTPORT ,",
                "eBooking.MSP_PORT ARRIVALPORT ,",
                "eBooking.MSP_GEOGRAPHICALAREA DEPARTGEOGRAPHICALAREA ,",
                "eBooking.MSP_GEOGRAPHICALAREA ARRIVALGEOGRAPHICALAREA,",
                "eBooking.MSP_SAILINGVESSELLICENSE SAILINGVESSELLICENSE,",
                "(select SAILINGCODE, SHIPTEMPLATECODE, MAX(STARTDATE) as STARTDATE",
                "  from eBooking.MSP_SAILINGVESSELLICENSE ",
                "   group by SAILINGCODE, SHIPTEMPLATECODE) LICENSEFILTER",
                "WHERE ",
                "SAILING.CODE = SAILINGFILTER.CODE",
                "and SAILING.STARTDATE = SAILINGFILTER.STARTDATE",
                "and SAILING.LINECODE = LINE.CODE",
                "AND SAILING.SHIPTEMPLATECODE = SHIPTEMPLATE.CODE",
                "  AND SAILING.SHIPTEMPLATESTARTDATE = SHIPTEMPLATE.STARTDATE",
                "  AND PHYSICALSHIP.NAME = SHIPTEMPLATE.PHYSICALSHIPNAME",
                "  AND PHYSICALSHIP.STARTDATE = SHIPTEMPLATE.PHYSICALSHIPSTARTDATE",
                "  AND SAILING.CODE = DEPARTSAILINGPORTSCHEDULE.SAILINGCODE",
                "  AND SAILING.STARTDATE = DEPARTSAILINGPORTSCHEDULE.SAILINGSTARTDATE",
                "  AND DEPARTSAILINGPORTSCHEDULE.SAILINGCODE = ARRIVALSAILINGPORTSCHEDULE.SAILINGCODE",
                "  AND ARRIVALSAILINGPORTSCHEDULE.PORTORDER = DEPARTSAILINGPORTSCHEDULE.PORTORDER + 1",
                "  AND ARRIVALSAILINGPORTSCHEDULE.STARTDATE = DEPARTSAILINGPORTSCHEDULE.STARTDATE",
                "  AND DEPARTSAILINGPORTSCHEDULE.PORTCODE = LEG.DEPARTURE_PORT",
                "  AND DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE = LEG.DEPARTURE_PORTSTARTDATE",
                "  AND ARRIVALSAILINGPORTSCHEDULE.PORTCODE = LEG.ARRIVAL_PORT",
                "  AND ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE = LEG.ARRIVAL_PORTSTARTDATE",
                "AND DEPARTSAILINGPORTSCHEDULE.PORTCODE = DEPARTPORT.CODE",
                "  AND DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE = DEPARTPORT.STARTDATE",
                "  AND ARRIVALSAILINGPORTSCHEDULE.PORTCODE = ARRIVALPORT.CODE",
                "  AND ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE = ARRIVALPORT.STARTDATE",
                "  AND DEPARTPORT.GEOGRAPHICALAREA = DEPARTGEOGRAPHICALAREA.CODE",
                "  AND ARRIVALPORT.GEOGRAPHICALAREA = ARRIVALGEOGRAPHICALAREA.CODE",
                "  AND SAILING.CODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
                "  AND SAILING.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
                "  AND SAILING.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE ",
                "  AND LICENSEFILTER.SAILINGCODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
                "  AND LICENSEFILTER.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
                "  AND LICENSEFILTER.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE"
              ],
              "dataSource": "Oracle scan.stg01.rac.bcferries.corp"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT",
                  "SAILING.CODE || '-' || SAILING.STARTDATE || '-' || DEPARTSAILINGPORTSCHEDULE.PORTCODE || '-' || ARRIVALSAILINGPORTSCHEDULE.PORTCODE  as SAILING_PK ,",
                  "TO_DATE (SAILING.STARTDATE, 'YYYY-MM-DD hh24:mi:ss') as SAILING_STARTDATE ,",
                  "TO_DATE (SAILING.ENDDATE,   'YYYY-MM-DD hh24:mi:ss') as SAILING_ENDDATE ,",
                  "SAILING.CODE as SAI_CODE,",
                  "SAILING.STARTDATE as SAI_STARTDATE ,",
                  "SAILING.DESCRIPTION as SAI_DESCRIPTION ,",
                  "SAILING.ENDDATE as SAI_ENDDATE ,",
                  "SAILING.SAILINGDEPARTUREDATE as SAI_SAILINGDEPARTUREDATE   ,",
                  "SAILING.JOURNEYDURATION as SAI_JOURNEYDURATION   ,",
                  "SAILING.LOCKED as SAI_LOCKED ,",
                  "SAILING.SCHEDULECODE as SAI_SCHEDULECODE ,",
                  "SAILING.SCHEDULESTARTDATE as SAI_SCHEDULESTARTDATE ,",
                  "SAILING.SHIPTEMPLATECODE as SAI_SHIPTEMPLATECODE ,",
                  "SAILING.SHIPTEMPLATESTARTDATE as SAI_SHIPTEMPLATESTARTDATE ,",
                  "SAILING.LINECODE as SAI_LINECODE ,",
                  "SAILING.LINESTARTDATE as SAI_LINESTARTDATE ,",
                  "SAILING.SAILINGARRIVALDATE as SAI_SAILINGARRIVALDATE ,",
                  "SAILING.DAYNIGHT as SAI_DAYNIGHT ,",
                  "SAILING.VERSION as SAI_VERSION ,",
                  "SAILING.COMMENTS as SAI_COMMENTS ,",
                  "SAILING.VOYAGECODE as SAI_VOYAGECODE ,",
                  "SAILING.HIDEINFORMATION as SAI_HIDEINFORMATION ,",
                  "SAILING.MDS as SAI_MDS ,",
                  "SAILING.NORESERVABLE as SAI_NORESERVABLE ,",
                  "LINE.CODE as LIN_CODE ",
                  "      ,case",
                  "            when (LINE.CODE) in ('10BECA', '10BECB', '10BECC', '10PBBA', '10PBBB', '10PBBC', '10POFA', '10SHWA', '10SHWB') then ('10S')",
                  "            when (LINE.CODE) in ('10PPHA', '10PPHB', '10PPHC', '10PPHD', '10PPRA', '10PPRB', '10PPRC', '10PPRD') then ('10')",
                  "            when (substr(LINE.CODE,1 ,1) in ('5', '9')) then (substr(LINE.CODE,1,1))",
                  "            when (substr(LINE.CODE,1,2) in ('01', '02', '03')) then (substr(LINE.CODE,2,1))",
                  "            when (substr(LINE.CODE,1,1) not in ('5', '9')) then (substr(LINE.CODE,1,2))",
                  "        end as ROUTECODE,",
                  "       case",
                  "           when (LINE.CODE) in ('10BECA', '10BECB', '10BECC', '10PBBA', '10PBBB', '10PBBC', '10POFA', '10SHWA', '10SHWB') then ('10S')",
                  "           when (LINE.CODE) in ('10PPHA', '10PPHB', '10PPHC', '10PPHD', '10PPRA', '10PPRB', '10PPRC', '10PPRD') then ('10')",
                  "           when (substr( LINE.CODE,1 ,1) in ('5', '9')) then ( '0' || (substr( LINE.CODE,1,1)) )",
                  "           when (substr( LINE.CODE,1,1) not in ('5', '9')) then (substr( LINE.CODE,1,2))",
                  "        end as ROUTESORT,",
                  "LINE.STARTDATE as LIN_STARTDATE ,",
                  "LINE.DESCRIPTION as LIN_DESCRIPTION,",
                  "LINE.MILES as LIN_MILES ,",
                  "LINE.DEPARTURE_TIME as LIN_DEPARTURE_TIME ,",
                  "LINE.ARRIVAL_TIME as LIN_ARRIVAL_TIME ,",
                  "LINE.ENDDATE as LIN_ENDDATE,",
                  "LINE.RTSPODEPARTURENUMBER as LIN_RTSPODEPARTURENUMBER ,",
                  "LINE.VERSION as LIN_VERSION ,",
                  "LINE.LINEDIRECTIONID as LIN_LINEDIRECTIONID ,",
                  "LINE.HOURS_BEFORE_DEPARTURE LIN_HOURS_BEFORE_DEPARTURE ,",
                  "SHIPTEMPLATE.CODE as SHI_CODE,",
                  "SHIPTEMPLATE.STARTDATE as SHI_STARTDATE ,",
                  "SHIPTEMPLATE.NAME as  SHI_NAME,",
                  "SHIPTEMPLATE.SHIPTYPE as SHI_SHIPTYPE,",
                  "SHIPTEMPLATE.DIVISION as SHI_DIVISION ,",
                  "SHIPTEMPLATE.PHYSICALSHIPNAME as SHI_PHYSICALSHIPNAME ,",
                  "SHIPTEMPLATE.PHYSICALSHIPSTARTDATE as SHI_PHYSICALSHIPSTARTDATE ,",
                  "SHIPTEMPLATE.DAYNIGHT as SHI_DAYNIGHT,",
                  "SHIPTEMPLATE.ENDDATE as SHI_ENDDATE,",
                  "SHIPTEMPLATE.VERSION as SHI_VERSION ,",
                  "PHYSICALSHIP.NAME as PHY_NAME ,",
                  "PHYSICALSHIP.STARTDATE as PHY_STARTDATE ,",
                  "PHYSICALSHIP.ENDDATE as PHY_ENDDATE ,",
                  "PHYSICALSHIP.DESCRIPTION as PHY_DESCRIPTION ,",
                  "PHYSICALSHIP.VERSION as PHY_VERSION ,",
                  "PHYSICALSHIP.VINGCARDNAME as PHY_VINGCARDNAME ,",
                  "PHYSICALSHIP.LLOYDSREGISTER as PHY_LLOYDSREGISTER ,",
                  "PHYSICALSHIP.CALLRADIOSIGNAL as PHY_CALLRADIOSIGNAL ,",
                  "PHYSICALSHIP.CODE as PHY_CODE ,",
                  "PHYSICALSHIP.WIDTHTRESHOLD as PHY_WIDTHTRESHOLD ,",
                  "PHYSICALSHIP.BUILDYEAR as PHY_BUILDYEAR ,",
                  "PHYSICALSHIP.COUNTRYFLAG as PHY_COUNTRYFLAG ,",
                  "PHYSICALSHIP.ICECLASS as PHY_ICECLASS ,",
                  "PHYSICALSHIP.ISDUMMYSHIP as PHY_ISDUMMYSHIP ,",
                  "DEPARTSAILINGPORTSCHEDULE.SAILINGCODE as DEP_SAILINGCODE ,",
                  "DEPARTSAILINGPORTSCHEDULE.SAILINGSTARTDATE as DEP_SAILINGSTARTDATE ,",
                  "DEPARTSAILINGPORTSCHEDULE.PORTCODE as DEP_PORTCODE ,",
                  "DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE as DEP_PORTSTARTDATE ,",
                  "DEPARTSAILINGPORTSCHEDULE.STARTDATE as DEP_STARTDATE ,",
                  "DEPARTSAILINGPORTSCHEDULE.PORTORDER as DEP_PORTORDER",
                  ",DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME                       as DEP_DEPARTUREDATETIME",
                  ",TRUNC(DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME)                as DEP_DEPARTUREDATE",
                  ",to_char( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'HH24:MI' ) as DEP_DEPARTURETIME",
                  ",to_char( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'HH24' )    as DEP_DEPARTURETIMEHOUR",
                  ",to_char ( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'Month' ) as DEP_DEPARTUREDATEMONTH",
                  ",to_char ( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'MM' ) as DEP_DEPARTUREDATEMONTHSORT",
                  ",to_char ( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'Day' ) as DEP_DEPARTUREDATEDAYOFWEEK",
                  ",to_char ( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'Day',  'NLS_DATE_LANGUAGE=''numeric date language''' ) as DEP_DEPARTUREDATEDAYOFWEEKSORT",
                  ",to_char ( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'DD' ) as DEP_DEPARTUREDATEDAY,",
                  "DEPARTSAILINGPORTSCHEDULE.ARRIVALTIME as DEP_ARRIVALTIME ,",
                  "DEPARTSAILINGPORTSCHEDULE.ENDDATE as DEP_ENDDATE ,",
                  "DEPARTSAILINGPORTSCHEDULE.VERSION as DEP_VERSION ,",
                  "DEPARTSAILINGPORTSCHEDULE.GVNUMBERIMPORT as DEP_GVNUMBERIMPORT ,",
                  "DEPARTSAILINGPORTSCHEDULE.GVNUMBEREXPORT as DEP_GVNUMBEREXPORT ,",
                  "DEPARTSAILINGPORTSCHEDULE.ACTUALDEPARTUREDATE as DEP_ACTUALDEPARTUREDATE ,",
                  "DEPARTSAILINGPORTSCHEDULE.ACTUALARRIVALDATE as DEP_ACTUALARRIVALDATE ,",
                  "DEPARTSAILINGPORTSCHEDULE.GSVOYAGECODE as DEP_GSVOYAGECODE ,",
                  "DEPARTSAILINGPORTSCHEDULE.REPORTCLOSED as DEP_REPORTCLOSED ,",
                  "DEPARTSAILINGPORTSCHEDULE.BERTH  as DEP_BERTH ,",
                  "ARRIVALSAILINGPORTSCHEDULE.SAILINGCODE as ARR_SAILINGCODE ,",
                  "ARRIVALSAILINGPORTSCHEDULE.SAILINGSTARTDATE as ARR_SAILINGSTARTDATE ,",
                  "ARRIVALSAILINGPORTSCHEDULE.PORTCODE as ARR_PORTCODE ,",
                  "ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE as ARR_PORTSTARTDATE ,",
                  "ARRIVALSAILINGPORTSCHEDULE.STARTDATE as ARR_STARTDATE ,",
                  "ARRIVALSAILINGPORTSCHEDULE.PORTORDER as ARR_PORTORDER ,",
                  "ARRIVALSAILINGPORTSCHEDULE.DEPARTURETIME as ARR_DEPARTURETIME ,",
                  "ARRIVALSAILINGPORTSCHEDULE.ARRIVALTIME as ARR_ARRIVALDATETIME ",
                  "       ,TRUNC(ARRIVALSAILINGPORTSCHEDULE.ARRIVALTIME) as ARR_ARRIVALDATE",
                  "       ,to_char( ARRIVALSAILINGPORTSCHEDULE.ARRIVALTIME, 'HH24:MI' ) as ARR_ARRIVALTIME",
                  "       ,to_char( ARRIVALSAILINGPORTSCHEDULE.ARRIVALTIME, 'HH24' ) as ARR_ARRIVALTIMEHOUR,",
                  "ARRIVALSAILINGPORTSCHEDULE.ENDDATE as ARR_ENDDATE ,",
                  "ARRIVALSAILINGPORTSCHEDULE.VERSION as ARR_VERSION ,",
                  "ARRIVALSAILINGPORTSCHEDULE.GVNUMBERIMPORT as ARR_GVNUMBERIMPORT ,",
                  "ARRIVALSAILINGPORTSCHEDULE.GVNUMBEREXPORT as ARR_GVNUMBEREXPORT ,",
                  "ARRIVALSAILINGPORTSCHEDULE.ACTUALDEPARTUREDATE as ARR_ACTUALDEPARTUREDATE ,",
                  "ARRIVALSAILINGPORTSCHEDULE.ACTUALARRIVALDATE as ARR_ACTUALARRIVALDATE ,",
                  "ARRIVALSAILINGPORTSCHEDULE.GSVOYAGECODE as ARR_GSVOYAGECODE ,",
                  "ARRIVALSAILINGPORTSCHEDULE.REPORTCLOSED as ARR_REPORTCLOSED ,",
                  "ARRIVALSAILINGPORTSCHEDULE.BERTH  as ARR_BERTH ,",
                  "LEG.CODE as LEG_CODE ,",
                  "LEG.STARTDATE as LEG_STARTDATE ,",
                  "LEG.DEPARTURE_PORT as LEG_DEPARTURE_PORT ,",
                  "LEG.DEPARTURE_PORTSTARTDATE as LEG_DEPARTURE_PORTSTARTDATE ,",
                  "LEG.ARRIVAL_PORT as LEG_ARRIVAL_PORT ,",
                  "LEG.ARRIVAL_PORTSTARTDATE as LEG_ARRIVAL_PORTSTARTDATE ,",
                  "LEG.ENDDATE as LEG_ENDDATE ,",
                  "LEG.VERSION as LEG_VERSION ,",
                  "LEG.MANDATORYDOCUMENT as LEG_MANDATORYDOCUMENT ,",
                  "DEPARTPORT.CODE as DPO_CODE  ,",
                  "DEPARTPORT.STARTDATE as DPO_STARTDATE  ,",
                  "DEPARTPORT.GEOGRAPHICALAREA as DPO_GEOGRAPHICALAREA  ,",
                  "DEPARTPORT.COUNTRY as DPO_COUNTRY  ,",
                  "DEPARTPORT.NAME as DPO_NAME  ,",
                  "DEPARTPORT.DESCRIPTION as DPO_DESCRIPTION  ,",
                  "DEPARTPORT.EMAIL as DPO_EMAIL  ,",
                  "DEPARTPORT.FAX as DPO_FAX  ,",
                  "DEPARTPORT.ENDDATE as DPO_ENDDATE  ,",
                  "DEPARTPORT.VERSION as DPO_VERSION  ,",
                  "DEPARTPORT.PORTID as DPO_PORTID  ,",
                  "DEPARTPORT.ADDRESS as DPO_ADDRESS  ,",
                  "DEPARTPORT.TOWN as DPO_TOWN  ,",
                  "DEPARTPORT.DISTRICT as DPO_DISTRICT  ,",
                  "DEPARTPORT.POSTCODE as DPO_POSTCODE  ,",
                  "DEPARTPORT.DESTINATIONCODE as DPO_DESTINATIONCODE  ,",
                  "ARRIVALPORT.CODE as APO_CODE  ,",
                  "ARRIVALPORT.STARTDATE as APO_STARTDATE  ,",
                  "ARRIVALPORT.GEOGRAPHICALAREA as APO_GEOGRAPHICALAREA  ,",
                  "ARRIVALPORT.COUNTRY as APO_COUNTRY  ,",
                  "ARRIVALPORT.NAME as APO_NAME  ,",
                  "ARRIVALPORT.DESCRIPTION as APO_DESCRIPTION  ,",
                  "ARRIVALPORT.EMAIL as APO_EMAIL  ,",
                  "ARRIVALPORT.FAX as APO_FAX  ,",
                  "ARRIVALPORT.ENDDATE as APO_ENDDATE  ,",
                  "ARRIVALPORT.VERSION as APO_VERSION  ,",
                  "ARRIVALPORT.PORTID as APO_PORTID  ,",
                  "ARRIVALPORT.ADDRESS as APO_ADDRESS  ,",
                  "ARRIVALPORT.TOWN as APO_TOWN  ,",
                  "ARRIVALPORT.DISTRICT as APO_DISTRICT  ,",
                  "ARRIVALPORT.POSTCODE as APO_POSTCODE  ,",
                  "ARRIVALPORT.DESTINATIONCODE as APO_DESTINATIONCODE  ,",
                  "DEPARTGEOGRAPHICALAREA.CODE as GED_CODE ,",
                  "DEPARTGEOGRAPHICALAREA.NAME as GED_NAME ,",
                  "DEPARTGEOGRAPHICALAREA.COUNTRY as GED_COUNTRY ,",
                  "ARRIVALGEOGRAPHICALAREA.CODE as GEA_CODE ,",
                  "ARRIVALGEOGRAPHICALAREA.NAME as GEA_NAME ,",
                  "ARRIVALGEOGRAPHICALAREA.COUNTRY as GEA_COUNTRY,",
                  "SAILINGVESSELLICENSE.VESSELLICENSECODE as LIC_VESSELLICENSECODE,",
                  "SAILINGVESSELLICENSE.CREWNUMBER as LIC_CREWNUMBER,",
                  "SAILINGVESSELLICENSE.SELLABLECAPACITY as LIC_SELLABLECAPACITY,",
                  "SAILINGVESSELLICENSE.MAXCAPACITY as LIC_MAXCAPACITY",
                  "FROM",
                  "eBooking.MSP_SAILING SAILING,",
                  "(select CODE, MAX(STARTDATE) as STARTDATE ",
                  " from eBooking.MSP_SAILING ",
                  " group by CODE) SAILINGFILTER,",
                  "eBooking.MSP_LINE LINE ,",
                  "eBooking.MSP_SHIPTEMPLATE SHIPTEMPLATE ,",
                  "eBooking.MSP_PHYSICALSHIP PHYSICALSHIP ,",
                  "eBooking.MSP_SAILINGPORTSCHEDULE DEPARTSAILINGPORTSCHEDULE ,",
                  "eBooking.MSP_SAILINGPORTSCHEDULE ARRIVALSAILINGPORTSCHEDULE ,",
                  "eBooking.MSP_LEG LEG ,",
                  "eBooking.MSP_PORT DEPARTPORT ,",
                  "eBooking.MSP_PORT ARRIVALPORT ,",
                  "eBooking.MSP_GEOGRAPHICALAREA DEPARTGEOGRAPHICALAREA ,",
                  "eBooking.MSP_GEOGRAPHICALAREA ARRIVALGEOGRAPHICALAREA,",
                  "eBooking.MSP_SAILINGVESSELLICENSE SAILINGVESSELLICENSE,",
                  "(select SAILINGCODE, SHIPTEMPLATECODE, MAX(STARTDATE) as STARTDATE",
                  "  from eBooking.MSP_SAILINGVESSELLICENSE ",
                  "   group by SAILINGCODE, SHIPTEMPLATECODE) LICENSEFILTER",
                  "WHERE ",
                  "SAILING.CODE = SAILINGFILTER.CODE",
                  "and SAILING.STARTDATE = SAILINGFILTER.STARTDATE",
                  "and SAILING.LINECODE = LINE.CODE",
                  "AND SAILING.SHIPTEMPLATECODE = SHIPTEMPLATE.CODE",
                  "  AND SAILING.SHIPTEMPLATESTARTDATE = SHIPTEMPLATE.STARTDATE",
                  "  AND PHYSICALSHIP.NAME = SHIPTEMPLATE.PHYSICALSHIPNAME",
                  "  AND PHYSICALSHIP.STARTDATE = SHIPTEMPLATE.PHYSICALSHIPSTARTDATE",
                  "  AND SAILING.CODE = DEPARTSAILINGPORTSCHEDULE.SAILINGCODE",
                  "  AND SAILING.STARTDATE = DEPARTSAILINGPORTSCHEDULE.SAILINGSTARTDATE",
                  "  AND DEPARTSAILINGPORTSCHEDULE.SAILINGCODE = ARRIVALSAILINGPORTSCHEDULE.SAILINGCODE",
                  "  AND ARRIVALSAILINGPORTSCHEDULE.PORTORDER = DEPARTSAILINGPORTSCHEDULE.PORTORDER + 1",
                  "  AND ARRIVALSAILINGPORTSCHEDULE.STARTDATE = DEPARTSAILINGPORTSCHEDULE.STARTDATE",
                  "  AND DEPARTSAILINGPORTSCHEDULE.PORTCODE = LEG.DEPARTURE_PORT",
                  "  AND DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE = LEG.DEPARTURE_PORTSTARTDATE",
                  "  AND ARRIVALSAILINGPORTSCHEDULE.PORTCODE = LEG.ARRIVAL_PORT",
                  "  AND ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE = LEG.ARRIVAL_PORTSTARTDATE",
                  "AND DEPARTSAILINGPORTSCHEDULE.PORTCODE = DEPARTPORT.CODE",
                  "  AND DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE = DEPARTPORT.STARTDATE",
                  "  AND ARRIVALSAILINGPORTSCHEDULE.PORTCODE = ARRIVALPORT.CODE",
                  "  AND ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE = ARRIVALPORT.STARTDATE",
                  "  AND DEPARTPORT.GEOGRAPHICALAREA = DEPARTGEOGRAPHICALAREA.CODE",
                  "  AND ARRIVALPORT.GEOGRAPHICALAREA = ARRIVALGEOGRAPHICALAREA.CODE",
                  "  AND SAILING.CODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
                  "  AND SAILING.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
                  "  AND SAILING.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE ",
                  "  AND LICENSEFILTER.SAILINGCODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
                  "  AND LICENSEFILTER.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
                  "  AND LICENSEFILTER.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT",
              "SAILING.CODE || '-' || SAILING.STARTDATE || '-' || DEPARTSAILINGPORTSCHEDULE.PORTCODE || '-' || ARRIVALSAILINGPORTSCHEDULE.PORTCODE  as SAILING_PK ,",
              "TO_DATE (SAILING.STARTDATE, 'YYYY-MM-DD hh24:mi:ss') as SAILING_STARTDATE ,",
              "TO_DATE (SAILING.ENDDATE,   'YYYY-MM-DD hh24:mi:ss') as SAILING_ENDDATE ,",
              "SAILING.CODE as SAI_CODE,",
              "SAILING.STARTDATE as SAI_STARTDATE ,",
              "SAILING.DESCRIPTION as SAI_DESCRIPTION ,",
              "SAILING.ENDDATE as SAI_ENDDATE ,",
              "SAILING.SAILINGDEPARTUREDATE as SAI_SAILINGDEPARTUREDATE   ,",
              "SAILING.JOURNEYDURATION as SAI_JOURNEYDURATION   ,",
              "SAILING.LOCKED as SAI_LOCKED ,",
              "SAILING.SCHEDULECODE as SAI_SCHEDULECODE ,",
              "SAILING.SCHEDULESTARTDATE as SAI_SCHEDULESTARTDATE ,",
              "SAILING.SHIPTEMPLATECODE as SAI_SHIPTEMPLATECODE ,",
              "SAILING.SHIPTEMPLATESTARTDATE as SAI_SHIPTEMPLATESTARTDATE ,",
              "SAILING.LINECODE as SAI_LINECODE ,",
              "SAILING.LINESTARTDATE as SAI_LINESTARTDATE ,",
              "SAILING.SAILINGARRIVALDATE as SAI_SAILINGARRIVALDATE ,",
              "SAILING.DAYNIGHT as SAI_DAYNIGHT ,",
              "SAILING.VERSION as SAI_VERSION ,",
              "SAILING.COMMENTS as SAI_COMMENTS ,",
              "SAILING.VOYAGECODE as SAI_VOYAGECODE ,",
              "SAILING.HIDEINFORMATION as SAI_HIDEINFORMATION ,",
              "SAILING.MDS as SAI_MDS ,",
              "SAILING.NORESERVABLE as SAI_NORESERVABLE ,",
              "LINE.CODE as LIN_CODE ",
              "      ,case",
              "            when (LINE.CODE) in ('10BECA', '10BECB', '10BECC', '10PBBA', '10PBBB', '10PBBC', '10POFA', '10SHWA', '10SHWB') then ('10S')",
              "            when (LINE.CODE) in ('10PPHA', '10PPHB', '10PPHC', '10PPHD', '10PPRA', '10PPRB', '10PPRC', '10PPRD') then ('10')",
              "            when (substr(LINE.CODE,1 ,1) in ('5', '9')) then (substr(LINE.CODE,1,1))",
              "            when (substr(LINE.CODE,1,2) in ('01', '02', '03')) then (substr(LINE.CODE,2,1))",
              "            when (substr(LINE.CODE,1,1) not in ('5', '9')) then (substr(LINE.CODE,1,2))",
              "        end as ROUTECODE,",
              "       case",
              "           when (LINE.CODE) in ('10BECA', '10BECB', '10BECC', '10PBBA', '10PBBB', '10PBBC', '10POFA', '10SHWA', '10SHWB') then ('10S')",
              "           when (LINE.CODE) in ('10PPHA', '10PPHB', '10PPHC', '10PPHD', '10PPRA', '10PPRB', '10PPRC', '10PPRD') then ('10')",
              "           when (substr( LINE.CODE,1 ,1) in ('5', '9')) then ( '0' || (substr( LINE.CODE,1,1)) )",
              "           when (substr( LINE.CODE,1,1) not in ('5', '9')) then (substr( LINE.CODE,1,2))",
              "        end as ROUTESORT,",
              "LINE.STARTDATE as LIN_STARTDATE ,",
              "LINE.DESCRIPTION as LIN_DESCRIPTION,",
              "LINE.MILES as LIN_MILES ,",
              "LINE.DEPARTURE_TIME as LIN_DEPARTURE_TIME ,",
              "LINE.ARRIVAL_TIME as LIN_ARRIVAL_TIME ,",
              "LINE.ENDDATE as LIN_ENDDATE,",
              "LINE.RTSPODEPARTURENUMBER as LIN_RTSPODEPARTURENUMBER ,",
              "LINE.VERSION as LIN_VERSION ,",
              "LINE.LINEDIRECTIONID as LIN_LINEDIRECTIONID ,",
              "LINE.HOURS_BEFORE_DEPARTURE LIN_HOURS_BEFORE_DEPARTURE ,",
              "SHIPTEMPLATE.CODE as SHI_CODE,",
              "SHIPTEMPLATE.STARTDATE as SHI_STARTDATE ,",
              "SHIPTEMPLATE.NAME as  SHI_NAME,",
              "SHIPTEMPLATE.SHIPTYPE as SHI_SHIPTYPE,",
              "SHIPTEMPLATE.DIVISION as SHI_DIVISION ,",
              "SHIPTEMPLATE.PHYSICALSHIPNAME as SHI_PHYSICALSHIPNAME ,",
              "SHIPTEMPLATE.PHYSICALSHIPSTARTDATE as SHI_PHYSICALSHIPSTARTDATE ,",
              "SHIPTEMPLATE.DAYNIGHT as SHI_DAYNIGHT,",
              "SHIPTEMPLATE.ENDDATE as SHI_ENDDATE,",
              "SHIPTEMPLATE.VERSION as SHI_VERSION ,",
              "PHYSICALSHIP.NAME as PHY_NAME ,",
              "PHYSICALSHIP.STARTDATE as PHY_STARTDATE ,",
              "PHYSICALSHIP.ENDDATE as PHY_ENDDATE ,",
              "PHYSICALSHIP.DESCRIPTION as PHY_DESCRIPTION ,",
              "PHYSICALSHIP.VERSION as PHY_VERSION ,",
              "PHYSICALSHIP.VINGCARDNAME as PHY_VINGCARDNAME ,",
              "PHYSICALSHIP.LLOYDSREGISTER as PHY_LLOYDSREGISTER ,",
              "PHYSICALSHIP.CALLRADIOSIGNAL as PHY_CALLRADIOSIGNAL ,",
              "PHYSICALSHIP.CODE as PHY_CODE ,",
              "PHYSICALSHIP.WIDTHTRESHOLD as PHY_WIDTHTRESHOLD ,",
              "PHYSICALSHIP.BUILDYEAR as PHY_BUILDYEAR ,",
              "PHYSICALSHIP.COUNTRYFLAG as PHY_COUNTRYFLAG ,",
              "PHYSICALSHIP.ICECLASS as PHY_ICECLASS ,",
              "PHYSICALSHIP.ISDUMMYSHIP as PHY_ISDUMMYSHIP ,",
              "DEPARTSAILINGPORTSCHEDULE.SAILINGCODE as DEP_SAILINGCODE ,",
              "DEPARTSAILINGPORTSCHEDULE.SAILINGSTARTDATE as DEP_SAILINGSTARTDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.PORTCODE as DEP_PORTCODE ,",
              "DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE as DEP_PORTSTARTDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.STARTDATE as DEP_STARTDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.PORTORDER as DEP_PORTORDER",
              ",DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME                       as DEP_DEPARTUREDATETIME",
              ",TRUNC(DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME)                as DEP_DEPARTUREDATE",
              ",to_char( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'HH24:MI' ) as DEP_DEPARTURETIME",
              ",to_char( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'HH24' )    as DEP_DEPARTURETIMEHOUR",
              ",to_char ( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'Month' ) as DEP_DEPARTUREDATEMONTH",
              ",to_char ( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'MM' ) as DEP_DEPARTUREDATEMONTHSORT",
              ",to_char ( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'Day' ) as DEP_DEPARTUREDATEDAYOFWEEK",
              ",to_char ( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'Day',  'NLS_DATE_LANGUAGE=''numeric date language''' ) as DEP_DEPARTUREDATEDAYOFWEEKSORT",
              ",to_char ( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'DD' ) as DEP_DEPARTUREDATEDAY,",
              "DEPARTSAILINGPORTSCHEDULE.ARRIVALTIME as DEP_ARRIVALTIME ,",
              "DEPARTSAILINGPORTSCHEDULE.ENDDATE as DEP_ENDDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.VERSION as DEP_VERSION ,",
              "DEPARTSAILINGPORTSCHEDULE.GVNUMBERIMPORT as DEP_GVNUMBERIMPORT ,",
              "DEPARTSAILINGPORTSCHEDULE.GVNUMBEREXPORT as DEP_GVNUMBEREXPORT ,",
              "DEPARTSAILINGPORTSCHEDULE.ACTUALDEPARTUREDATE as DEP_ACTUALDEPARTUREDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.ACTUALARRIVALDATE as DEP_ACTUALARRIVALDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.GSVOYAGECODE as DEP_GSVOYAGECODE ,",
              "DEPARTSAILINGPORTSCHEDULE.REPORTCLOSED as DEP_REPORTCLOSED ,",
              "DEPARTSAILINGPORTSCHEDULE.BERTH  as DEP_BERTH ,",
              "ARRIVALSAILINGPORTSCHEDULE.SAILINGCODE as ARR_SAILINGCODE ,",
              "ARRIVALSAILINGPORTSCHEDULE.SAILINGSTARTDATE as ARR_SAILINGSTARTDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.PORTCODE as ARR_PORTCODE ,",
              "ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE as ARR_PORTSTARTDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.STARTDATE as ARR_STARTDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.PORTORDER as ARR_PORTORDER ,",
              "ARRIVALSAILINGPORTSCHEDULE.DEPARTURETIME as ARR_DEPARTURETIME ,",
              "ARRIVALSAILINGPORTSCHEDULE.ARRIVALTIME as ARR_ARRIVALDATETIME ",
              "       ,TRUNC(ARRIVALSAILINGPORTSCHEDULE.ARRIVALTIME) as ARR_ARRIVALDATE",
              "       ,to_char( ARRIVALSAILINGPORTSCHEDULE.ARRIVALTIME, 'HH24:MI' ) as ARR_ARRIVALTIME",
              "       ,to_char( ARRIVALSAILINGPORTSCHEDULE.ARRIVALTIME, 'HH24' ) as ARR_ARRIVALTIMEHOUR,",
              "ARRIVALSAILINGPORTSCHEDULE.ENDDATE as ARR_ENDDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.VERSION as ARR_VERSION ,",
              "ARRIVALSAILINGPORTSCHEDULE.GVNUMBERIMPORT as ARR_GVNUMBERIMPORT ,",
              "ARRIVALSAILINGPORTSCHEDULE.GVNUMBEREXPORT as ARR_GVNUMBEREXPORT ,",
              "ARRIVALSAILINGPORTSCHEDULE.ACTUALDEPARTUREDATE as ARR_ACTUALDEPARTUREDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.ACTUALARRIVALDATE as ARR_ACTUALARRIVALDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.GSVOYAGECODE as ARR_GSVOYAGECODE ,",
              "ARRIVALSAILINGPORTSCHEDULE.REPORTCLOSED as ARR_REPORTCLOSED ,",
              "ARRIVALSAILINGPORTSCHEDULE.BERTH  as ARR_BERTH ,",
              "LEG.CODE as LEG_CODE ,",
              "LEG.STARTDATE as LEG_STARTDATE ,",
              "LEG.DEPARTURE_PORT as LEG_DEPARTURE_PORT ,",
              "LEG.DEPARTURE_PORTSTARTDATE as LEG_DEPARTURE_PORTSTARTDATE ,",
              "LEG.ARRIVAL_PORT as LEG_ARRIVAL_PORT ,",
              "LEG.ARRIVAL_PORTSTARTDATE as LEG_ARRIVAL_PORTSTARTDATE ,",
              "LEG.ENDDATE as LEG_ENDDATE ,",
              "LEG.VERSION as LEG_VERSION ,",
              "LEG.MANDATORYDOCUMENT as LEG_MANDATORYDOCUMENT ,",
              "DEPARTPORT.CODE as DPO_CODE  ,",
              "DEPARTPORT.STARTDATE as DPO_STARTDATE  ,",
              "DEPARTPORT.GEOGRAPHICALAREA as DPO_GEOGRAPHICALAREA  ,",
              "DEPARTPORT.COUNTRY as DPO_COUNTRY  ,",
              "DEPARTPORT.NAME as DPO_NAME  ,",
              "DEPARTPORT.DESCRIPTION as DPO_DESCRIPTION  ,",
              "DEPARTPORT.EMAIL as DPO_EMAIL  ,",
              "DEPARTPORT.FAX as DPO_FAX  ,",
              "DEPARTPORT.ENDDATE as DPO_ENDDATE  ,",
              "DEPARTPORT.VERSION as DPO_VERSION  ,",
              "DEPARTPORT.PORTID as DPO_PORTID  ,",
              "DEPARTPORT.ADDRESS as DPO_ADDRESS  ,",
              "DEPARTPORT.TOWN as DPO_TOWN  ,",
              "DEPARTPORT.DISTRICT as DPO_DISTRICT  ,",
              "DEPARTPORT.POSTCODE as DPO_POSTCODE  ,",
              "DEPARTPORT.DESTINATIONCODE as DPO_DESTINATIONCODE  ,",
              "ARRIVALPORT.CODE as APO_CODE  ,",
              "ARRIVALPORT.STARTDATE as APO_STARTDATE  ,",
              "ARRIVALPORT.GEOGRAPHICALAREA as APO_GEOGRAPHICALAREA  ,",
              "ARRIVALPORT.COUNTRY as APO_COUNTRY  ,",
              "ARRIVALPORT.NAME as APO_NAME  ,",
              "ARRIVALPORT.DESCRIPTION as APO_DESCRIPTION  ,",
              "ARRIVALPORT.EMAIL as APO_EMAIL  ,",
              "ARRIVALPORT.FAX as APO_FAX  ,",
              "ARRIVALPORT.ENDDATE as APO_ENDDATE  ,",
              "ARRIVALPORT.VERSION as APO_VERSION  ,",
              "ARRIVALPORT.PORTID as APO_PORTID  ,",
              "ARRIVALPORT.ADDRESS as APO_ADDRESS  ,",
              "ARRIVALPORT.TOWN as APO_TOWN  ,",
              "ARRIVALPORT.DISTRICT as APO_DISTRICT  ,",
              "ARRIVALPORT.POSTCODE as APO_POSTCODE  ,",
              "ARRIVALPORT.DESTINATIONCODE as APO_DESTINATIONCODE  ,",
              "DEPARTGEOGRAPHICALAREA.CODE as GED_CODE ,",
              "DEPARTGEOGRAPHICALAREA.NAME as GED_NAME ,",
              "DEPARTGEOGRAPHICALAREA.COUNTRY as GED_COUNTRY ,",
              "ARRIVALGEOGRAPHICALAREA.CODE as GEA_CODE ,",
              "ARRIVALGEOGRAPHICALAREA.NAME as GEA_NAME ,",
              "ARRIVALGEOGRAPHICALAREA.COUNTRY as GEA_COUNTRY,",
              "SAILINGVESSELLICENSE.VESSELLICENSECODE as LIC_VESSELLICENSECODE,",
              "SAILINGVESSELLICENSE.CREWNUMBER as LIC_CREWNUMBER,",
              "SAILINGVESSELLICENSE.SELLABLECAPACITY as LIC_SELLABLECAPACITY,",
              "SAILINGVESSELLICENSE.MAXCAPACITY as LIC_MAXCAPACITY",
              "FROM",
              "eBooking.MSP_SAILING SAILING,",
              "(select CODE, MAX(STARTDATE) as STARTDATE ",
              " from eBooking.MSP_SAILING ",
              " group by CODE) SAILINGFILTER,",
              "eBooking.MSP_LINE LINE ,",
              "eBooking.MSP_SHIPTEMPLATE SHIPTEMPLATE ,",
              "eBooking.MSP_PHYSICALSHIP PHYSICALSHIP ,",
              "eBooking.MSP_SAILINGPORTSCHEDULE DEPARTSAILINGPORTSCHEDULE ,",
              "eBooking.MSP_SAILINGPORTSCHEDULE ARRIVALSAILINGPORTSCHEDULE ,",
              "eBooking.MSP_LEG LEG ,",
              "eBooking.MSP_PORT DEPARTPORT ,",
              "eBooking.MSP_PORT ARRIVALPORT ,",
              "eBooking.MSP_GEOGRAPHICALAREA DEPARTGEOGRAPHICALAREA ,",
              "eBooking.MSP_GEOGRAPHICALAREA ARRIVALGEOGRAPHICALAREA,",
              "eBooking.MSP_SAILINGVESSELLICENSE SAILINGVESSELLICENSE,",
              "(select SAILINGCODE, SHIPTEMPLATECODE, MAX(STARTDATE) as STARTDATE",
              "  from eBooking.MSP_SAILINGVESSELLICENSE ",
              "   group by SAILINGCODE, SHIPTEMPLATECODE) LICENSEFILTER",
              "WHERE ",
              "SAILING.CODE = SAILINGFILTER.CODE",
              "and SAILING.STARTDATE = SAILINGFILTER.STARTDATE",
              "and SAILING.LINECODE = LINE.CODE",
              "AND SAILING.SHIPTEMPLATECODE = SHIPTEMPLATE.CODE",
              "  AND SAILING.SHIPTEMPLATESTARTDATE = SHIPTEMPLATE.STARTDATE",
              "  AND PHYSICALSHIP.NAME = SHIPTEMPLATE.PHYSICALSHIPNAME",
              "  AND PHYSICALSHIP.STARTDATE = SHIPTEMPLATE.PHYSICALSHIPSTARTDATE",
              "  AND SAILING.CODE = DEPARTSAILINGPORTSCHEDULE.SAILINGCODE",
              "  AND SAILING.STARTDATE = DEPARTSAILINGPORTSCHEDULE.SAILINGSTARTDATE",
              "  AND DEPARTSAILINGPORTSCHEDULE.SAILINGCODE = ARRIVALSAILINGPORTSCHEDULE.SAILINGCODE",
              "  AND ARRIVALSAILINGPORTSCHEDULE.PORTORDER = DEPARTSAILINGPORTSCHEDULE.PORTORDER + 1",
              "  AND ARRIVALSAILINGPORTSCHEDULE.STARTDATE = DEPARTSAILINGPORTSCHEDULE.STARTDATE",
              "  AND DEPARTSAILINGPORTSCHEDULE.PORTCODE = LEG.DEPARTURE_PORT",
              "  AND DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE = LEG.DEPARTURE_PORTSTARTDATE",
              "  AND ARRIVALSAILINGPORTSCHEDULE.PORTCODE = LEG.ARRIVAL_PORT",
              "  AND ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE = LEG.ARRIVAL_PORTSTARTDATE",
              "AND DEPARTSAILINGPORTSCHEDULE.PORTCODE = DEPARTPORT.CODE",
              "  AND DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE = DEPARTPORT.STARTDATE",
              "  AND ARRIVALSAILINGPORTSCHEDULE.PORTCODE = ARRIVALPORT.CODE",
              "  AND ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE = ARRIVALPORT.STARTDATE",
              "  AND DEPARTPORT.GEOGRAPHICALAREA = DEPARTGEOGRAPHICALAREA.CODE",
              "  AND ARRIVALPORT.GEOGRAPHICALAREA = ARRIVALGEOGRAPHICALAREA.CODE",
              "  AND SAILING.CODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
              "  AND SAILING.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
              "  AND SAILING.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE ",
              "  AND LICENSEFILTER.SAILINGCODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
              "  AND LICENSEFILTER.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
              "  AND LICENSEFILTER.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Query 1"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT",
              "SAILING.CODE || '-' || SAILING.STARTDATE || '-' || DEPARTSAILINGPORTSCHEDULE.PORTCODE || '-' || ARRIVALSAILINGPORTSCHEDULE.PORTCODE  as SAILING_PK ,",
              "TO_DATE (SAILING.STARTDATE, 'YYYY-MM-DD hh24:mi:ss') as SAILING_STARTDATE ,",
              "TO_DATE (SAILING.ENDDATE,   'YYYY-MM-DD hh24:mi:ss') as SAILING_ENDDATE ,",
              "SAILING.CODE as SAI_CODE,",
              "SAILING.STARTDATE as SAI_STARTDATE ,",
              "SAILING.DESCRIPTION as SAI_DESCRIPTION ,",
              "SAILING.ENDDATE as SAI_ENDDATE ,",
              "SAILING.SAILINGDEPARTUREDATE as SAI_SAILINGDEPARTUREDATE   ,",
              "SAILING.JOURNEYDURATION as SAI_JOURNEYDURATION   ,",
              "SAILING.LOCKED as SAI_LOCKED ,",
              "SAILING.SCHEDULECODE as SAI_SCHEDULECODE ,",
              "SAILING.SCHEDULESTARTDATE as SAI_SCHEDULESTARTDATE ,",
              "SAILING.SHIPTEMPLATECODE as SAI_SHIPTEMPLATECODE ,",
              "SAILING.SHIPTEMPLATESTARTDATE as SAI_SHIPTEMPLATESTARTDATE ,",
              "SAILING.LINECODE as SAI_LINECODE ,",
              "SAILING.LINESTARTDATE as SAI_LINESTARTDATE ,",
              "SAILING.SAILINGARRIVALDATE as SAI_SAILINGARRIVALDATE ,",
              "SAILING.DAYNIGHT as SAI_DAYNIGHT ,",
              "SAILING.VERSION as SAI_VERSION ,",
              "SAILING.COMMENTS as SAI_COMMENTS ,",
              "SAILING.VOYAGECODE as SAI_VOYAGECODE ,",
              "SAILING.HIDEINFORMATION as SAI_HIDEINFORMATION ,",
              "SAILING.MDS as SAI_MDS ,",
              "SAILING.NORESERVABLE as SAI_NORESERVABLE ,",
              "LINE.CODE as LIN_CODE ",
              "      ,case",
              "            when (LINE.CODE) in ('10BECA', '10BECB', '10BECC', '10PBBA', '10PBBB', '10PBBC', '10POFA', '10SHWA', '10SHWB') then ('10S')",
              "            when (LINE.CODE) in ('10PPHA', '10PPHB', '10PPHC', '10PPHD', '10PPRA', '10PPRB', '10PPRC', '10PPRD') then ('10')",
              "            when (substr(LINE.CODE,1 ,1) in ('5', '9')) then (substr(LINE.CODE,1,1))",
              "            when (substr(LINE.CODE,1,2) in ('01', '02', '03')) then (substr(LINE.CODE,2,1))",
              "            when (substr(LINE.CODE,1,1) not in ('5', '9')) then (substr(LINE.CODE,1,2))",
              "        end as ROUTECODE,",
              "       case",
              "           when (LINE.CODE) in ('10BECA', '10BECB', '10BECC', '10PBBA', '10PBBB', '10PBBC', '10POFA', '10SHWA', '10SHWB') then ('10S')",
              "           when (LINE.CODE) in ('10PPHA', '10PPHB', '10PPHC', '10PPHD', '10PPRA', '10PPRB', '10PPRC', '10PPRD') then ('10')",
              "           when (substr( LINE.CODE,1 ,1) in ('5', '9')) then ( '0' || (substr( LINE.CODE,1,1)) )",
              "           when (substr( LINE.CODE,1,1) not in ('5', '9')) then (substr( LINE.CODE,1,2))",
              "        end as ROUTESORT,",
              "LINE.STARTDATE as LIN_STARTDATE ,",
              "LINE.DESCRIPTION as LIN_DESCRIPTION,",
              "LINE.MILES as LIN_MILES ,",
              "LINE.DEPARTURE_TIME as LIN_DEPARTURE_TIME ,",
              "LINE.ARRIVAL_TIME as LIN_ARRIVAL_TIME ,",
              "LINE.ENDDATE as LIN_ENDDATE,",
              "LINE.RTSPODEPARTURENUMBER as LIN_RTSPODEPARTURENUMBER ,",
              "LINE.VERSION as LIN_VERSION ,",
              "LINE.LINEDIRECTIONID as LIN_LINEDIRECTIONID ,",
              "LINE.HOURS_BEFORE_DEPARTURE LIN_HOURS_BEFORE_DEPARTURE ,",
              "SHIPTEMPLATE.CODE as SHI_CODE,",
              "SHIPTEMPLATE.STARTDATE as SHI_STARTDATE ,",
              "SHIPTEMPLATE.NAME as  SHI_NAME,",
              "SHIPTEMPLATE.SHIPTYPE as SHI_SHIPTYPE,",
              "SHIPTEMPLATE.DIVISION as SHI_DIVISION ,",
              "SHIPTEMPLATE.PHYSICALSHIPNAME as SHI_PHYSICALSHIPNAME ,",
              "SHIPTEMPLATE.PHYSICALSHIPSTARTDATE as SHI_PHYSICALSHIPSTARTDATE ,",
              "SHIPTEMPLATE.DAYNIGHT as SHI_DAYNIGHT,",
              "SHIPTEMPLATE.ENDDATE as SHI_ENDDATE,",
              "SHIPTEMPLATE.VERSION as SHI_VERSION ,",
              "PHYSICALSHIP.NAME as PHY_NAME ,",
              "PHYSICALSHIP.STARTDATE as PHY_STARTDATE ,",
              "PHYSICALSHIP.ENDDATE as PHY_ENDDATE ,",
              "PHYSICALSHIP.DESCRIPTION as PHY_DESCRIPTION ,",
              "PHYSICALSHIP.VERSION as PHY_VERSION ,",
              "PHYSICALSHIP.VINGCARDNAME as PHY_VINGCARDNAME ,",
              "PHYSICALSHIP.LLOYDSREGISTER as PHY_LLOYDSREGISTER ,",
              "PHYSICALSHIP.CALLRADIOSIGNAL as PHY_CALLRADIOSIGNAL ,",
              "PHYSICALSHIP.CODE as PHY_CODE ,",
              "PHYSICALSHIP.WIDTHTRESHOLD as PHY_WIDTHTRESHOLD ,",
              "PHYSICALSHIP.BUILDYEAR as PHY_BUILDYEAR ,",
              "PHYSICALSHIP.COUNTRYFLAG as PHY_COUNTRYFLAG ,",
              "PHYSICALSHIP.ICECLASS as PHY_ICECLASS ,",
              "PHYSICALSHIP.ISDUMMYSHIP as PHY_ISDUMMYSHIP ,",
              "DEPARTSAILINGPORTSCHEDULE.SAILINGCODE as DEP_SAILINGCODE ,",
              "DEPARTSAILINGPORTSCHEDULE.SAILINGSTARTDATE as DEP_SAILINGSTARTDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.PORTCODE as DEP_PORTCODE ,",
              "DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE as DEP_PORTSTARTDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.STARTDATE as DEP_STARTDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.PORTORDER as DEP_PORTORDER",
              ",DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME                       as DEP_DEPARTUREDATETIME",
              ",TRUNC(DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME)                as DEP_DEPARTUREDATE",
              ",to_char( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'HH24:MI' ) as DEP_DEPARTURETIME",
              ",to_char( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'HH24' )    as DEP_DEPARTURETIMEHOUR",
              ",to_char ( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'Month' ) as DEP_DEPARTUREDATEMONTH",
              ",to_char ( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'MM' ) as DEP_DEPARTUREDATEMONTHSORT",
              ",to_char ( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'Day' ) as DEP_DEPARTUREDATEDAYOFWEEK",
              ",to_char ( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'Day',  'NLS_DATE_LANGUAGE=''numeric date language''' ) as DEP_DEPARTUREDATEDAYOFWEEKSORT",
              ",to_char ( DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME, 'DD' ) as DEP_DEPARTUREDATEDAY,",
              "DEPARTSAILINGPORTSCHEDULE.ARRIVALTIME as DEP_ARRIVALTIME ,",
              "DEPARTSAILINGPORTSCHEDULE.ENDDATE as DEP_ENDDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.VERSION as DEP_VERSION ,",
              "DEPARTSAILINGPORTSCHEDULE.GVNUMBERIMPORT as DEP_GVNUMBERIMPORT ,",
              "DEPARTSAILINGPORTSCHEDULE.GVNUMBEREXPORT as DEP_GVNUMBEREXPORT ,",
              "DEPARTSAILINGPORTSCHEDULE.ACTUALDEPARTUREDATE as DEP_ACTUALDEPARTUREDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.ACTUALARRIVALDATE as DEP_ACTUALARRIVALDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.GSVOYAGECODE as DEP_GSVOYAGECODE ,",
              "DEPARTSAILINGPORTSCHEDULE.REPORTCLOSED as DEP_REPORTCLOSED ,",
              "DEPARTSAILINGPORTSCHEDULE.BERTH  as DEP_BERTH ,",
              "ARRIVALSAILINGPORTSCHEDULE.SAILINGCODE as ARR_SAILINGCODE ,",
              "ARRIVALSAILINGPORTSCHEDULE.SAILINGSTARTDATE as ARR_SAILINGSTARTDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.PORTCODE as ARR_PORTCODE ,",
              "ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE as ARR_PORTSTARTDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.STARTDATE as ARR_STARTDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.PORTORDER as ARR_PORTORDER ,",
              "ARRIVALSAILINGPORTSCHEDULE.DEPARTURETIME as ARR_DEPARTURETIME ,",
              "ARRIVALSAILINGPORTSCHEDULE.ARRIVALTIME as ARR_ARRIVALDATETIME ",
              "       ,TRUNC(ARRIVALSAILINGPORTSCHEDULE.ARRIVALTIME) as ARR_ARRIVALDATE",
              "       ,to_char( ARRIVALSAILINGPORTSCHEDULE.ARRIVALTIME, 'HH24:MI' ) as ARR_ARRIVALTIME",
              "       ,to_char( ARRIVALSAILINGPORTSCHEDULE.ARRIVALTIME, 'HH24' ) as ARR_ARRIVALTIMEHOUR,",
              "ARRIVALSAILINGPORTSCHEDULE.ENDDATE as ARR_ENDDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.VERSION as ARR_VERSION ,",
              "ARRIVALSAILINGPORTSCHEDULE.GVNUMBERIMPORT as ARR_GVNUMBERIMPORT ,",
              "ARRIVALSAILINGPORTSCHEDULE.GVNUMBEREXPORT as ARR_GVNUMBEREXPORT ,",
              "ARRIVALSAILINGPORTSCHEDULE.ACTUALDEPARTUREDATE as ARR_ACTUALDEPARTUREDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.ACTUALARRIVALDATE as ARR_ACTUALARRIVALDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.GSVOYAGECODE as ARR_GSVOYAGECODE ,",
              "ARRIVALSAILINGPORTSCHEDULE.REPORTCLOSED as ARR_REPORTCLOSED ,",
              "ARRIVALSAILINGPORTSCHEDULE.BERTH  as ARR_BERTH ,",
              "LEG.CODE as LEG_CODE ,",
              "LEG.STARTDATE as LEG_STARTDATE ,",
              "LEG.DEPARTURE_PORT as LEG_DEPARTURE_PORT ,",
              "LEG.DEPARTURE_PORTSTARTDATE as LEG_DEPARTURE_PORTSTARTDATE ,",
              "LEG.ARRIVAL_PORT as LEG_ARRIVAL_PORT ,",
              "LEG.ARRIVAL_PORTSTARTDATE as LEG_ARRIVAL_PORTSTARTDATE ,",
              "LEG.ENDDATE as LEG_ENDDATE ,",
              "LEG.VERSION as LEG_VERSION ,",
              "LEG.MANDATORYDOCUMENT as LEG_MANDATORYDOCUMENT ,",
              "DEPARTPORT.CODE as DPO_CODE  ,",
              "DEPARTPORT.STARTDATE as DPO_STARTDATE  ,",
              "DEPARTPORT.GEOGRAPHICALAREA as DPO_GEOGRAPHICALAREA  ,",
              "DEPARTPORT.COUNTRY as DPO_COUNTRY  ,",
              "DEPARTPORT.NAME as DPO_NAME  ,",
              "DEPARTPORT.DESCRIPTION as DPO_DESCRIPTION  ,",
              "DEPARTPORT.EMAIL as DPO_EMAIL  ,",
              "DEPARTPORT.FAX as DPO_FAX  ,",
              "DEPARTPORT.ENDDATE as DPO_ENDDATE  ,",
              "DEPARTPORT.VERSION as DPO_VERSION  ,",
              "DEPARTPORT.PORTID as DPO_PORTID  ,",
              "DEPARTPORT.ADDRESS as DPO_ADDRESS  ,",
              "DEPARTPORT.TOWN as DPO_TOWN  ,",
              "DEPARTPORT.DISTRICT as DPO_DISTRICT  ,",
              "DEPARTPORT.POSTCODE as DPO_POSTCODE  ,",
              "DEPARTPORT.DESTINATIONCODE as DPO_DESTINATIONCODE  ,",
              "ARRIVALPORT.CODE as APO_CODE  ,",
              "ARRIVALPORT.STARTDATE as APO_STARTDATE  ,",
              "ARRIVALPORT.GEOGRAPHICALAREA as APO_GEOGRAPHICALAREA  ,",
              "ARRIVALPORT.COUNTRY as APO_COUNTRY  ,",
              "ARRIVALPORT.NAME as APO_NAME  ,",
              "ARRIVALPORT.DESCRIPTION as APO_DESCRIPTION  ,",
              "ARRIVALPORT.EMAIL as APO_EMAIL  ,",
              "ARRIVALPORT.FAX as APO_FAX  ,",
              "ARRIVALPORT.ENDDATE as APO_ENDDATE  ,",
              "ARRIVALPORT.VERSION as APO_VERSION  ,",
              "ARRIVALPORT.PORTID as APO_PORTID  ,",
              "ARRIVALPORT.ADDRESS as APO_ADDRESS  ,",
              "ARRIVALPORT.TOWN as APO_TOWN  ,",
              "ARRIVALPORT.DISTRICT as APO_DISTRICT  ,",
              "ARRIVALPORT.POSTCODE as APO_POSTCODE  ,",
              "ARRIVALPORT.DESTINATIONCODE as APO_DESTINATIONCODE  ,",
              "DEPARTGEOGRAPHICALAREA.CODE as GED_CODE ,",
              "DEPARTGEOGRAPHICALAREA.NAME as GED_NAME ,",
              "DEPARTGEOGRAPHICALAREA.COUNTRY as GED_COUNTRY ,",
              "ARRIVALGEOGRAPHICALAREA.CODE as GEA_CODE ,",
              "ARRIVALGEOGRAPHICALAREA.NAME as GEA_NAME ,",
              "ARRIVALGEOGRAPHICALAREA.COUNTRY as GEA_COUNTRY,",
              "SAILINGVESSELLICENSE.VESSELLICENSECODE as LIC_VESSELLICENSECODE,",
              "SAILINGVESSELLICENSE.CREWNUMBER as LIC_CREWNUMBER,",
              "SAILINGVESSELLICENSE.SELLABLECAPACITY as LIC_SELLABLECAPACITY,",
              "SAILINGVESSELLICENSE.MAXCAPACITY as LIC_MAXCAPACITY",
              "FROM",
              "eBooking.MSP_SAILING SAILING,",
              "(select CODE, MAX(STARTDATE) as STARTDATE ",
              " from eBooking.MSP_SAILING ",
              " group by CODE) SAILINGFILTER,",
              "eBooking.MSP_LINE LINE ,",
              "eBooking.MSP_SHIPTEMPLATE SHIPTEMPLATE ,",
              "eBooking.MSP_PHYSICALSHIP PHYSICALSHIP ,",
              "eBooking.MSP_SAILINGPORTSCHEDULE DEPARTSAILINGPORTSCHEDULE ,",
              "eBooking.MSP_SAILINGPORTSCHEDULE ARRIVALSAILINGPORTSCHEDULE ,",
              "eBooking.MSP_LEG LEG ,",
              "eBooking.MSP_PORT DEPARTPORT ,",
              "eBooking.MSP_PORT ARRIVALPORT ,",
              "eBooking.MSP_GEOGRAPHICALAREA DEPARTGEOGRAPHICALAREA ,",
              "eBooking.MSP_GEOGRAPHICALAREA ARRIVALGEOGRAPHICALAREA,",
              "eBooking.MSP_SAILINGVESSELLICENSE SAILINGVESSELLICENSE,",
              "(select SAILINGCODE, SHIPTEMPLATECODE, MAX(STARTDATE) as STARTDATE",
              "  from eBooking.MSP_SAILINGVESSELLICENSE ",
              "   group by SAILINGCODE, SHIPTEMPLATECODE) LICENSEFILTER",
              "WHERE ",
              "SAILING.CODE = SAILINGFILTER.CODE",
              "and SAILING.STARTDATE = SAILINGFILTER.STARTDATE",
              "and SAILING.LINECODE = LINE.CODE",
              "AND SAILING.SHIPTEMPLATECODE = SHIPTEMPLATE.CODE",
              "  AND SAILING.SHIPTEMPLATESTARTDATE = SHIPTEMPLATE.STARTDATE",
              "  AND PHYSICALSHIP.NAME = SHIPTEMPLATE.PHYSICALSHIPNAME",
              "  AND PHYSICALSHIP.STARTDATE = SHIPTEMPLATE.PHYSICALSHIPSTARTDATE",
              "  AND SAILING.CODE = DEPARTSAILINGPORTSCHEDULE.SAILINGCODE",
              "  AND SAILING.STARTDATE = DEPARTSAILINGPORTSCHEDULE.SAILINGSTARTDATE",
              "  AND DEPARTSAILINGPORTSCHEDULE.SAILINGCODE = ARRIVALSAILINGPORTSCHEDULE.SAILINGCODE",
              "  AND ARRIVALSAILINGPORTSCHEDULE.PORTORDER = DEPARTSAILINGPORTSCHEDULE.PORTORDER + 1",
              "  AND ARRIVALSAILINGPORTSCHEDULE.STARTDATE = DEPARTSAILINGPORTSCHEDULE.STARTDATE",
              "  AND DEPARTSAILINGPORTSCHEDULE.PORTCODE = LEG.DEPARTURE_PORT",
              "  AND DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE = LEG.DEPARTURE_PORTSTARTDATE",
              "  AND ARRIVALSAILINGPORTSCHEDULE.PORTCODE = LEG.ARRIVAL_PORT",
              "  AND ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE = LEG.ARRIVAL_PORTSTARTDATE",
              "AND DEPARTSAILINGPORTSCHEDULE.PORTCODE = DEPARTPORT.CODE",
              "  AND DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE = DEPARTPORT.STARTDATE",
              "  AND ARRIVALSAILINGPORTSCHEDULE.PORTCODE = ARRIVALPORT.CODE",
              "  AND ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE = ARRIVALPORT.STARTDATE",
              "  AND DEPARTPORT.GEOGRAPHICALAREA = DEPARTGEOGRAPHICALAREA.CODE",
              "  AND ARRIVALPORT.GEOGRAPHICALAREA = ARRIVALGEOGRAPHICALAREA.CODE",
              "  AND SAILING.CODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
              "  AND SAILING.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
              "  AND SAILING.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE ",
              "  AND LICENSEFILTER.SAILINGCODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
              "  AND LICENSEFILTER.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
              "  AND LICENSEFILTER.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "DepartureAllocation",
        "columns": [
          {
            "name": "SailingCode",
            "dataType": "string",
            "sourceColumn": "SAILINGCODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DeparturePort",
            "dataType": "string",
            "sourceColumn": "DEPARTUREPORT",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ArrivalPort",
            "dataType": "string",
            "sourceColumn": "ARRIVALPORT",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "LegCode",
            "dataType": "string",
            "sourceColumn": "LEGCODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PhysicalResourceCode",
            "dataType": "string",
            "sourceColumn": "PHYSICALRESOURCECODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SellableCapacity",
            "dataType": "double",
            "sourceColumn": "SELLABLECAPACITY",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "SoldCapacity",
            "dataType": "double",
            "sourceColumn": "SOLDCAPACITY",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "AvailableCapacity",
            "dataType": "double",
            "sourceColumn": "AVAILABLECAPACITY",
            "formatString": "0",
            "sourceProviderType": "Decimal"
          },
          {
            "type": "calculated",
            "name": "DepartureAllocationKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "DepartureAllocation[SailingCode] & DepartureAllocation[DeparturePort]"
          },
          {
            "type": "calculated",
            "name": "AvailablePercent",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": "DepartureAllocation[AvailableCapacity]/DepartureAllocation[SellableCapacity]",
            "formatString": "0%"
          }
        ],
        "partitions": [
          {
            "name": "DepartureAllocation",
            "dataView": "full",
            "source": {
              "query": [
                "SELECT ",
                "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
                "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
                "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
                "SAILINGSELLABLEPRODUCT.LEGCODE,",
                "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
                "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
                "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
                "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
                "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
                "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
                "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
                "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
                "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0"
              ],
              "dataSource": "Oracle scan.stg01.rac.bcferries.corp"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
                  "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
                  "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
                  "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
                  "SAILINGSELLABLEPRODUCT.LEGCODE,",
                  "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
                  "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
                  "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
                  "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
                  "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
                  "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
                  "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
                  "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
                  "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ",
              "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
              "SAILINGSELLABLEPRODUCT.LEGCODE,",
              "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
              "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
              "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
              "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
              "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
              "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
              "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
              "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
              "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DepartureAllocation"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
              "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
              "SAILINGSELLABLEPRODUCT.LEGCODE,",
              "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
              "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
              "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
              "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
              "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
              "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
              "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
              "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
              "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "ArrivalAllocation",
        "columns": [
          {
            "name": "SailingCode",
            "dataType": "string",
            "sourceColumn": "SAILINGCODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DeparturePort",
            "dataType": "string",
            "sourceColumn": "DEPARTUREPORT",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ArrivalPort",
            "dataType": "string",
            "sourceColumn": "ARRIVALPORT",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "LegCode",
            "dataType": "string",
            "sourceColumn": "LEGCODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PhysicalResourceCode",
            "dataType": "string",
            "sourceColumn": "PHYSICALRESOURCECODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SellableCapacity",
            "dataType": "double",
            "sourceColumn": "SELLABLECAPACITY",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "SoldCapacity",
            "dataType": "double",
            "sourceColumn": "SOLDCAPACITY",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "AvailableCapacity",
            "dataType": "double",
            "sourceColumn": "AVAILABLECAPACITY",
            "sourceProviderType": "Decimal"
          },
          {
            "type": "calculated",
            "name": "ArrivalAllocationKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "ArrivalAllocation[SailingCode] & ArrivalAllocation[ArrivalPort]"
          }
        ],
        "partitions": [
          {
            "name": "ArrivalAllocation",
            "dataView": "full",
            "source": {
              "query": [
                "SELECT ",
                "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
                "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
                "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
                "SAILINGSELLABLEPRODUCT.LEGCODE,",
                "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
                "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
                "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
                "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
                "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
                "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
                "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
                "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
                "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0"
              ],
              "dataSource": "Oracle scan.stg01.rac.bcferries.corp"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
                  "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
                  "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
                  "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
                  "SAILINGSELLABLEPRODUCT.LEGCODE,",
                  "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
                  "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
                  "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
                  "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
                  "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
                  "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
                  "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
                  "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
                  "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ",
              "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
              "SAILINGSELLABLEPRODUCT.LEGCODE,",
              "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
              "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
              "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
              "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
              "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
              "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
              "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
              "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
              "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "ArrivalAllocation"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
              "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
              "SAILINGSELLABLEPRODUCT.LEGCODE,",
              "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
              "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
              "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
              "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
              "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
              "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
              "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
              "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
              "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "JasperQuerySpaceAvailability",
        "isHidden": true,
        "columns": [
          {
            "name": "SAILINGCODE",
            "dataType": "string",
            "sourceColumn": "SAILINGCODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SAILINGDEPARTUREDATE",
            "dataType": "dateTime",
            "sourceColumn": "SAILINGDEPARTUREDATE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "SAILINGDEPARTUREDATETIME",
            "dataType": "string",
            "sourceColumn": "SAILINGDEPARTUREDATETIME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SAILINGDEPARTURETIME",
            "dataType": "string",
            "sourceColumn": "SAILINGDEPARTURETIME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "LINECODE",
            "dataType": "string",
            "sourceColumn": "LINECODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "LEGCODE",
            "dataType": "string",
            "sourceColumn": "LEGCODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "LEGNAME",
            "dataType": "string",
            "sourceColumn": "LEGNAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEDEPARTUREPORT",
            "dataType": "string",
            "sourceColumn": "ROUTEDEPARTUREPORT",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEDEPARTUREPORTNAME",
            "dataType": "string",
            "sourceColumn": "ROUTEDEPARTUREPORTNAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEDEPARTUREDATE",
            "dataType": "dateTime",
            "sourceColumn": "ROUTEDEPARTUREDATE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ROUTEDEPARTUREDATETIME",
            "dataType": "string",
            "sourceColumn": "ROUTEDEPARTUREDATETIME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEDEPARTURETIME",
            "dataType": "string",
            "sourceColumn": "ROUTEDEPARTURETIME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DEPARTUREPORTDATETIME",
            "dataType": "string",
            "sourceColumn": "DEPARTUREPORTDATETIME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEARRIVALPORT",
            "dataType": "string",
            "sourceColumn": "ROUTEARRIVALPORT",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEARRIVALPORTNAME",
            "dataType": "string",
            "sourceColumn": "ROUTEARRIVALPORTNAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEARRIVALDATE",
            "dataType": "dateTime",
            "sourceColumn": "ROUTEARRIVALDATE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ROUTEARRIVALDATETIME",
            "dataType": "string",
            "sourceColumn": "ROUTEARRIVALDATETIME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEARRIVALTIME",
            "dataType": "string",
            "sourceColumn": "ROUTEARRIVALTIME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ARRIVALPORTDATETIME",
            "dataType": "string",
            "sourceColumn": "ARRIVALPORTDATETIME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEDEPARTUREARRIVALDATETIME",
            "dataType": "string",
            "sourceColumn": "ROUTEDEPARTUREARRIVALDATETIME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PHYSICALSHIPNAME",
            "dataType": "string",
            "sourceColumn": "PHYSICALSHIPNAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PHYSICALSHIPDESCRIPTION",
            "dataType": "string",
            "sourceColumn": "PHYSICALSHIPDESCRIPTION",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "VESSELCODE",
            "dataType": "string",
            "sourceColumn": "VESSELCODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DEPARTUREDAY",
            "dataType": "string",
            "sourceColumn": "DEPARTUREDAY",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DEPARTUREDAYS",
            "dataType": "string",
            "sourceColumn": "DEPARTUREDAYS",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DEPARTUREDATEDAY",
            "dataType": "string",
            "sourceColumn": "DEPARTUREDATEDAY",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "RESOURCETYPE",
            "dataType": "string",
            "sourceColumn": "RESOURCETYPE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "RESOURCETYPESORT",
            "dataType": "double",
            "sourceColumn": "RESOURCETYPESORT",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "PHYSICALRESOURCECODE",
            "dataType": "string",
            "sourceColumn": "PHYSICALRESOURCECODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PHYSICALRESOURCETYPE",
            "dataType": "string",
            "sourceColumn": "PHYSICALRESOURCETYPE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SOLDCAPACITY",
            "dataType": "double",
            "sourceColumn": "SOLDCAPACITY",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "AVAILABLECAPACITY",
            "dataType": "double",
            "sourceColumn": "AVAILABLECAPACITY",
            "sourceProviderType": "Decimal"
          }
        ],
        "partitions": [
          {
            "name": "Query",
            "dataView": "full",
            "source": {
              "query": [
                "SELECT ",
                "SAILINGCODE,",
                "SAILINGDEPARTUREDATE,",
                "SAILINGDEPARTUREDATETIME,",
                "SAILINGDEPARTURETIME,",
                "LINECODE,",
                "LEGCODE,",
                "LEGNAME,",
                "ROUTEDEPARTUREPORT,",
                "ROUTEDEPARTUREPORTNAME,",
                "ROUTEDEPARTUREDATE,",
                "ROUTEDEPARTUREDATETIME,",
                "ROUTEDEPARTURETIME,",
                "DEPARTUREPORTDATETIME,",
                "ROUTEARRIVALPORT,",
                "ROUTEARRIVALPORTNAME,",
                "ROUTEARRIVALDATE,",
                "ROUTEARRIVALDATETIME,",
                "ROUTEARRIVALTIME,",
                "ARRIVALPORTDATETIME,",
                "ROUTEDEPARTUREARRIVALDATETIME,",
                "PHYSICALSHIPNAME,",
                "PHYSICALSHIPDESCRIPTION,",
                "LEGCODE || ' ' || '(' || VESSELCODE || ')' AS VESSELCODE,",
                "DEPARTUREDAY,",
                "DEPARTUREDAYS,",
                "DEPARTUREDATEDAY,",
                "CASE WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN '1PASSENGER'     ",
                "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN '2CAR DECK '",
                "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN '3CABIN    '",
                "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN '4CHAIR    '",
                "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN '5ONBOARD  '     ",
                "END RESOURCETYPE, ",
                "CASE  ",
                "     WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 1 ",
                "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 2",
                "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 3",
                "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 4",
                "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 5     ",
                "END RESOURCETYPESORT, ",
                "CASE WHEN PHYSICALRESOURCECODE IN ('BUS') THEN 'BUS (FT)' ",
                "     WHEN PHYSICALRESOURCECODE IN ('FOH') THEN 'FOH (FT)' ",
                "     WHEN PHYSICALRESOURCECODE IN ('POH') THEN 'POH (FT)' ",
                "     WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' ",
                "     WHEN PHYSICALRESOURCECODE NOT IN ('BUS', 'FOH', 'POH', 'UH') THEN PHYSICALRESOURCECODE  ",
                "END AS PHYSICALRESOURCECODE,",
                "PHYSICALRESOURCETYPE,",
                "SOLDCAPACITY,",
                "AVAILABLECAPACITY ",
                "FROM ",
                "(SELECT ",
                "ALLSAILINGS.SAILINGCODE,",
                "ALLSAILINGS.SAILINGDEPARTUREDATE,",
                "ALLSAILINGS.SAILINGDEPARTUREDATETIME,",
                "ALLSAILINGS.SAILINGDEPARTURETIME,",
                "ALLSAILINGS.LINECODE,",
                "ALLSAILINGS.LEGCODE,",
                "ALLSAILINGS.LEGNAME,",
                "ALLSAILINGS.ROUTEDEPARTUREPORT,",
                "ALLSAILINGS.ROUTEDEPARTUREPORTNAME,",
                "ALLSAILINGS.ROUTEDEPARTUREDATE,",
                "ALLSAILINGS.ROUTEDEPARTUREDATETIME,",
                "ALLSAILINGS.ROUTEDEPARTURETIME,",
                "ALLSAILINGS.DEPARTUREPORTDATETIME,",
                "ALLSAILINGS.ROUTEARRIVALPORT,",
                "ALLSAILINGS.ROUTEARRIVALPORTNAME,",
                "ALLSAILINGS.ROUTEARRIVALDATE,",
                "ALLSAILINGS.ROUTEARRIVALDATETIME,",
                "ALLSAILINGS.ROUTEARRIVALTIME,",
                "ALLSAILINGS.ARRIVALPORTDATETIME,",
                "ALLSAILINGS.ROUTEDEPARTUREARRIVALDATETIME,",
                "ALLSAILINGS.PHYSICALSHIPNAME,",
                "ALLSAILINGS.PHYSICALSHIPDESCRIPTION,",
                "ALLSAILINGS.VESSELCODE,",
                "ALLSAILINGS.DEPARTUREDAY,",
                "ALLSAILINGS.DEPARTUREDAYS,",
                "ALLSAILINGS.DEPARTUREDATEDAY,",
                "DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE,",
                "CASE WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('PAX', 'CHILD')                                  THEN 'PASSENGER'     ",
                "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 'CAR DECK'",
                "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 'CABIN'",
                "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('SEA', 'SEAWC')                                  THEN 'CHAIR'",
                "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 'ONBOARD'     ",
                "END PHYSICALRESOURCETYPE, ",
                "CASE WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY > ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (DEPARTURE_ALLOCATION.SOLDCAPACITY)",
                "     WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY = ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (DEPARTURE_ALLOCATION.SOLDCAPACITY)",
                "     WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY < ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (ARRIVAL_ALLOCATION.SOLDCAPACITY)",
                "END SOLDCAPACITY,",
                "CASE WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY < ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY)",
                "     WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY = ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY)",
                "     WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY > ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (ARRIVAL_ALLOCATION.AVAILABLECAPACITY)",
                "END AVAILABLECAPACITY ",
                "FROM ",
                "(SELECT ",
                "SAILING.CODE AS SAILINGCODE,",
                "SAILING.LINECODE,",
                "SAILING.SAILINGDEPARTUREDATE,",
                "TO_CHAR(SAILING.SAILINGDEPARTUREDATE,'DD-MON-YY HH24:MI') AS SAILINGDEPARTUREDATETIME,",
                "TO_CHAR(SAILING.SAILINGDEPARTUREDATE,'HH24:MI') AS SAILINGDEPARTURETIME,",
                "DEPARTUREPORT.CODE || '-' || ARRIVALPORT.CODE AS LEGCODE,",
                "DEPARTUREPORT.NAME || ' - ' ||   ARRIVALPORT.NAME AS LEGNAME,",
                "DEPARTUREPORT.CODE AS ROUTEDEPARTUREPORT,",
                "DEPARTUREPORT.NAME AS ROUTEDEPARTUREPORTNAME,",
                "SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME AS ROUTEDEPARTUREDATE,",
                "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') AS ROUTEDEPARTUREDATETIME,",
                "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'HH24:MI') AS ROUTEDEPARTURETIME,",
                "DEPARTUREPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') || ')' AS DEPARTUREPORTDATETIME,",
                "ARRIVALPORT.CODE AS ROUTEARRIVALPORT,",
                "ARRIVALPORT.NAME AS ROUTEARRIVALPORTNAME,",
                "SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME AS ROUTEARRIVALDATE,",
                "TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') AS ROUTEARRIVALDATETIME,",
                "TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'HH24:MI') AS ROUTEARRIVALTIME,",
                "ARRIVALPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') || ')' AS ARRIVALPORTDATETIME,",
                "DEPARTUREPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') || ') - ' || ARRIVALPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') || ')' AS ROUTEDEPARTUREARRIVALDATETIME,",
                "SHIPTEMPLATE.PHYSICALSHIPNAME,",
                "PHYSICALSHIP.DESCRIPTION AS PHYSICALSHIPDESCRIPTION,",
                "SUBSTR(SHIPTEMPLATE.CODE,1,3) AS VESSELCODE,",
                "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY') AS DEPARTUREDAY,",
                "SUBSTR(TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY'),1,3) AS DEPARTUREDAYS,",
                "SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME || ' (' || SUBSTR(TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY'),1,3) || ')' AS DEPARTUREDATEDAY,",
                "SAILINGVESSELLICENSE.VESSELLICENSECODE,",
                "SAILINGVESSELLICENSE.CREWNUMBER,",
                "SAILINGVESSELLICENSE.SELLABLECAPACITY,",
                "SAILINGVESSELLICENSE.MAXCAPACITY",
                "FROM EBOOKING.MSP_SAILING SAILING",
                "INNER JOIN EBOOKING.MSP_SHIPTEMPLATE SHIPTEMPLATE",
                "    ON SHIPTEMPLATE.CODE = SAILING.SHIPTEMPLATECODE  ",
                "  AND SHIPTEMPLATE.STARTDATE = SAILING.SHIPTEMPLATESTARTDATE",
                "  AND SAILING.HIDEINFORMATION = 'N'",
                "INNER JOIN EBOOKING.MSP_PHYSICALSHIP PHYSICALSHIP",
                "    ON PHYSICALSHIP.NAME = SHIPTEMPLATE.PHYSICALSHIPNAME   ",
                "  AND PHYSICALSHIP.STARTDATE = SHIPTEMPLATE.PHYSICALSHIPSTARTDATE",
                "INNER JOIN EBOOKING.MSP_SAILINGPORTSCHEDULE SAILINGPORTSCHEDULEDEPARTURE",
                "    ON SAILINGPORTSCHEDULEDEPARTURE.SAILINGCODE = SAILING.CODE",
                "  AND SAILINGPORTSCHEDULEDEPARTURE.SAILINGSTARTDATE = SAILING.STARTDATE",
                "INNER JOIN EBOOKING.MSP_SAILINGPORTSCHEDULE SAILINGPORTSCHEDULEARRIVAL",
                "    ON SAILINGPORTSCHEDULEARRIVAL.SAILINGCODE = SAILING.CODE",
                "  AND SAILINGPORTSCHEDULEARRIVAL.SAILINGSTARTDATE = SAILING.STARTDATE",
                "INNER JOIN EBOOKING.MSP_LEG LEG",
                "    ON SAILINGPORTSCHEDULEDEPARTURE.PORTCODE = LEG.DEPARTURE_PORT",
                "  AND SAILINGPORTSCHEDULEDEPARTURE.PORTSTARTDATE = LEG.DEPARTURE_PORTSTARTDATE",
                "  AND SAILINGPORTSCHEDULEARRIVAL.PORTCODE = LEG.ARRIVAL_PORT",
                "  AND SAILINGPORTSCHEDULEARRIVAL.PORTSTARTDATE = LEG.ARRIVAL_PORTSTARTDATE",
                "INNER JOIN EBOOKING.MSP_PORT DEPARTUREPORT",
                "    ON DEPARTUREPORT.CODE = SAILINGPORTSCHEDULEDEPARTURE.PORTCODE",
                "INNER JOIN EBOOKING.MSP_PORT ARRIVALPORT",
                "    ON ARRIVALPORT.CODE = SAILINGPORTSCHEDULEARRIVAL.PORTCODE",
                "INNER JOIN EBOOKING.MSP_SAILINGVESSELLICENSE SAILINGVESSELLICENSE",
                "    ON SAILING.CODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
                "  AND SAILING.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
                "  AND SAILING.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE ",
                "  AND SAILING.SHIPTEMPLATESTARTDATE = SAILINGVESSELLICENSE.SHIPTEMPLATESTARTDATE",
                "  AND ARRIVALPORT.CODE = SUBSTR(SAILINGVESSELLICENSE.LEGCODE,5,3) ",
                "  AND SAILINGVESSELLICENSE.ENDDATE = '99991231000000'",
                "WHERE SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME IS NOT NULL",
                "AND SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME IS NOT NULL",
                "AND SAILINGPORTSCHEDULEDEPARTURE.PORTORDER - SAILINGPORTSCHEDULEARRIVAL.PORTORDER < 0 ) ALLSAILINGS",
                "LEFT OUTER JOIN ",
                "(SELECT ",
                "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
                "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
                "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
                "SAILINGSELLABLEPRODUCT.LEGCODE,",
                "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
                "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
                "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
                "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
                "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
                "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
                "AND SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
                "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
                "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0 ) ARRIVAL_ALLOCATION",
                "    ON ALLSAILINGS.SAILINGCODE = ARRIVAL_ALLOCATION.SAILINGCODE",
                "  AND ALLSAILINGS.ROUTEARRIVALPORT = ARRIVAL_ALLOCATION.ARRIVALPORT ",
                "LEFT OUTER JOIN ",
                "(SELECT ",
                "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
                "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
                "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
                "SAILINGSELLABLEPRODUCT.LEGCODE,",
                "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
                "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
                "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
                "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
                "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
                "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
                "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
                "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
                "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0) DEPARTURE_ALLOCATION",
                "    ON ALLSAILINGS.SAILINGCODE = DEPARTURE_ALLOCATION.SAILINGCODE",
                "  AND ALLSAILINGS.ROUTEDEPARTUREPORT = DEPARTURE_ALLOCATION.DEPARTUREPORT",
                "  AND DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE = ARRIVAL_ALLOCATION.PHYSICALRESOURCECODE) ALL_ALLOCATIONS",
                "",
                "ORDER BY ROUTEDEPARTUREDATE, RESOURCETYPESORT"
              ],
              "dataSource": "Oracle scan.stg01.rac.bcferries.corp"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
                  "SAILINGCODE,",
                  "SAILINGDEPARTUREDATE,",
                  "SAILINGDEPARTUREDATETIME,",
                  "SAILINGDEPARTURETIME,",
                  "LINECODE,",
                  "LEGCODE,",
                  "LEGNAME,",
                  "ROUTEDEPARTUREPORT,",
                  "ROUTEDEPARTUREPORTNAME,",
                  "ROUTEDEPARTUREDATE,",
                  "ROUTEDEPARTUREDATETIME,",
                  "ROUTEDEPARTURETIME,",
                  "DEPARTUREPORTDATETIME,",
                  "ROUTEARRIVALPORT,",
                  "ROUTEARRIVALPORTNAME,",
                  "ROUTEARRIVALDATE,",
                  "ROUTEARRIVALDATETIME,",
                  "ROUTEARRIVALTIME,",
                  "ARRIVALPORTDATETIME,",
                  "ROUTEDEPARTUREARRIVALDATETIME,",
                  "PHYSICALSHIPNAME,",
                  "PHYSICALSHIPDESCRIPTION,",
                  "LEGCODE || ' ' || '(' || VESSELCODE || ')' AS VESSELCODE,",
                  "DEPARTUREDAY,",
                  "DEPARTUREDAYS,",
                  "DEPARTUREDATEDAY,",
                  "CASE WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN '1PASSENGER'     ",
                  "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN '2CAR DECK '",
                  "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN '3CABIN    '",
                  "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN '4CHAIR    '",
                  "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN '5ONBOARD  '     ",
                  "END RESOURCETYPE, ",
                  "CASE  ",
                  "     WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 1 ",
                  "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 2",
                  "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 3",
                  "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 4",
                  "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 5     ",
                  "END RESOURCETYPESORT, ",
                  "CASE WHEN PHYSICALRESOURCECODE IN ('BUS') THEN 'BUS (FT)' ",
                  "     WHEN PHYSICALRESOURCECODE IN ('FOH') THEN 'FOH (FT)' ",
                  "     WHEN PHYSICALRESOURCECODE IN ('POH') THEN 'POH (FT)' ",
                  "     WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' ",
                  "     WHEN PHYSICALRESOURCECODE NOT IN ('BUS', 'FOH', 'POH', 'UH') THEN PHYSICALRESOURCECODE  ",
                  "END AS PHYSICALRESOURCECODE,",
                  "PHYSICALRESOURCETYPE,",
                  "SOLDCAPACITY,",
                  "AVAILABLECAPACITY ",
                  "FROM ",
                  "(SELECT ",
                  "ALLSAILINGS.SAILINGCODE,",
                  "ALLSAILINGS.SAILINGDEPARTUREDATE,",
                  "ALLSAILINGS.SAILINGDEPARTUREDATETIME,",
                  "ALLSAILINGS.SAILINGDEPARTURETIME,",
                  "ALLSAILINGS.LINECODE,",
                  "ALLSAILINGS.LEGCODE,",
                  "ALLSAILINGS.LEGNAME,",
                  "ALLSAILINGS.ROUTEDEPARTUREPORT,",
                  "ALLSAILINGS.ROUTEDEPARTUREPORTNAME,",
                  "ALLSAILINGS.ROUTEDEPARTUREDATE,",
                  "ALLSAILINGS.ROUTEDEPARTUREDATETIME,",
                  "ALLSAILINGS.ROUTEDEPARTURETIME,",
                  "ALLSAILINGS.DEPARTUREPORTDATETIME,",
                  "ALLSAILINGS.ROUTEARRIVALPORT,",
                  "ALLSAILINGS.ROUTEARRIVALPORTNAME,",
                  "ALLSAILINGS.ROUTEARRIVALDATE,",
                  "ALLSAILINGS.ROUTEARRIVALDATETIME,",
                  "ALLSAILINGS.ROUTEARRIVALTIME,",
                  "ALLSAILINGS.ARRIVALPORTDATETIME,",
                  "ALLSAILINGS.ROUTEDEPARTUREARRIVALDATETIME,",
                  "ALLSAILINGS.PHYSICALSHIPNAME,",
                  "ALLSAILINGS.PHYSICALSHIPDESCRIPTION,",
                  "ALLSAILINGS.VESSELCODE,",
                  "ALLSAILINGS.DEPARTUREDAY,",
                  "ALLSAILINGS.DEPARTUREDAYS,",
                  "ALLSAILINGS.DEPARTUREDATEDAY,",
                  "DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE,",
                  "CASE WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('PAX', 'CHILD')                                  THEN 'PASSENGER'     ",
                  "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 'CAR DECK'",
                  "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 'CABIN'",
                  "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('SEA', 'SEAWC')                                  THEN 'CHAIR'",
                  "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 'ONBOARD'     ",
                  "END PHYSICALRESOURCETYPE, ",
                  "CASE WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY > ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (DEPARTURE_ALLOCATION.SOLDCAPACITY)",
                  "     WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY = ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (DEPARTURE_ALLOCATION.SOLDCAPACITY)",
                  "     WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY < ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (ARRIVAL_ALLOCATION.SOLDCAPACITY)",
                  "END SOLDCAPACITY,",
                  "CASE WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY < ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY)",
                  "     WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY = ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY)",
                  "     WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY > ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (ARRIVAL_ALLOCATION.AVAILABLECAPACITY)",
                  "END AVAILABLECAPACITY ",
                  "FROM ",
                  "(SELECT ",
                  "SAILING.CODE AS SAILINGCODE,",
                  "SAILING.LINECODE,",
                  "SAILING.SAILINGDEPARTUREDATE,",
                  "TO_CHAR(SAILING.SAILINGDEPARTUREDATE,'DD-MON-YY HH24:MI') AS SAILINGDEPARTUREDATETIME,",
                  "TO_CHAR(SAILING.SAILINGDEPARTUREDATE,'HH24:MI') AS SAILINGDEPARTURETIME,",
                  "DEPARTUREPORT.CODE || '-' || ARRIVALPORT.CODE AS LEGCODE,",
                  "DEPARTUREPORT.NAME || ' - ' ||   ARRIVALPORT.NAME AS LEGNAME,",
                  "DEPARTUREPORT.CODE AS ROUTEDEPARTUREPORT,",
                  "DEPARTUREPORT.NAME AS ROUTEDEPARTUREPORTNAME,",
                  "SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME AS ROUTEDEPARTUREDATE,",
                  "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') AS ROUTEDEPARTUREDATETIME,",
                  "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'HH24:MI') AS ROUTEDEPARTURETIME,",
                  "DEPARTUREPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') || ')' AS DEPARTUREPORTDATETIME,",
                  "ARRIVALPORT.CODE AS ROUTEARRIVALPORT,",
                  "ARRIVALPORT.NAME AS ROUTEARRIVALPORTNAME,",
                  "SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME AS ROUTEARRIVALDATE,",
                  "TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') AS ROUTEARRIVALDATETIME,",
                  "TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'HH24:MI') AS ROUTEARRIVALTIME,",
                  "ARRIVALPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') || ')' AS ARRIVALPORTDATETIME,",
                  "DEPARTUREPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') || ') - ' || ARRIVALPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') || ')' AS ROUTEDEPARTUREARRIVALDATETIME,",
                  "SHIPTEMPLATE.PHYSICALSHIPNAME,",
                  "PHYSICALSHIP.DESCRIPTION AS PHYSICALSHIPDESCRIPTION,",
                  "SUBSTR(SHIPTEMPLATE.CODE,1,3) AS VESSELCODE,",
                  "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY') AS DEPARTUREDAY,",
                  "SUBSTR(TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY'),1,3) AS DEPARTUREDAYS,",
                  "SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME || ' (' || SUBSTR(TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY'),1,3) || ')' AS DEPARTUREDATEDAY,",
                  "SAILINGVESSELLICENSE.VESSELLICENSECODE,",
                  "SAILINGVESSELLICENSE.CREWNUMBER,",
                  "SAILINGVESSELLICENSE.SELLABLECAPACITY,",
                  "SAILINGVESSELLICENSE.MAXCAPACITY",
                  "FROM EBOOKING.MSP_SAILING SAILING",
                  "INNER JOIN EBOOKING.MSP_SHIPTEMPLATE SHIPTEMPLATE",
                  "    ON SHIPTEMPLATE.CODE = SAILING.SHIPTEMPLATECODE  ",
                  "  AND SHIPTEMPLATE.STARTDATE = SAILING.SHIPTEMPLATESTARTDATE",
                  "  AND SAILING.HIDEINFORMATION = 'N'",
                  "INNER JOIN EBOOKING.MSP_PHYSICALSHIP PHYSICALSHIP",
                  "    ON PHYSICALSHIP.NAME = SHIPTEMPLATE.PHYSICALSHIPNAME   ",
                  "  AND PHYSICALSHIP.STARTDATE = SHIPTEMPLATE.PHYSICALSHIPSTARTDATE",
                  "INNER JOIN EBOOKING.MSP_SAILINGPORTSCHEDULE SAILINGPORTSCHEDULEDEPARTURE",
                  "    ON SAILINGPORTSCHEDULEDEPARTURE.SAILINGCODE = SAILING.CODE",
                  "  AND SAILINGPORTSCHEDULEDEPARTURE.SAILINGSTARTDATE = SAILING.STARTDATE",
                  "INNER JOIN EBOOKING.MSP_SAILINGPORTSCHEDULE SAILINGPORTSCHEDULEARRIVAL",
                  "    ON SAILINGPORTSCHEDULEARRIVAL.SAILINGCODE = SAILING.CODE",
                  "  AND SAILINGPORTSCHEDULEARRIVAL.SAILINGSTARTDATE = SAILING.STARTDATE",
                  "INNER JOIN EBOOKING.MSP_LEG LEG",
                  "    ON SAILINGPORTSCHEDULEDEPARTURE.PORTCODE = LEG.DEPARTURE_PORT",
                  "  AND SAILINGPORTSCHEDULEDEPARTURE.PORTSTARTDATE = LEG.DEPARTURE_PORTSTARTDATE",
                  "  AND SAILINGPORTSCHEDULEARRIVAL.PORTCODE = LEG.ARRIVAL_PORT",
                  "  AND SAILINGPORTSCHEDULEARRIVAL.PORTSTARTDATE = LEG.ARRIVAL_PORTSTARTDATE",
                  "INNER JOIN EBOOKING.MSP_PORT DEPARTUREPORT",
                  "    ON DEPARTUREPORT.CODE = SAILINGPORTSCHEDULEDEPARTURE.PORTCODE",
                  "INNER JOIN EBOOKING.MSP_PORT ARRIVALPORT",
                  "    ON ARRIVALPORT.CODE = SAILINGPORTSCHEDULEARRIVAL.PORTCODE",
                  "INNER JOIN EBOOKING.MSP_SAILINGVESSELLICENSE SAILINGVESSELLICENSE",
                  "    ON SAILING.CODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
                  "  AND SAILING.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
                  "  AND SAILING.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE ",
                  "  AND SAILING.SHIPTEMPLATESTARTDATE = SAILINGVESSELLICENSE.SHIPTEMPLATESTARTDATE",
                  "  AND ARRIVALPORT.CODE = SUBSTR(SAILINGVESSELLICENSE.LEGCODE,5,3) ",
                  "  AND SAILINGVESSELLICENSE.ENDDATE = '99991231000000'",
                  "WHERE SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME IS NOT NULL",
                  "AND SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME IS NOT NULL",
                  "AND SAILINGPORTSCHEDULEDEPARTURE.PORTORDER - SAILINGPORTSCHEDULEARRIVAL.PORTORDER < 0 ) ALLSAILINGS",
                  "LEFT OUTER JOIN ",
                  "(SELECT ",
                  "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
                  "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
                  "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
                  "SAILINGSELLABLEPRODUCT.LEGCODE,",
                  "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
                  "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
                  "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
                  "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
                  "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
                  "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
                  "AND SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
                  "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
                  "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0 ) ARRIVAL_ALLOCATION",
                  "    ON ALLSAILINGS.SAILINGCODE = ARRIVAL_ALLOCATION.SAILINGCODE",
                  "  AND ALLSAILINGS.ROUTEARRIVALPORT = ARRIVAL_ALLOCATION.ARRIVALPORT ",
                  "LEFT OUTER JOIN ",
                  "(SELECT ",
                  "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
                  "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
                  "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
                  "SAILINGSELLABLEPRODUCT.LEGCODE,",
                  "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
                  "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
                  "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
                  "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
                  "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
                  "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
                  "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
                  "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
                  "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0) DEPARTURE_ALLOCATION",
                  "    ON ALLSAILINGS.SAILINGCODE = DEPARTURE_ALLOCATION.SAILINGCODE",
                  "  AND ALLSAILINGS.ROUTEDEPARTUREPORT = DEPARTURE_ALLOCATION.DEPARTUREPORT",
                  "  AND DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE = ARRIVAL_ALLOCATION.PHYSICALRESOURCECODE) ALL_ALLOCATIONS",
                  "",
                  "ORDER BY ROUTEDEPARTUREDATE, RESOURCETYPESORT</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ",
              "SAILINGCODE,",
              "SAILINGDEPARTUREDATE,",
              "SAILINGDEPARTUREDATETIME,",
              "SAILINGDEPARTURETIME,",
              "LINECODE,",
              "LEGCODE,",
              "LEGNAME,",
              "ROUTEDEPARTUREPORT,",
              "ROUTEDEPARTUREPORTNAME,",
              "ROUTEDEPARTUREDATE,",
              "ROUTEDEPARTUREDATETIME,",
              "ROUTEDEPARTURETIME,",
              "DEPARTUREPORTDATETIME,",
              "ROUTEARRIVALPORT,",
              "ROUTEARRIVALPORTNAME,",
              "ROUTEARRIVALDATE,",
              "ROUTEARRIVALDATETIME,",
              "ROUTEARRIVALTIME,",
              "ARRIVALPORTDATETIME,",
              "ROUTEDEPARTUREARRIVALDATETIME,",
              "PHYSICALSHIPNAME,",
              "PHYSICALSHIPDESCRIPTION,",
              "LEGCODE || ' ' || '(' || VESSELCODE || ')' AS VESSELCODE,",
              "DEPARTUREDAY,",
              "DEPARTUREDAYS,",
              "DEPARTUREDATEDAY,",
              "CASE WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN '1PASSENGER'     ",
              "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN '2CAR DECK '",
              "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN '3CABIN    '",
              "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN '4CHAIR    '",
              "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN '5ONBOARD  '     ",
              "END RESOURCETYPE, ",
              "CASE  ",
              "     WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 1 ",
              "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 2",
              "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 3",
              "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 4",
              "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 5     ",
              "END RESOURCETYPESORT, ",
              "CASE WHEN PHYSICALRESOURCECODE IN ('BUS') THEN 'BUS (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('FOH') THEN 'FOH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('POH') THEN 'POH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE NOT IN ('BUS', 'FOH', 'POH', 'UH') THEN PHYSICALRESOURCECODE  ",
              "END AS PHYSICALRESOURCECODE,",
              "PHYSICALRESOURCETYPE,",
              "SOLDCAPACITY,",
              "AVAILABLECAPACITY ",
              "FROM ",
              "(SELECT ",
              "ALLSAILINGS.SAILINGCODE,",
              "ALLSAILINGS.SAILINGDEPARTUREDATE,",
              "ALLSAILINGS.SAILINGDEPARTUREDATETIME,",
              "ALLSAILINGS.SAILINGDEPARTURETIME,",
              "ALLSAILINGS.LINECODE,",
              "ALLSAILINGS.LEGCODE,",
              "ALLSAILINGS.LEGNAME,",
              "ALLSAILINGS.ROUTEDEPARTUREPORT,",
              "ALLSAILINGS.ROUTEDEPARTUREPORTNAME,",
              "ALLSAILINGS.ROUTEDEPARTUREDATE,",
              "ALLSAILINGS.ROUTEDEPARTUREDATETIME,",
              "ALLSAILINGS.ROUTEDEPARTURETIME,",
              "ALLSAILINGS.DEPARTUREPORTDATETIME,",
              "ALLSAILINGS.ROUTEARRIVALPORT,",
              "ALLSAILINGS.ROUTEARRIVALPORTNAME,",
              "ALLSAILINGS.ROUTEARRIVALDATE,",
              "ALLSAILINGS.ROUTEARRIVALDATETIME,",
              "ALLSAILINGS.ROUTEARRIVALTIME,",
              "ALLSAILINGS.ARRIVALPORTDATETIME,",
              "ALLSAILINGS.ROUTEDEPARTUREARRIVALDATETIME,",
              "ALLSAILINGS.PHYSICALSHIPNAME,",
              "ALLSAILINGS.PHYSICALSHIPDESCRIPTION,",
              "ALLSAILINGS.VESSELCODE,",
              "ALLSAILINGS.DEPARTUREDAY,",
              "ALLSAILINGS.DEPARTUREDAYS,",
              "ALLSAILINGS.DEPARTUREDATEDAY,",
              "DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE,",
              "CASE WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('PAX', 'CHILD')                                  THEN 'PASSENGER'     ",
              "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 'CAR DECK'",
              "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 'CABIN'",
              "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('SEA', 'SEAWC')                                  THEN 'CHAIR'",
              "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 'ONBOARD'     ",
              "END PHYSICALRESOURCETYPE, ",
              "CASE WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY > ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (DEPARTURE_ALLOCATION.SOLDCAPACITY)",
              "     WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY = ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (DEPARTURE_ALLOCATION.SOLDCAPACITY)",
              "     WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY < ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (ARRIVAL_ALLOCATION.SOLDCAPACITY)",
              "END SOLDCAPACITY,",
              "CASE WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY < ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY)",
              "     WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY = ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY)",
              "     WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY > ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (ARRIVAL_ALLOCATION.AVAILABLECAPACITY)",
              "END AVAILABLECAPACITY ",
              "FROM ",
              "(SELECT ",
              "SAILING.CODE AS SAILINGCODE,",
              "SAILING.LINECODE,",
              "SAILING.SAILINGDEPARTUREDATE,",
              "TO_CHAR(SAILING.SAILINGDEPARTUREDATE,'DD-MON-YY HH24:MI') AS SAILINGDEPARTUREDATETIME,",
              "TO_CHAR(SAILING.SAILINGDEPARTUREDATE,'HH24:MI') AS SAILINGDEPARTURETIME,",
              "DEPARTUREPORT.CODE || '-' || ARRIVALPORT.CODE AS LEGCODE,",
              "DEPARTUREPORT.NAME || ' - ' ||   ARRIVALPORT.NAME AS LEGNAME,",
              "DEPARTUREPORT.CODE AS ROUTEDEPARTUREPORT,",
              "DEPARTUREPORT.NAME AS ROUTEDEPARTUREPORTNAME,",
              "SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME AS ROUTEDEPARTUREDATE,",
              "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') AS ROUTEDEPARTUREDATETIME,",
              "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'HH24:MI') AS ROUTEDEPARTURETIME,",
              "DEPARTUREPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') || ')' AS DEPARTUREPORTDATETIME,",
              "ARRIVALPORT.CODE AS ROUTEARRIVALPORT,",
              "ARRIVALPORT.NAME AS ROUTEARRIVALPORTNAME,",
              "SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME AS ROUTEARRIVALDATE,",
              "TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') AS ROUTEARRIVALDATETIME,",
              "TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'HH24:MI') AS ROUTEARRIVALTIME,",
              "ARRIVALPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') || ')' AS ARRIVALPORTDATETIME,",
              "DEPARTUREPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') || ') - ' || ARRIVALPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') || ')' AS ROUTEDEPARTUREARRIVALDATETIME,",
              "SHIPTEMPLATE.PHYSICALSHIPNAME,",
              "PHYSICALSHIP.DESCRIPTION AS PHYSICALSHIPDESCRIPTION,",
              "SUBSTR(SHIPTEMPLATE.CODE,1,3) AS VESSELCODE,",
              "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY') AS DEPARTUREDAY,",
              "SUBSTR(TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY'),1,3) AS DEPARTUREDAYS,",
              "SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME || ' (' || SUBSTR(TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY'),1,3) || ')' AS DEPARTUREDATEDAY,",
              "SAILINGVESSELLICENSE.VESSELLICENSECODE,",
              "SAILINGVESSELLICENSE.CREWNUMBER,",
              "SAILINGVESSELLICENSE.SELLABLECAPACITY,",
              "SAILINGVESSELLICENSE.MAXCAPACITY",
              "FROM EBOOKING.MSP_SAILING SAILING",
              "INNER JOIN EBOOKING.MSP_SHIPTEMPLATE SHIPTEMPLATE",
              "    ON SHIPTEMPLATE.CODE = SAILING.SHIPTEMPLATECODE  ",
              "  AND SHIPTEMPLATE.STARTDATE = SAILING.SHIPTEMPLATESTARTDATE",
              "  AND SAILING.HIDEINFORMATION = 'N'",
              "INNER JOIN EBOOKING.MSP_PHYSICALSHIP PHYSICALSHIP",
              "    ON PHYSICALSHIP.NAME = SHIPTEMPLATE.PHYSICALSHIPNAME   ",
              "  AND PHYSICALSHIP.STARTDATE = SHIPTEMPLATE.PHYSICALSHIPSTARTDATE",
              "INNER JOIN EBOOKING.MSP_SAILINGPORTSCHEDULE SAILINGPORTSCHEDULEDEPARTURE",
              "    ON SAILINGPORTSCHEDULEDEPARTURE.SAILINGCODE = SAILING.CODE",
              "  AND SAILINGPORTSCHEDULEDEPARTURE.SAILINGSTARTDATE = SAILING.STARTDATE",
              "INNER JOIN EBOOKING.MSP_SAILINGPORTSCHEDULE SAILINGPORTSCHEDULEARRIVAL",
              "    ON SAILINGPORTSCHEDULEARRIVAL.SAILINGCODE = SAILING.CODE",
              "  AND SAILINGPORTSCHEDULEARRIVAL.SAILINGSTARTDATE = SAILING.STARTDATE",
              "INNER JOIN EBOOKING.MSP_LEG LEG",
              "    ON SAILINGPORTSCHEDULEDEPARTURE.PORTCODE = LEG.DEPARTURE_PORT",
              "  AND SAILINGPORTSCHEDULEDEPARTURE.PORTSTARTDATE = LEG.DEPARTURE_PORTSTARTDATE",
              "  AND SAILINGPORTSCHEDULEARRIVAL.PORTCODE = LEG.ARRIVAL_PORT",
              "  AND SAILINGPORTSCHEDULEARRIVAL.PORTSTARTDATE = LEG.ARRIVAL_PORTSTARTDATE",
              "INNER JOIN EBOOKING.MSP_PORT DEPARTUREPORT",
              "    ON DEPARTUREPORT.CODE = SAILINGPORTSCHEDULEDEPARTURE.PORTCODE",
              "INNER JOIN EBOOKING.MSP_PORT ARRIVALPORT",
              "    ON ARRIVALPORT.CODE = SAILINGPORTSCHEDULEARRIVAL.PORTCODE",
              "INNER JOIN EBOOKING.MSP_SAILINGVESSELLICENSE SAILINGVESSELLICENSE",
              "    ON SAILING.CODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
              "  AND SAILING.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
              "  AND SAILING.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE ",
              "  AND SAILING.SHIPTEMPLATESTARTDATE = SAILINGVESSELLICENSE.SHIPTEMPLATESTARTDATE",
              "  AND ARRIVALPORT.CODE = SUBSTR(SAILINGVESSELLICENSE.LEGCODE,5,3) ",
              "  AND SAILINGVESSELLICENSE.ENDDATE = '99991231000000'",
              "WHERE SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME IS NOT NULL",
              "AND SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME IS NOT NULL",
              "AND SAILINGPORTSCHEDULEDEPARTURE.PORTORDER - SAILINGPORTSCHEDULEARRIVAL.PORTORDER < 0 ) ALLSAILINGS",
              "LEFT OUTER JOIN ",
              "(SELECT ",
              "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
              "SAILINGSELLABLEPRODUCT.LEGCODE,",
              "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
              "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
              "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
              "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
              "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
              "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
              "AND SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
              "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
              "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0 ) ARRIVAL_ALLOCATION",
              "    ON ALLSAILINGS.SAILINGCODE = ARRIVAL_ALLOCATION.SAILINGCODE",
              "  AND ALLSAILINGS.ROUTEARRIVALPORT = ARRIVAL_ALLOCATION.ARRIVALPORT ",
              "LEFT OUTER JOIN ",
              "(SELECT ",
              "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
              "SAILINGSELLABLEPRODUCT.LEGCODE,",
              "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
              "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
              "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
              "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
              "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
              "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
              "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
              "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
              "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0) DEPARTURE_ALLOCATION",
              "    ON ALLSAILINGS.SAILINGCODE = DEPARTURE_ALLOCATION.SAILINGCODE",
              "  AND ALLSAILINGS.ROUTEDEPARTUREPORT = DEPARTURE_ALLOCATION.DEPARTUREPORT",
              "  AND DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE = ARRIVAL_ALLOCATION.PHYSICALRESOURCECODE) ALL_ALLOCATIONS",
              "",
              "ORDER BY ROUTEDEPARTUREDATE, RESOURCETYPESORT"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Query"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
              "SAILINGCODE,",
              "SAILINGDEPARTUREDATE,",
              "SAILINGDEPARTUREDATETIME,",
              "SAILINGDEPARTURETIME,",
              "LINECODE,",
              "LEGCODE,",
              "LEGNAME,",
              "ROUTEDEPARTUREPORT,",
              "ROUTEDEPARTUREPORTNAME,",
              "ROUTEDEPARTUREDATE,",
              "ROUTEDEPARTUREDATETIME,",
              "ROUTEDEPARTURETIME,",
              "DEPARTUREPORTDATETIME,",
              "ROUTEARRIVALPORT,",
              "ROUTEARRIVALPORTNAME,",
              "ROUTEARRIVALDATE,",
              "ROUTEARRIVALDATETIME,",
              "ROUTEARRIVALTIME,",
              "ARRIVALPORTDATETIME,",
              "ROUTEDEPARTUREARRIVALDATETIME,",
              "PHYSICALSHIPNAME,",
              "PHYSICALSHIPDESCRIPTION,",
              "LEGCODE || ' ' || '(' || VESSELCODE || ')' AS VESSELCODE,",
              "DEPARTUREDAY,",
              "DEPARTUREDAYS,",
              "DEPARTUREDATEDAY,",
              "CASE WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN '1PASSENGER'     ",
              "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN '2CAR DECK '",
              "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN '3CABIN    '",
              "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN '4CHAIR    '",
              "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN '5ONBOARD  '     ",
              "END RESOURCETYPE, ",
              "CASE  ",
              "     WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 1 ",
              "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 2",
              "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 3",
              "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 4",
              "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 5     ",
              "END RESOURCETYPESORT, ",
              "CASE WHEN PHYSICALRESOURCECODE IN ('BUS') THEN 'BUS (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('FOH') THEN 'FOH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('POH') THEN 'POH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE NOT IN ('BUS', 'FOH', 'POH', 'UH') THEN PHYSICALRESOURCECODE  ",
              "END AS PHYSICALRESOURCECODE,",
              "PHYSICALRESOURCETYPE,",
              "SOLDCAPACITY,",
              "AVAILABLECAPACITY ",
              "FROM ",
              "(SELECT ",
              "ALLSAILINGS.SAILINGCODE,",
              "ALLSAILINGS.SAILINGDEPARTUREDATE,",
              "ALLSAILINGS.SAILINGDEPARTUREDATETIME,",
              "ALLSAILINGS.SAILINGDEPARTURETIME,",
              "ALLSAILINGS.LINECODE,",
              "ALLSAILINGS.LEGCODE,",
              "ALLSAILINGS.LEGNAME,",
              "ALLSAILINGS.ROUTEDEPARTUREPORT,",
              "ALLSAILINGS.ROUTEDEPARTUREPORTNAME,",
              "ALLSAILINGS.ROUTEDEPARTUREDATE,",
              "ALLSAILINGS.ROUTEDEPARTUREDATETIME,",
              "ALLSAILINGS.ROUTEDEPARTURETIME,",
              "ALLSAILINGS.DEPARTUREPORTDATETIME,",
              "ALLSAILINGS.ROUTEARRIVALPORT,",
              "ALLSAILINGS.ROUTEARRIVALPORTNAME,",
              "ALLSAILINGS.ROUTEARRIVALDATE,",
              "ALLSAILINGS.ROUTEARRIVALDATETIME,",
              "ALLSAILINGS.ROUTEARRIVALTIME,",
              "ALLSAILINGS.ARRIVALPORTDATETIME,",
              "ALLSAILINGS.ROUTEDEPARTUREARRIVALDATETIME,",
              "ALLSAILINGS.PHYSICALSHIPNAME,",
              "ALLSAILINGS.PHYSICALSHIPDESCRIPTION,",
              "ALLSAILINGS.VESSELCODE,",
              "ALLSAILINGS.DEPARTUREDAY,",
              "ALLSAILINGS.DEPARTUREDAYS,",
              "ALLSAILINGS.DEPARTUREDATEDAY,",
              "DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE,",
              "CASE WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('PAX', 'CHILD')                                  THEN 'PASSENGER'     ",
              "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 'CAR DECK'",
              "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 'CABIN'",
              "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('SEA', 'SEAWC')                                  THEN 'CHAIR'",
              "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 'ONBOARD'     ",
              "END PHYSICALRESOURCETYPE, ",
              "CASE WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY > ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (DEPARTURE_ALLOCATION.SOLDCAPACITY)",
              "     WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY = ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (DEPARTURE_ALLOCATION.SOLDCAPACITY)",
              "     WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY < ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (ARRIVAL_ALLOCATION.SOLDCAPACITY)",
              "END SOLDCAPACITY,",
              "CASE WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY < ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY)",
              "     WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY = ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY)",
              "     WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY > ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (ARRIVAL_ALLOCATION.AVAILABLECAPACITY)",
              "END AVAILABLECAPACITY ",
              "FROM ",
              "(SELECT ",
              "SAILING.CODE AS SAILINGCODE,",
              "SAILING.LINECODE,",
              "SAILING.SAILINGDEPARTUREDATE,",
              "TO_CHAR(SAILING.SAILINGDEPARTUREDATE,'DD-MON-YY HH24:MI') AS SAILINGDEPARTUREDATETIME,",
              "TO_CHAR(SAILING.SAILINGDEPARTUREDATE,'HH24:MI') AS SAILINGDEPARTURETIME,",
              "DEPARTUREPORT.CODE || '-' || ARRIVALPORT.CODE AS LEGCODE,",
              "DEPARTUREPORT.NAME || ' - ' ||   ARRIVALPORT.NAME AS LEGNAME,",
              "DEPARTUREPORT.CODE AS ROUTEDEPARTUREPORT,",
              "DEPARTUREPORT.NAME AS ROUTEDEPARTUREPORTNAME,",
              "SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME AS ROUTEDEPARTUREDATE,",
              "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') AS ROUTEDEPARTUREDATETIME,",
              "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'HH24:MI') AS ROUTEDEPARTURETIME,",
              "DEPARTUREPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') || ')' AS DEPARTUREPORTDATETIME,",
              "ARRIVALPORT.CODE AS ROUTEARRIVALPORT,",
              "ARRIVALPORT.NAME AS ROUTEARRIVALPORTNAME,",
              "SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME AS ROUTEARRIVALDATE,",
              "TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') AS ROUTEARRIVALDATETIME,",
              "TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'HH24:MI') AS ROUTEARRIVALTIME,",
              "ARRIVALPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') || ')' AS ARRIVALPORTDATETIME,",
              "DEPARTUREPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') || ') - ' || ARRIVALPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') || ')' AS ROUTEDEPARTUREARRIVALDATETIME,",
              "SHIPTEMPLATE.PHYSICALSHIPNAME,",
              "PHYSICALSHIP.DESCRIPTION AS PHYSICALSHIPDESCRIPTION,",
              "SUBSTR(SHIPTEMPLATE.CODE,1,3) AS VESSELCODE,",
              "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY') AS DEPARTUREDAY,",
              "SUBSTR(TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY'),1,3) AS DEPARTUREDAYS,",
              "SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME || ' (' || SUBSTR(TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY'),1,3) || ')' AS DEPARTUREDATEDAY,",
              "SAILINGVESSELLICENSE.VESSELLICENSECODE,",
              "SAILINGVESSELLICENSE.CREWNUMBER,",
              "SAILINGVESSELLICENSE.SELLABLECAPACITY,",
              "SAILINGVESSELLICENSE.MAXCAPACITY",
              "FROM EBOOKING.MSP_SAILING SAILING",
              "INNER JOIN EBOOKING.MSP_SHIPTEMPLATE SHIPTEMPLATE",
              "    ON SHIPTEMPLATE.CODE = SAILING.SHIPTEMPLATECODE  ",
              "  AND SHIPTEMPLATE.STARTDATE = SAILING.SHIPTEMPLATESTARTDATE",
              "  AND SAILING.HIDEINFORMATION = 'N'",
              "INNER JOIN EBOOKING.MSP_PHYSICALSHIP PHYSICALSHIP",
              "    ON PHYSICALSHIP.NAME = SHIPTEMPLATE.PHYSICALSHIPNAME   ",
              "  AND PHYSICALSHIP.STARTDATE = SHIPTEMPLATE.PHYSICALSHIPSTARTDATE",
              "INNER JOIN EBOOKING.MSP_SAILINGPORTSCHEDULE SAILINGPORTSCHEDULEDEPARTURE",
              "    ON SAILINGPORTSCHEDULEDEPARTURE.SAILINGCODE = SAILING.CODE",
              "  AND SAILINGPORTSCHEDULEDEPARTURE.SAILINGSTARTDATE = SAILING.STARTDATE",
              "INNER JOIN EBOOKING.MSP_SAILINGPORTSCHEDULE SAILINGPORTSCHEDULEARRIVAL",
              "    ON SAILINGPORTSCHEDULEARRIVAL.SAILINGCODE = SAILING.CODE",
              "  AND SAILINGPORTSCHEDULEARRIVAL.SAILINGSTARTDATE = SAILING.STARTDATE",
              "INNER JOIN EBOOKING.MSP_LEG LEG",
              "    ON SAILINGPORTSCHEDULEDEPARTURE.PORTCODE = LEG.DEPARTURE_PORT",
              "  AND SAILINGPORTSCHEDULEDEPARTURE.PORTSTARTDATE = LEG.DEPARTURE_PORTSTARTDATE",
              "  AND SAILINGPORTSCHEDULEARRIVAL.PORTCODE = LEG.ARRIVAL_PORT",
              "  AND SAILINGPORTSCHEDULEARRIVAL.PORTSTARTDATE = LEG.ARRIVAL_PORTSTARTDATE",
              "INNER JOIN EBOOKING.MSP_PORT DEPARTUREPORT",
              "    ON DEPARTUREPORT.CODE = SAILINGPORTSCHEDULEDEPARTURE.PORTCODE",
              "INNER JOIN EBOOKING.MSP_PORT ARRIVALPORT",
              "    ON ARRIVALPORT.CODE = SAILINGPORTSCHEDULEARRIVAL.PORTCODE",
              "INNER JOIN EBOOKING.MSP_SAILINGVESSELLICENSE SAILINGVESSELLICENSE",
              "    ON SAILING.CODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
              "  AND SAILING.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
              "  AND SAILING.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE ",
              "  AND SAILING.SHIPTEMPLATESTARTDATE = SAILINGVESSELLICENSE.SHIPTEMPLATESTARTDATE",
              "  AND ARRIVALPORT.CODE = SUBSTR(SAILINGVESSELLICENSE.LEGCODE,5,3) ",
              "  AND SAILINGVESSELLICENSE.ENDDATE = '99991231000000'",
              "WHERE SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME IS NOT NULL",
              "AND SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME IS NOT NULL",
              "AND SAILINGPORTSCHEDULEDEPARTURE.PORTORDER - SAILINGPORTSCHEDULEARRIVAL.PORTORDER < 0 ) ALLSAILINGS",
              "LEFT OUTER JOIN ",
              "(SELECT ",
              "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
              "SAILINGSELLABLEPRODUCT.LEGCODE,",
              "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
              "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
              "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
              "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
              "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
              "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
              "AND SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
              "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
              "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0 ) ARRIVAL_ALLOCATION",
              "    ON ALLSAILINGS.SAILINGCODE = ARRIVAL_ALLOCATION.SAILINGCODE",
              "  AND ALLSAILINGS.ROUTEARRIVALPORT = ARRIVAL_ALLOCATION.ARRIVALPORT ",
              "LEFT OUTER JOIN ",
              "(SELECT ",
              "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
              "SAILINGSELLABLEPRODUCT.LEGCODE,",
              "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
              "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
              "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
              "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
              "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
              "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
              "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
              "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
              "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0) DEPARTURE_ALLOCATION",
              "    ON ALLSAILINGS.SAILINGCODE = DEPARTURE_ALLOCATION.SAILINGCODE",
              "  AND ALLSAILINGS.ROUTEDEPARTUREPORT = DEPARTURE_ALLOCATION.DEPARTUREPORT",
              "  AND DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE = ARRIVAL_ALLOCATION.PHYSICALRESOURCECODE) ALL_ALLOCATIONS",
              "",
              "ORDER BY ROUTEDEPARTUREDATE, RESOURCETYPESORT</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "PhysicalResources",
        "columns": [
          {
            "name": "PhysicalResourceCode",
            "dataType": "string",
            "sourceColumn": "PHYSICALRESOURCECODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ResourceType",
            "dataType": "string",
            "sourceColumn": "RESOURCETYPE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ResourceTypeSort",
            "dataType": "double",
            "sourceColumn": "RESOURCETYPESORT",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "ResourceCode",
            "dataType": "string",
            "sourceColumn": "RESOURCECODE",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "Query",
            "dataView": "full",
            "source": {
              "query": [
                "select distinct PHYSICALRESOURCECODE,",
                "CASE WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 'PASSENGER'     ",
                "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 'CAR DECK '",
                "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 'CABIN    '",
                "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 'CHAIR    '",
                "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 'ONBOARD  '     ",
                "END RESOURCETYPE, ",
                "CASE  ",
                "     WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 1 ",
                "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 2",
                "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 3",
                "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 4",
                "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 5     ",
                "END RESOURCETYPESORT, ",
                "CASE WHEN PHYSICALRESOURCECODE IN ('BUS') THEN 'BUS (FT)' ",
                "     WHEN PHYSICALRESOURCECODE IN ('FOH') THEN 'FOH (FT)' ",
                "     WHEN PHYSICALRESOURCECODE IN ('POH') THEN 'POH (FT)' ",
                "     WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' ",
                "     WHEN PHYSICALRESOURCECODE NOT IN ('BUS', 'FOH', 'POH', 'UH') THEN PHYSICALRESOURCECODE  ",
                "END AS RESOURCECODE",
                "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
                "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
                "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
                "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
                "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0"
              ],
              "dataSource": "Oracle scan.stg01.rac.bcferries.corp"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct PHYSICALRESOURCECODE,",
                  "CASE WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 'PASSENGER'     ",
                  "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 'CAR DECK '",
                  "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 'CABIN    '",
                  "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 'CHAIR    '",
                  "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 'ONBOARD  '     ",
                  "END RESOURCETYPE, ",
                  "CASE  ",
                  "     WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 1 ",
                  "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 2",
                  "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 3",
                  "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 4",
                  "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 5     ",
                  "END RESOURCETYPESORT, ",
                  "CASE WHEN PHYSICALRESOURCECODE IN ('BUS') THEN 'BUS (FT)' ",
                  "     WHEN PHYSICALRESOURCECODE IN ('FOH') THEN 'FOH (FT)' ",
                  "     WHEN PHYSICALRESOURCECODE IN ('POH') THEN 'POH (FT)' ",
                  "     WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' ",
                  "     WHEN PHYSICALRESOURCECODE NOT IN ('BUS', 'FOH', 'POH', 'UH') THEN PHYSICALRESOURCECODE  ",
                  "END AS RESOURCECODE",
                  "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
                  "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
                  "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
                  "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
                  "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select distinct PHYSICALRESOURCECODE,",
              "CASE WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 'PASSENGER'     ",
              "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 'CAR DECK '",
              "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 'CABIN    '",
              "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 'CHAIR    '",
              "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 'ONBOARD  '     ",
              "END RESOURCETYPE, ",
              "CASE  ",
              "     WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 1 ",
              "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 2",
              "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 3",
              "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 4",
              "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 5     ",
              "END RESOURCETYPESORT, ",
              "CASE WHEN PHYSICALRESOURCECODE IN ('BUS') THEN 'BUS (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('FOH') THEN 'FOH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('POH') THEN 'POH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE NOT IN ('BUS', 'FOH', 'POH', 'UH') THEN PHYSICALRESOURCECODE  ",
              "END AS RESOURCECODE",
              "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
              "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
              "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
              "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
              "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Query"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct PHYSICALRESOURCECODE,",
              "CASE WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 'PASSENGER'     ",
              "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 'CAR DECK '",
              "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 'CABIN    '",
              "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 'CHAIR    '",
              "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 'ONBOARD  '     ",
              "END RESOURCETYPE, ",
              "CASE  ",
              "     WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 1 ",
              "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 2",
              "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 3",
              "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 4",
              "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 5     ",
              "END RESOURCETYPESORT, ",
              "CASE WHEN PHYSICALRESOURCECODE IN ('BUS') THEN 'BUS (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('FOH') THEN 'FOH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('POH') THEN 'POH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE NOT IN ('BUS', 'FOH', 'POH', 'UH') THEN PHYSICALRESOURCECODE  ",
              "END AS RESOURCECODE",
              "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
              "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
              "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
              "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
              "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Bookings",
        "columns": [
          {
            "name": "SAILING_PK",
            "dataType": "string",
            "sourceColumn": "SAILING_PK",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEDEPARTUREPORT",
            "dataType": "string",
            "sourceColumn": "ROUTEDEPARTUREPORT",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEDEPARTUREDATE",
            "dataType": "dateTime",
            "sourceColumn": "ROUTEDEPARTUREDATE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ROUTEDEPARTUREDATETIME",
            "dataType": "string",
            "sourceColumn": "ROUTEDEPARTUREDATETIME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEDEPARTURETIME",
            "dataType": "string",
            "sourceColumn": "ROUTEDEPARTURETIME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEARRIVALPORT",
            "dataType": "string",
            "sourceColumn": "ROUTEARRIVALPORT",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEARRIVALDATE",
            "dataType": "dateTime",
            "sourceColumn": "ROUTEARRIVALDATE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ROUTEARRIVALDATETIME",
            "dataType": "string",
            "sourceColumn": "ROUTEARRIVALDATETIME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEARRIVALTIME",
            "dataType": "string",
            "sourceColumn": "ROUTEARRIVALTIME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "BUSINESSUNITNAME",
            "dataType": "string",
            "sourceColumn": "BUSINESSUNITNAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "BOOKINGREFERENCE",
            "dataType": "string",
            "sourceColumn": "BOOKINGREFERENCE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SPECIALINSTRUCTIONSFLAG",
            "dataType": "string",
            "sourceColumn": "SPECIALINSTRUCTIONSFLAG",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "BHSURNAME",
            "dataType": "string",
            "sourceColumn": "BHSURNAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "BHFIRSTNAME",
            "dataType": "string",
            "sourceColumn": "BHFIRSTNAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "BHTELEPHONE",
            "dataType": "string",
            "sourceColumn": "BHTELEPHONE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "CUSTOMERID",
            "dataType": "string",
            "sourceColumn": "CUSTOMERID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "AGENCYID",
            "dataType": "string",
            "sourceColumn": "AGENCYID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SPECIALINSTRUCTIONS",
            "dataType": "string",
            "sourceColumn": "SPECIALINSTRUCTIONS",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PRODUCTTYPE",
            "dataType": "string",
            "sourceColumn": "PRODUCTTYPE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PRODUCTTYPESORT",
            "dataType": "double",
            "sourceColumn": "PRODUCTTYPESORT",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "PRODUCTCODE",
            "dataType": "string",
            "sourceColumn": "PRODUCTCODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "STANDBYPRODUCT",
            "dataType": "string",
            "sourceColumn": "STANDBYPRODUCT",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "VEHICLELENGTH",
            "dataType": "double",
            "sourceColumn": "VEHICLELENGTH",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "PASSENGERCODE",
            "dataType": "string",
            "sourceColumn": "PASSENGERCODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "TYPE",
            "dataType": "string",
            "sourceColumn": "TYPE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PASSENGERFIRSTNAME",
            "dataType": "string",
            "sourceColumn": "PASSENGERFIRSTNAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PASSENGERSURNAME",
            "dataType": "string",
            "sourceColumn": "PASSENGERSURNAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PASSENGERFULLNAME",
            "dataType": "string",
            "sourceColumn": "PASSENGERFULLNAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "REDEEMED",
            "dataType": "string",
            "sourceColumn": "REDEEMED",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DEFERREDPAYMENT",
            "dataType": "string",
            "sourceColumn": "DEFERREDPAYMENT",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SALESCHANNEL",
            "dataType": "string",
            "sourceColumn": "SALESCHANNEL",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "VESSELTRANSFER",
            "dataType": "string",
            "sourceColumn": "VESSELTRANSFER",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "BOOKINGDEPARTUREPORT",
            "dataType": "string",
            "sourceColumn": "BOOKINGDEPARTUREPORT",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "BOOKINGARRIVALPORT",
            "dataType": "string",
            "sourceColumn": "BOOKINGARRIVALPORT",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "FINALTRANSFERPORT",
            "dataType": "string",
            "sourceColumn": "FINALTRANSFERPORT",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "CUSTOMERNAME",
            "dataType": "string",
            "sourceColumn": "CUSTOMERNAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ACCOUNTID",
            "dataType": "string",
            "sourceColumn": "ACCOUNTID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ACCOUNTNAME",
            "dataType": "string",
            "sourceColumn": "ACCOUNTNAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "GROSSAMOUNT",
            "dataType": "double",
            "sourceColumn": "GROSSAMOUNT",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "PAID",
            "dataType": "double",
            "sourceColumn": "PAID",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "OWING",
            "dataType": "double",
            "sourceColumn": "OWING",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "OWINGFLAG",
            "dataType": "string",
            "sourceColumn": "OWINGFLAG",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "REBATEAMOUNT",
            "dataType": "double",
            "sourceColumn": "REBATEAMOUNT",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "SURCHARGEAMOUNT",
            "dataType": "double",
            "sourceColumn": "SURCHARGEAMOUNT",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "TOTALPRICE",
            "dataType": "double",
            "sourceColumn": "TOTALPRICE",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "QUANTITY",
            "dataType": "int64",
            "sourceColumn": "QUANTITY",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "UNITGROSSAMOUNT",
            "dataType": "double",
            "sourceColumn": "UNITGROSSAMOUNT",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "HOSTLEPRODUCT",
            "dataType": "string",
            "sourceColumn": "HOSTLEPRODUCT"
          },
          {
            "name": "DGPRODUCT",
            "dataType": "string",
            "sourceColumn": "DGPRODUCT"
          },
          {
            "type": "calculated",
            "name": "STANDBYQTY",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "IF(",
              "\t\t\tBookings[STANDBYPRODUCT] = \"Y\", 1, 0",
              "\t\t)"
            ]
          },
          {
            "type": "calculated",
            "name": "HOSTLEQTY",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "IF(",
              "\t\t\tBookings[HOSTLEPRODUCT] = \"Y\", 1, 0",
              "\t\t)"
            ]
          },
          {
            "type": "calculated",
            "name": "DGQTY",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "IF(",
              "\t\t\tBookings[DGPRODUCT] = \"Y\", 1, 0",
              "\t\t)"
            ]
          },
          {
            "name": "VEHICLEWEIGHT",
            "dataType": "double",
            "sourceColumn": "VEHICLEWEIGHT"
          },
          {
            "name": "VEHICLEWIDTH",
            "dataType": "double",
            "sourceColumn": "VEHICLEWIDTH"
          },
          {
            "name": "VEHICLEHEIGHT",
            "dataType": "double",
            "sourceColumn": "VEHICLEHEIGHT"
          },
          {
            "type": "calculated",
            "name": "BookingCustomerDetail",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "Bookings[BHSURNAME] & \", \" & Bookings[BHFIRSTNAME] & \" - \" & Bookings[BHTELEPHONE]"
          }
        ],
        "partitions": [
          {
            "name": "Query",
            "dataView": "full",
            "source": {
              "query": [
                "SELECT ",
                "       SAILING.CODE || '-' || SAILING.STARTDATE || '-' || BOOKINGROUTE.ROUTEDEPARTUREPORT || '-' || BOOKINGROUTE.ROUTEARRIVALPORT as SAILING_PK,",
                "       BOOKINGROUTE.ROUTEDEPARTUREPORT,",
                "       BOOKINGROUTE.DEPARTUREDATE AS ROUTEDEPARTUREDATE,",
                "       TO_CHAR(BOOKINGROUTE.DEPARTUREDATE,'DD-MON-YY HH24:MI') AS ROUTEDEPARTUREDATETIME,",
                "       TO_CHAR(BOOKINGROUTE.DEPARTUREDATE,'HH24:MI') AS ROUTEDEPARTURETIME,",
                "       BOOKINGROUTE.ROUTEARRIVALPORT,",
                "       BOOKINGROUTE.ARRIVALDATE AS ROUTEARRIVALDATE,",
                "       TO_CHAR(BOOKINGROUTE.ARRIVALDATE,'DD-MON-YY HH24:MI') AS ROUTEARRIVALDATETIME,",
                "       TO_CHAR(BOOKINGROUTE.ARRIVALDATE,'HH24:MI') AS ROUTEARRIVALTIME,",
                "       VALID_MAX.BUSINESSUNITNAME,",
                "       VALID_MAX.BOOKINGREFERENCE,",
                "       CASE WHEN BOOKING.SPECIALINSTRUCTIONS IS NULL THEN 'N'",
                "            WHEN BOOKING.SPECIALINSTRUCTIONS IS NOT NULL THEN 'Y'",
                "       END AS SPECIALINSTRUCTIONSFLAG,",
                "       BOOKINGHOLDER.SURNAME AS BHSURNAME,",
                "       BOOKINGHOLDER.NAME AS BHFIRSTNAME,",
                "       BOOKINGHOLDER.PHONENUMBER AS BHTELEPHONE,",
                "       BOOKINGHOLDER.CUSTOMERID,",
                "       BOOKING.AGENCYID,",
                "       BOOKING.SPECIALINSTRUCTIONS AS SPECIALINSTRUCTIONS,",
                "       BOOKEDPRODUCT.PRODUCTTYPE,",
                "       CASE WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'PASSENGER' THEN 1",
                "            WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'VEHICLE' THEN 2",
                "            WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'CABIN' THEN 3",
                "            WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'CHAIR' THEN 4",
                "            WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'ONBOARD' THEN 5",
                "            WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'BIKE' THEN 6",
                "       END AS PRODUCTTYPESORT,",
                "       BOOKEDPRODUCT.PRODUCTCODE,",
                "       BOOKEDPRODUCT.STANDBYPRODUCT, ",
                "       SUM(BOOKEDPRODUCT.VEHICLELENGTH) AS VEHICLELENGTH,",
                "       SUM(BOOKEDPRODUCT.VEHICLEWEIGHT) as VEHICLEWEIGHT,",
                "       MAX(BOOKEDPRODUCT.VEHICLEWIDTH) as VEHICLEWIDTH,",
                "       MAX(BOOKEDPRODUCT.VEHICLEHEIGHT) as VEHICLEHEIGHT,",
                "       PRODUCTPASS.PRODUCTCODE AS PASSENGERCODE,",
                "       BOOKEDPASS.TYPE,",
                "       BOOKEDPASS.NAME AS PASSENGERFIRSTNAME,",
                "       BOOKEDPASS.SURNAME AS PASSENGERSURNAME,",
                "       CASE WHEN BOOKEDPASS.SURNAME IS NULL THEN '' ",
                "            WHEN BOOKEDPASS.SURNAME IS NOT NULL THEN BOOKEDPASS.SURNAME || ', ' || BOOKEDPASS.NAME ",
                "       END PASSENGERFULLNAME,",
                "       ' ' AS REDEEMED,",
                "       NVL(BOOKINGPAYMENTHISTORY.DEFERREDPAYMENT, 'N') AS DEFERREDPAYMENT,",
                "       SUBSTR(BOOKING.SALESCHANNEL,1,3) AS SALESCHANNEL,",
                "       BOOKING.VESSELTRANSFER,",
                "       BR_DEP.ROUTEDEPARTUREPORT AS BOOKINGDEPARTUREPORT,",
                "       BR_ARR.ROUTEARRIVALPORT AS BOOKINGARRIVALPORT,",
                "       CASE WHEN BOOKING.VESSELTRANSFER = 'N' THEN BOOKING.VESSELTRANSFER",
                "            WHEN BOOKING.VESSELTRANSFER = 'Y' THEN BOOKING.VESSELTRANSFER || '-' || BR_ARR.ROUTEARRIVALPORT ",
                "       END FINALTRANSFERPORT,",
                "       ACCOUNT.CUSTOMERNAME,",
                "       BOOKINGCRMENTITY.ID AS ACCOUNTID,",
                "       REPLACE( BOOKINGCRMENTITY.NAME, '%20', ' ' ) AS ACCOUNTNAME,",
                "       BOOKING.GROSSAMOUNT, ",
                "       BOOKING.PAID,",
                "       (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) AS OWING,",
                "       CASE WHEN (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) = 0 THEN 'N'",
                "            WHEN (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) <> 0 THEN 'Y'",
                "       END AS OWINGFLAG,",
                "       CASE WHEN PRODUCTSURCHARGE.TYPE = 'REBATE' THEN SUM(-PRODUCTSURCHARGE.AMOUNT) ",
                "            WHEN PRODUCTSURCHARGE.TYPE = 'SURCHARGE' THEN 0",
                "       END REBATEAMOUNT,",
                "       CASE WHEN PRODUCTSURCHARGE.TYPE = 'REBATE' THEN 0 ",
                "            WHEN PRODUCTSURCHARGE.TYPE = 'SURCHARGE' THEN SUM(PRODUCTSURCHARGE.AMOUNT)",
                "       END SURCHARGEAMOUNT,",
                "       SUM(BOOKEDPRODUCT.UNITPRICE) AS TOTALPRICE, ",
                "       SUM(BOOKEDPRODUCT.QUANTITY) AS QUANTITY,",
                "       case when PRODUCTSURCHARGE.CODE = 'HOSTLE' then 'Y' else 'N' end as HOSTLEPRODUCT,",
                "       case when BOOKEDPRODUCT.PRODUCTCODE = 'DG' then 'Y' else 'N' end as DGPRODUCT,",
                "       SUM(BOOKEDPRODUCT.TOTALNETUNITPRICE) AS UNITGROSSAMOUNT",
                "",
                "FROM",
                "(SELECT DISTINCT BOOKING.BOOKINGREFERENCE, BOOKING.BUSINESSUNITNAME,",
                "       (SELECT MAX(BOOKINGMAX.BOOKINGVERSION)",
                "          FROM EBOOKING.IBE_BOOKING BOOKINGMAX",
                "         WHERE BOOKINGMAX.BOOKINGREFERENCE = BOOKING.BOOKINGREFERENCE ) BOOKINGVERSION",
                "  FROM EBOOKING.IBE_BOOKING BOOKING",
                " WHERE BOOKING.BOOKINGSTATUS NOT IN ('CANCELLED', 'OPTION')) VALID_MAX",
                " INNER JOIN EBOOKING.IBE_BOOKING BOOKING",
                "    ON BOOKING.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                "   AND BOOKING.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
                " INNER JOIN EBOOKING.IBE_BOOKEDPRODUCT BOOKEDPRODUCT",
                "    ON BOOKEDPRODUCT.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                "   AND BOOKEDPRODUCT.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
                "INNER JOIN EBOOKING.IBE_BOOKINGHOLDER BOOKINGHOLDER",
                "    ON BOOKINGHOLDER.CONTACTID = BOOKING.HOLDERCONTACTID",
                "   AND BOOKINGHOLDER.BOOKINGHOLDERVERSION = BOOKING.HOLDERVERSION",
                "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BOOKINGROUTE",
                "    ON BOOKINGROUTE.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                "   AND BOOKINGROUTE.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
                "   AND BOOKINGROUTE.SAILINGCODE =  BOOKEDPRODUCT.ROUTESAILINGCODE ",
                "   AND BOOKINGROUTE.SAILINGSTARTDATE =  BOOKEDPRODUCT.ROUTESAILINGSTARTDATE ",
                "   AND BOOKINGROUTE.ROUTEDEPARTUREPORT = BOOKEDPRODUCT.ROUTEDEPARTUREPORT",
                "   AND BOOKINGROUTE.ROUTEARRIVALPORT = BOOKEDPRODUCT.ROUTEARRIVALPORT",
                "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BR_DEP",
                "  ON VALID_MAX.BOOKINGREFERENCE = BR_DEP.BOOKINGREFERENCE",
                " AND VALID_MAX.BOOKINGVERSION = BR_DEP.BOOKINGVERSION",
                " AND BR_DEP.DEPARTUREDATE = (SELECT MIN(DEPARTUREDATE) FROM EBOOKING.IBE_BOOKINGROUTE WHERE BR_DEP.BOOKINGREFERENCE = BOOKINGREFERENCE AND BR_DEP.BOOKINGVERSION = BOOKINGVERSION)",
                "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BR_ARR",
                "  ON VALID_MAX.BOOKINGREFERENCE = BR_ARR.BOOKINGREFERENCE",
                " AND VALID_MAX.BOOKINGVERSION = BR_ARR.BOOKINGVERSION",
                " AND BR_ARR.DEPARTUREDATE = (SELECT MAX(DEPARTUREDATE) FROM EBOOKING.IBE_BOOKINGROUTE WHERE BR_ARR.BOOKINGREFERENCE = BOOKINGREFERENCE AND BR_ARR.BOOKINGVERSION = BOOKINGVERSION)",
                "LEFT OUTER JOIN EBOOKING.IBE_BOOKEDPRODUCTSURCHARGE PRODUCTSURCHARGE",
                "    ON PRODUCTSURCHARGE.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                "   AND PRODUCTSURCHARGE.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
                "   AND PRODUCTSURCHARGE.ROUTESAILINGCODE =  BOOKEDPRODUCT.ROUTESAILINGCODE ",
                "   AND PRODUCTSURCHARGE.ROUTESAILINGSTARTDATE =  BOOKEDPRODUCT.ROUTESAILINGSTARTDATE ",
                "   AND PRODUCTSURCHARGE.ROUTEDEPARTUREPORT = BOOKEDPRODUCT.ROUTEDEPARTUREPORT",
                "   AND PRODUCTSURCHARGE.ROUTEARRIVALPORT = BOOKEDPRODUCT.ROUTEARRIVALPORT",
                "   AND PRODUCTSURCHARGE.PRODUCTCODE =  BOOKEDPRODUCT.PRODUCTCODE ",
                "   AND PRODUCTSURCHARGE.PRODUCTSTARTDATE = BOOKEDPRODUCT.PRODUCTSTARTDATE",
                "   AND PRODUCTSURCHARGE.PRODUCTINDEX = BOOKEDPRODUCT.PRODUCTINDEX",
                " INNER JOIN EBOOKING.CHI_PRODUCTSTATUS PRODUCTSTATUS",
                "    ON PRODUCTSTATUS.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                "   AND PRODUCTSTATUS.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
                "   AND PRODUCTSTATUS.ROUTESAILINGCODE =  BOOKEDPRODUCT.ROUTESAILINGCODE ",
                "   AND PRODUCTSTATUS.ROUTESAILINGSTARTDATE =  BOOKEDPRODUCT.ROUTESAILINGSTARTDATE ",
                "   AND PRODUCTSTATUS.ROUTEDEPARTUREPORT = BOOKEDPRODUCT.ROUTEDEPARTUREPORT",
                "   AND PRODUCTSTATUS.ROUTEARRIVALPORT = BOOKEDPRODUCT.ROUTEARRIVALPORT",
                "   AND PRODUCTSTATUS.PRODUCTCODE =  BOOKEDPRODUCT.PRODUCTCODE ",
                "   AND PRODUCTSTATUS.PRODUCTSTARTDATE = BOOKEDPRODUCT.PRODUCTSTARTDATE",
                "   AND PRODUCTSTATUS.PRODUCTINDEX = BOOKEDPRODUCT.PRODUCTINDEX",
                "   AND PRODUCTSTATUS.ENDDATE = '99991231000000'",
                "   AND PRODUCTSTATUS.CHECKINSTATUS NOT IN ('CANCELLED', 'NO SHOW')",
                "LEFT OUTER JOIN EBOOKING.IBE_PRODUCTPASSENGER PRODUCTPASS",
                "      ON PRODUCTPASS.PRODUCTBOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                "   AND PRODUCTPASS.PRODUCTBOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
                "   AND PRODUCTPASS.PRODUCTROUTESAILINGCODE =  BOOKEDPRODUCT.ROUTESAILINGCODE ",
                "   AND PRODUCTPASS.PRODUCTROUTESAILINGSTARTDATE =  BOOKEDPRODUCT.ROUTESAILINGSTARTDATE ",
                "   AND PRODUCTPASS.PRODUCTROUTEDEPARTUREPORT = BOOKEDPRODUCT.ROUTEDEPARTUREPORT",
                "   AND PRODUCTPASS.PRODUCTROUTEARRIVALPORT = BOOKEDPRODUCT.ROUTEARRIVALPORT",
                "   AND PRODUCTPASS.PRODUCTCODE =  BOOKEDPRODUCT.PRODUCTCODE ",
                "   AND PRODUCTPASS.PRODUCTSTARTDATE = BOOKEDPRODUCT.PRODUCTSTARTDATE",
                "   AND PRODUCTPASS.PRODUCTINDEX = BOOKEDPRODUCT.PRODUCTINDEX",
                "   AND PRODUCTPASS.PRODUCTTYPE = 'PASSENGER'",
                "LEFT OUTER JOIN EBOOKING.IBE_BOOKEDPASSENGER BOOKEDPASS",
                "      ON BOOKEDPASS.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                "   AND BOOKEDPASS.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION ",
                "   AND BOOKEDPASS.SAILINGCODE = PRODUCTPASS.PASSENGERSAILINGCODE  ",
                "   AND BOOKEDPASS.SAILINGSTARTDATE = PRODUCTPASS.PASSENGERSAILINGSTARTDATE  ",
                "   AND BOOKEDPASS.ROUTEDEPARTUREPORT = PRODUCTPASS.PASSENGERROUTEDEPARTUREPORT",
                "   AND BOOKEDPASS.ROUTEARRIVALPORT = PRODUCTPASS.PASSENGERROUTEARRIVALPORT ",
                "   AND BOOKEDPASS.PASSENGERINDEX = PRODUCTPASS.PASSENGERINDEX ",
                " LEFT JOIN EBOOKING.IBE_BOOKINGCRMENTITY BOOKINGCRMENTITY",
                "    ON BOOKINGCRMENTITY.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                "   AND BOOKINGCRMENTITY.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
                "INNER JOIN EBOOKING.ACC_ACCOUNT ACCOUNT",
                "    ON ACCOUNT.ACCOUNTID = BOOKING.ACCOUNTID ",
                "   AND ACCOUNT.STARTDATE = BOOKING.ACCOUNTSTARTDATE",
                "   AND ACCOUNT.ACCOUNTVERSION = BOOKING.ACCOUNTVERSION",
                " INNER JOIN EBOOKING.MSP_SAILING SAILING",
                "    ON SAILING.CODE = BOOKINGROUTE.SAILINGCODE  ",
                "   AND SAILING.STARTDATE = BOOKINGROUTE.SAILINGSTARTDATE",
                "   AND SAILING.HIDEINFORMATION = 'N'",
                "  LEFT JOIN (SELECT BOOKINGREFERENCE, BOOKINGVERSION, DEFERREDPAYMENT FROM EBOOKING.IBE_BOOKINGPAYMENTHISTORY ",
                "               WHERE PAYMENTSTATUS <> 'FAILED' AND DEFERREDPAYMENT = 'Y'          ",
                "               GROUP BY BOOKINGREFERENCE, BOOKINGVERSION, DEFERREDPAYMENT) BOOKINGPAYMENTHISTORY",
                "    ON BOOKINGPAYMENTHISTORY.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                "   AND BOOKINGPAYMENTHISTORY.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION ",
                "   GROUP BY PRODUCTSURCHARGE.CODE,",
                "SAILING.CODE, SAILING.STARTDATE, BOOKINGROUTE.SAILINGCODE, BOOKINGROUTE.ROUTEDEPARTUREPORT,  BOOKINGROUTE.DEPARTUREDATE, BOOKINGROUTE.ROUTEARRIVALPORT,  BOOKINGROUTE.ARRIVALDATE, VALID_MAX.BUSINESSUNITNAME,        VALID_MAX.BOOKINGREFERENCE, BOOKINGHOLDER.SURNAME, BOOKINGHOLDER.NAME, BOOKINGHOLDER.PHONENUMBER, BOOKINGHOLDER.CUSTOMERID, BOOKING.AGENCYID, BOOKING.SPECIALINSTRUCTIONS, BOOKEDPRODUCT.PRODUCTTYPE, BOOKEDPRODUCT.PRODUCTCODE, BOOKEDPRODUCT.STANDBYPRODUCT, PRODUCTPASS.PRODUCTCODE, BOOKEDPASS.TYPE, BOOKEDPASS.NAME,        BOOKEDPASS.SURNAME, BOOKINGPAYMENTHISTORY.DEFERREDPAYMENT, BOOKING.SALESCHANNEL, BOOKING.VESSELTRANSFER, BR_DEP.ROUTEDEPARTUREPORT, BR_ARR.ROUTEARRIVALPORT, ACCOUNT.CUSTOMERNAME, BOOKINGCRMENTITY.ID, BOOKINGCRMENTITY.NAME, PRODUCTSURCHARGE.TYPE, BOOKING.PAID, BOOKING.GROSSAMOUNT",
                "union",
                "SELECT ",
                "       SAILING.CODE || '-' || SAILING.STARTDATE || '-' || BOOKINGROUTE.ROUTEDEPARTUREPORT || '-' || BOOKINGROUTE.ROUTEARRIVALPORT as SAILING_PK,",
                "       BOOKINGROUTE.ROUTEDEPARTUREPORT,",
                "       BOOKINGROUTE.DEPARTUREDATE AS ROUTEDEPARTUREDATE,",
                "       TO_CHAR(BOOKINGROUTE.DEPARTUREDATE,'DD-MON-YY HH24:MI') AS ROUTEDEPARTUREDATETIME,",
                "       TO_CHAR(BOOKINGROUTE.DEPARTUREDATE,'HH24:MI') AS ROUTEDEPARTURETIME,",
                " BOOKINGROUTE.ROUTEARRIVALPORT,",
                "       BOOKINGROUTE.ARRIVALDATE AS ROUTEARRIVALDATE,",
                "       TO_CHAR(BOOKINGROUTE.ARRIVALDATE,'DD-MON-YY HH24:MI') AS ROUTEARRIVALDATETIME,",
                "       TO_CHAR(BOOKINGROUTE.ARRIVALDATE,'HH24:MI') AS ROUTEARRIVALTIME,",
                "VALID_MAX.BUSINESSUNITNAME,",
                "       VALID_MAX.BOOKINGREFERENCE,",
                "       CASE WHEN BOOKING.SPECIALINSTRUCTIONS IS NULL THEN 'N'",
                "            WHEN BOOKING.SPECIALINSTRUCTIONS IS NOT NULL THEN 'Y'",
                "       END AS SPECIALINSTRUCTIONSFLAG,",
                "       BOOKINGHOLDER.SURNAME AS BHSURNAME,",
                "       BOOKINGHOLDER.NAME AS BHFIRSTNAME,",
                "       BOOKINGHOLDER.PHONENUMBER AS BHTELEPHONE,",
                "       BOOKINGHOLDER.CUSTOMERID,",
                "       BOOKING.AGENCYID,",
                "       BOOKING.SPECIALINSTRUCTIONS AS  SPECIALINSTRUCTIONS,",
                "       'FEE' AS PRODUCTTYPE, ",
                "       7 AS PRODUCTTYPESORT,",
                "       'FEE' AS PRODUCTCODE,",
                "       'N' AS STANDBYPRODUCT,",
                "       NULL AS VEHICLELENGTH,",
                "       NULL as VEHICLEWEIGHT,",
                "       NULL as VEHICLEWIDTH,",
                "       NULL as VEHICLEHEIGHT,",
                "       NULL AS PASSENGERCODE,      ",
                "       NULL AS TYPE,               ",
                "       NULL AS PASSENGERFIRSTNAME, ",
                "       NULL AS PASSENGERSURNAME,   ",
                "       NULL AS PASSENGERFULLNAME,",
                "       ' ' AS REDEEMED,",
                "       NVL(BOOKINGPAYMENTHISTORY.DEFERREDPAYMENT, 'N') AS DEFERREDPAYMENT,",
                "       SUBSTR(BOOKING.SALESCHANNEL,1,3) AS SALESCHANNEL,",
                "       BOOKING.VESSELTRANSFER,",
                "       BR_DEP.ROUTEDEPARTUREPORT AS BOOKINGDEPARTUREPORT,",
                "       BR_ARR.ROUTEARRIVALPORT AS BOOKINGARRIVALPORT,",
                "       CASE WHEN BOOKING.VESSELTRANSFER = 'N' THEN BOOKING.VESSELTRANSFER",
                "            WHEN BOOKING.VESSELTRANSFER = 'Y' THEN BOOKING.VESSELTRANSFER || '-' ||                  BR_ARR.ROUTEARRIVALPORT ",
                "       END FINALTRANSFERPORT,",
                "       ACCOUNT.CUSTOMERNAME,",
                "       BOOKINGCRMENTITY.ID AS ACCOUNTID,",
                "       REPLACE( BOOKINGCRMENTITY.NAME, '%20', ' ' ) AS ACCOUNTNAME,",
                "       BOOKING.GROSSAMOUNT, ",
                "       BOOKING.PAID,",
                "       (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) AS OWING,",
                "       CASE WHEN (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) = 0 THEN 'N'",
                "            WHEN (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) <> 0 THEN 'Y'",
                "       END AS OWINGFLAG,",
                "       0 AS REBATEAMOUNT,",
                "       0 AS SURCHARGEAMOUNT,",
                "       SUM(BOOKINGFEE.AMOUNT) AS TOTALPRICE,  ",
                "       COUNT(*) AS QUANTITY, ",
                "       'N' as HOSTLEPRODUCT,",
                "       'N' as DGPRODUCT,",
                "       SUM(BOOKINGFEE.AMOUNT) AS UNITGROSSAMOUNT",
                "from",
                "(SELECT DISTINCT BOOKING.BOOKINGREFERENCE, BOOKING.BUSINESSUNITNAME,",
                "       (SELECT MAX(BOOKINGMAX.BOOKINGVERSION)",
                "          FROM EBOOKING.IBE_BOOKING BOOKINGMAX",
                "         WHERE BOOKINGMAX.BOOKINGREFERENCE = BOOKING.BOOKINGREFERENCE ) BOOKINGVERSION",
                "  FROM EBOOKING.IBE_BOOKING BOOKING",
                "WHERE BOOKING.BOOKINGSTATUS NOT IN ('OPTION')) VALID_MAX",
                "INNER JOIN EBOOKING.IBE_BOOKING BOOKING",
                "ON BOOKING.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                "AND BOOKING.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
                "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BOOKINGROUTE",
                "ON BOOKINGROUTE.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                "AND BOOKINGROUTE.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
                "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BR_DEP",
                "  ON VALID_MAX.BOOKINGREFERENCE = BR_DEP.BOOKINGREFERENCE",
                " AND VALID_MAX.BOOKINGVERSION = BR_DEP.BOOKINGVERSION",
                " AND BR_DEP.DEPARTUREDATE = (SELECT MIN(DEPARTUREDATE) FROM EBOOKING.IBE_BOOKINGROUTE WHERE BR_DEP.BOOKINGREFERENCE = BOOKINGREFERENCE AND BR_DEP.BOOKINGVERSION = BOOKINGVERSION)",
                "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BR_ARR",
                "  ON VALID_MAX.BOOKINGREFERENCE = BR_ARR.BOOKINGREFERENCE",
                " AND VALID_MAX.BOOKINGVERSION = BR_ARR.BOOKINGVERSION",
                " AND BR_ARR.DEPARTUREDATE = (SELECT MAX(DEPARTUREDATE) FROM EBOOKING.IBE_BOOKINGROUTE WHERE BR_ARR.BOOKINGREFERENCE = BOOKINGREFERENCE AND BR_ARR.BOOKINGVERSION = BOOKINGVERSION)",
                "INNER JOIN EBOOKING.IBE_BOOKINGFEE BOOKINGFEE",
                "ON BOOKINGFEE.BOOKINGREFERENCE =  BOOKINGROUTE.BOOKINGREFERENCE ",
                "AND BOOKINGFEE.BOOKINGVERSION =  BOOKINGROUTE.BOOKINGVERSION",
                "AND BOOKINGFEE.ROUTEINDEX = BOOKINGROUTE.ROUTEINDEX",
                "INNER JOIN EBOOKING.IBE_BOOKINGHOLDER BOOKINGHOLDER",
                "    ON BOOKINGHOLDER.CONTACTID = BOOKING.HOLDERCONTACTID",
                "   AND BOOKINGHOLDER.BOOKINGHOLDERVERSION = BOOKING.HOLDERVERSION",
                " LEFT JOIN EBOOKING.IBE_BOOKINGCRMENTITY BOOKINGCRMENTITY",
                "    ON BOOKINGCRMENTITY.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                "   AND BOOKINGCRMENTITY.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
                " INNER JOIN EBOOKING.ACC_ACCOUNT ACCOUNT",
                "    ON ACCOUNT.ACCOUNTID = BOOKING.ACCOUNTID ",
                "   AND ACCOUNT.STARTDATE = BOOKING.ACCOUNTSTARTDATE",
                "   AND ACCOUNT.ACCOUNTVERSION = BOOKING.ACCOUNTVERSION",
                "INNER JOIN EBOOKING.MSP_SAILING SAILING",
                "    ON SAILING.CODE = BOOKINGROUTE.SAILINGCODE  ",
                "   AND SAILING.STARTDATE = BOOKINGROUTE.SAILINGSTARTDATE",
                "   AND SAILING.HIDEINFORMATION = 'N'",
                "LEFT JOIN (SELECT BOOKINGREFERENCE, BOOKINGVERSION, DEFERREDPAYMENT FROM EBOOKING.IBE_BOOKINGPAYMENTHISTORY ",
                "           WHERE PAYMENTSTATUS <> 'FAILED' AND DEFERREDPAYMENT = 'Y' ",
                "           GROUP BY BOOKINGREFERENCE, BOOKINGVERSION, DEFERREDPAYMENT) BOOKINGPAYMENTHISTORY",
                "    ON BOOKINGPAYMENTHISTORY.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                "   AND BOOKINGPAYMENTHISTORY.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION ",
                "GROUP BY SAILING.CODE, SAILING.STARTDATE,",
                "BOOKINGROUTE.SAILINGCODE, ",
                "BOOKINGROUTE.ROUTEDEPARTUREPORT,  BOOKINGROUTE.DEPARTUREDATE, BOOKINGROUTE.ROUTEARRIVALPORT,  BOOKINGROUTE.ARRIVALDATE, VALID_MAX.BUSINESSUNITNAME,  VALID_MAX.BOOKINGREFERENCE, BOOKINGHOLDER.SURNAME, BOOKINGHOLDER.NAME, ",
                "BOOKINGHOLDER.PHONENUMBER, BOOKINGHOLDER.CUSTOMERID, BOOKING.AGENCYID, ",
                "BOOKING.SPECIALINSTRUCTIONS, BOOKING.BOOKINGSTATUS, BOOKINGPAYMENTHISTORY.DEFERREDPAYMENT, BOOKING.SALESCHANNEL, BOOKING.VESSELTRANSFER, BR_DEP.ROUTEDEPARTUREPORT,",
                "BR_ARR.ROUTEARRIVALPORT, ACCOUNT.CUSTOMERNAME, BOOKINGCRMENTITY.ID, BOOKINGCRMENTITY.NAME, BOOKING.PAID, BOOKING.GROSSAMOUNT"
              ],
              "dataSource": "Oracle scan.stg01.rac.bcferries.corp"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
                  "       SAILING.CODE || '-' || SAILING.STARTDATE || '-' || BOOKINGROUTE.ROUTEDEPARTUREPORT || '-' || BOOKINGROUTE.ROUTEARRIVALPORT as SAILING_PK,",
                  "       BOOKINGROUTE.ROUTEDEPARTUREPORT,",
                  "       BOOKINGROUTE.DEPARTUREDATE AS ROUTEDEPARTUREDATE,",
                  "       TO_CHAR(BOOKINGROUTE.DEPARTUREDATE,'DD-MON-YY HH24:MI') AS ROUTEDEPARTUREDATETIME,",
                  "       TO_CHAR(BOOKINGROUTE.DEPARTUREDATE,'HH24:MI') AS ROUTEDEPARTURETIME,",
                  "       BOOKINGROUTE.ROUTEARRIVALPORT,",
                  "       BOOKINGROUTE.ARRIVALDATE AS ROUTEARRIVALDATE,",
                  "       TO_CHAR(BOOKINGROUTE.ARRIVALDATE,'DD-MON-YY HH24:MI') AS ROUTEARRIVALDATETIME,",
                  "       TO_CHAR(BOOKINGROUTE.ARRIVALDATE,'HH24:MI') AS ROUTEARRIVALTIME,",
                  "       VALID_MAX.BUSINESSUNITNAME,",
                  "       VALID_MAX.BOOKINGREFERENCE,",
                  "       CASE WHEN BOOKING.SPECIALINSTRUCTIONS IS NULL THEN 'N'",
                  "            WHEN BOOKING.SPECIALINSTRUCTIONS IS NOT NULL THEN 'Y'",
                  "       END AS SPECIALINSTRUCTIONSFLAG,",
                  "       BOOKINGHOLDER.SURNAME AS BHSURNAME,",
                  "       BOOKINGHOLDER.NAME AS BHFIRSTNAME,",
                  "       BOOKINGHOLDER.PHONENUMBER AS BHTELEPHONE,",
                  "       BOOKINGHOLDER.CUSTOMERID,",
                  "       BOOKING.AGENCYID,",
                  "       BOOKING.SPECIALINSTRUCTIONS AS SPECIALINSTRUCTIONS,",
                  "       BOOKEDPRODUCT.PRODUCTTYPE,",
                  "       CASE WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'PASSENGER' THEN 1",
                  "            WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'VEHICLE' THEN 2",
                  "            WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'CABIN' THEN 3",
                  "            WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'CHAIR' THEN 4",
                  "            WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'ONBOARD' THEN 5",
                  "            WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'BIKE' THEN 6",
                  "       END AS PRODUCTTYPESORT,",
                  "       BOOKEDPRODUCT.PRODUCTCODE,",
                  "       BOOKEDPRODUCT.STANDBYPRODUCT, ",
                  "       SUM(BOOKEDPRODUCT.VEHICLELENGTH) AS VEHICLELENGTH,",
                  "       SUM(BOOKEDPRODUCT.VEHICLEWEIGHT) as VEHICLEWEIGHT,",
                  "       MAX(BOOKEDPRODUCT.VEHICLEWIDTH) as VEHICLEWIDTH,",
                  "       MAX(BOOKEDPRODUCT.VEHICLEHEIGHT) as VEHICLEHEIGHT,",
                  "       PRODUCTPASS.PRODUCTCODE AS PASSENGERCODE,",
                  "       BOOKEDPASS.TYPE,",
                  "       BOOKEDPASS.NAME AS PASSENGERFIRSTNAME,",
                  "       BOOKEDPASS.SURNAME AS PASSENGERSURNAME,",
                  "       CASE WHEN BOOKEDPASS.SURNAME IS NULL THEN '' ",
                  "            WHEN BOOKEDPASS.SURNAME IS NOT NULL THEN BOOKEDPASS.SURNAME || ', ' || BOOKEDPASS.NAME ",
                  "       END PASSENGERFULLNAME,",
                  "       ' ' AS REDEEMED,",
                  "       NVL(BOOKINGPAYMENTHISTORY.DEFERREDPAYMENT, 'N') AS DEFERREDPAYMENT,",
                  "       SUBSTR(BOOKING.SALESCHANNEL,1,3) AS SALESCHANNEL,",
                  "       BOOKING.VESSELTRANSFER,",
                  "       BR_DEP.ROUTEDEPARTUREPORT AS BOOKINGDEPARTUREPORT,",
                  "       BR_ARR.ROUTEARRIVALPORT AS BOOKINGARRIVALPORT,",
                  "       CASE WHEN BOOKING.VESSELTRANSFER = 'N' THEN BOOKING.VESSELTRANSFER",
                  "            WHEN BOOKING.VESSELTRANSFER = 'Y' THEN BOOKING.VESSELTRANSFER || '-' || BR_ARR.ROUTEARRIVALPORT ",
                  "       END FINALTRANSFERPORT,",
                  "       ACCOUNT.CUSTOMERNAME,",
                  "       BOOKINGCRMENTITY.ID AS ACCOUNTID,",
                  "       REPLACE( BOOKINGCRMENTITY.NAME, '%20', ' ' ) AS ACCOUNTNAME,",
                  "       BOOKING.GROSSAMOUNT, ",
                  "       BOOKING.PAID,",
                  "       (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) AS OWING,",
                  "       CASE WHEN (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) = 0 THEN 'N'",
                  "            WHEN (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) <> 0 THEN 'Y'",
                  "       END AS OWINGFLAG,",
                  "       CASE WHEN PRODUCTSURCHARGE.TYPE = 'REBATE' THEN SUM(-PRODUCTSURCHARGE.AMOUNT) ",
                  "            WHEN PRODUCTSURCHARGE.TYPE = 'SURCHARGE' THEN 0",
                  "       END REBATEAMOUNT,",
                  "       CASE WHEN PRODUCTSURCHARGE.TYPE = 'REBATE' THEN 0 ",
                  "            WHEN PRODUCTSURCHARGE.TYPE = 'SURCHARGE' THEN SUM(PRODUCTSURCHARGE.AMOUNT)",
                  "       END SURCHARGEAMOUNT,",
                  "       SUM(BOOKEDPRODUCT.UNITPRICE) AS TOTALPRICE, ",
                  "       SUM(BOOKEDPRODUCT.QUANTITY) AS QUANTITY,",
                  "       case when PRODUCTSURCHARGE.CODE = 'HOSTLE' then 'Y' else 'N' end as HOSTLEPRODUCT,",
                  "       case when BOOKEDPRODUCT.PRODUCTCODE = 'DG' then 'Y' else 'N' end as DGPRODUCT,",
                  "       SUM(BOOKEDPRODUCT.TOTALNETUNITPRICE) AS UNITGROSSAMOUNT",
                  "",
                  "FROM",
                  "(SELECT DISTINCT BOOKING.BOOKINGREFERENCE, BOOKING.BUSINESSUNITNAME,",
                  "       (SELECT MAX(BOOKINGMAX.BOOKINGVERSION)",
                  "          FROM EBOOKING.IBE_BOOKING BOOKINGMAX",
                  "         WHERE BOOKINGMAX.BOOKINGREFERENCE = BOOKING.BOOKINGREFERENCE ) BOOKINGVERSION",
                  "  FROM EBOOKING.IBE_BOOKING BOOKING",
                  " WHERE BOOKING.BOOKINGSTATUS NOT IN ('CANCELLED', 'OPTION')) VALID_MAX",
                  " INNER JOIN EBOOKING.IBE_BOOKING BOOKING",
                  "    ON BOOKING.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                  "   AND BOOKING.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
                  " INNER JOIN EBOOKING.IBE_BOOKEDPRODUCT BOOKEDPRODUCT",
                  "    ON BOOKEDPRODUCT.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                  "   AND BOOKEDPRODUCT.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
                  "INNER JOIN EBOOKING.IBE_BOOKINGHOLDER BOOKINGHOLDER",
                  "    ON BOOKINGHOLDER.CONTACTID = BOOKING.HOLDERCONTACTID",
                  "   AND BOOKINGHOLDER.BOOKINGHOLDERVERSION = BOOKING.HOLDERVERSION",
                  "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BOOKINGROUTE",
                  "    ON BOOKINGROUTE.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                  "   AND BOOKINGROUTE.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
                  "   AND BOOKINGROUTE.SAILINGCODE =  BOOKEDPRODUCT.ROUTESAILINGCODE ",
                  "   AND BOOKINGROUTE.SAILINGSTARTDATE =  BOOKEDPRODUCT.ROUTESAILINGSTARTDATE ",
                  "   AND BOOKINGROUTE.ROUTEDEPARTUREPORT = BOOKEDPRODUCT.ROUTEDEPARTUREPORT",
                  "   AND BOOKINGROUTE.ROUTEARRIVALPORT = BOOKEDPRODUCT.ROUTEARRIVALPORT",
                  "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BR_DEP",
                  "  ON VALID_MAX.BOOKINGREFERENCE = BR_DEP.BOOKINGREFERENCE",
                  " AND VALID_MAX.BOOKINGVERSION = BR_DEP.BOOKINGVERSION",
                  " AND BR_DEP.DEPARTUREDATE = (SELECT MIN(DEPARTUREDATE) FROM EBOOKING.IBE_BOOKINGROUTE WHERE BR_DEP.BOOKINGREFERENCE = BOOKINGREFERENCE AND BR_DEP.BOOKINGVERSION = BOOKINGVERSION)",
                  "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BR_ARR",
                  "  ON VALID_MAX.BOOKINGREFERENCE = BR_ARR.BOOKINGREFERENCE",
                  " AND VALID_MAX.BOOKINGVERSION = BR_ARR.BOOKINGVERSION",
                  " AND BR_ARR.DEPARTUREDATE = (SELECT MAX(DEPARTUREDATE) FROM EBOOKING.IBE_BOOKINGROUTE WHERE BR_ARR.BOOKINGREFERENCE = BOOKINGREFERENCE AND BR_ARR.BOOKINGVERSION = BOOKINGVERSION)",
                  "LEFT OUTER JOIN EBOOKING.IBE_BOOKEDPRODUCTSURCHARGE PRODUCTSURCHARGE",
                  "    ON PRODUCTSURCHARGE.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                  "   AND PRODUCTSURCHARGE.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
                  "   AND PRODUCTSURCHARGE.ROUTESAILINGCODE =  BOOKEDPRODUCT.ROUTESAILINGCODE ",
                  "   AND PRODUCTSURCHARGE.ROUTESAILINGSTARTDATE =  BOOKEDPRODUCT.ROUTESAILINGSTARTDATE ",
                  "   AND PRODUCTSURCHARGE.ROUTEDEPARTUREPORT = BOOKEDPRODUCT.ROUTEDEPARTUREPORT",
                  "   AND PRODUCTSURCHARGE.ROUTEARRIVALPORT = BOOKEDPRODUCT.ROUTEARRIVALPORT",
                  "   AND PRODUCTSURCHARGE.PRODUCTCODE =  BOOKEDPRODUCT.PRODUCTCODE ",
                  "   AND PRODUCTSURCHARGE.PRODUCTSTARTDATE = BOOKEDPRODUCT.PRODUCTSTARTDATE",
                  "   AND PRODUCTSURCHARGE.PRODUCTINDEX = BOOKEDPRODUCT.PRODUCTINDEX",
                  " INNER JOIN EBOOKING.CHI_PRODUCTSTATUS PRODUCTSTATUS",
                  "    ON PRODUCTSTATUS.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                  "   AND PRODUCTSTATUS.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
                  "   AND PRODUCTSTATUS.ROUTESAILINGCODE =  BOOKEDPRODUCT.ROUTESAILINGCODE ",
                  "   AND PRODUCTSTATUS.ROUTESAILINGSTARTDATE =  BOOKEDPRODUCT.ROUTESAILINGSTARTDATE ",
                  "   AND PRODUCTSTATUS.ROUTEDEPARTUREPORT = BOOKEDPRODUCT.ROUTEDEPARTUREPORT",
                  "   AND PRODUCTSTATUS.ROUTEARRIVALPORT = BOOKEDPRODUCT.ROUTEARRIVALPORT",
                  "   AND PRODUCTSTATUS.PRODUCTCODE =  BOOKEDPRODUCT.PRODUCTCODE ",
                  "   AND PRODUCTSTATUS.PRODUCTSTARTDATE = BOOKEDPRODUCT.PRODUCTSTARTDATE",
                  "   AND PRODUCTSTATUS.PRODUCTINDEX = BOOKEDPRODUCT.PRODUCTINDEX",
                  "   AND PRODUCTSTATUS.ENDDATE = '99991231000000'",
                  "   AND PRODUCTSTATUS.CHECKINSTATUS NOT IN ('CANCELLED', 'NO SHOW')",
                  "LEFT OUTER JOIN EBOOKING.IBE_PRODUCTPASSENGER PRODUCTPASS",
                  "      ON PRODUCTPASS.PRODUCTBOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                  "   AND PRODUCTPASS.PRODUCTBOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
                  "   AND PRODUCTPASS.PRODUCTROUTESAILINGCODE =  BOOKEDPRODUCT.ROUTESAILINGCODE ",
                  "   AND PRODUCTPASS.PRODUCTROUTESAILINGSTARTDATE =  BOOKEDPRODUCT.ROUTESAILINGSTARTDATE ",
                  "   AND PRODUCTPASS.PRODUCTROUTEDEPARTUREPORT = BOOKEDPRODUCT.ROUTEDEPARTUREPORT",
                  "   AND PRODUCTPASS.PRODUCTROUTEARRIVALPORT = BOOKEDPRODUCT.ROUTEARRIVALPORT",
                  "   AND PRODUCTPASS.PRODUCTCODE =  BOOKEDPRODUCT.PRODUCTCODE ",
                  "   AND PRODUCTPASS.PRODUCTSTARTDATE = BOOKEDPRODUCT.PRODUCTSTARTDATE",
                  "   AND PRODUCTPASS.PRODUCTINDEX = BOOKEDPRODUCT.PRODUCTINDEX",
                  "   AND PRODUCTPASS.PRODUCTTYPE = 'PASSENGER'",
                  "LEFT OUTER JOIN EBOOKING.IBE_BOOKEDPASSENGER BOOKEDPASS",
                  "      ON BOOKEDPASS.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                  "   AND BOOKEDPASS.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION ",
                  "   AND BOOKEDPASS.SAILINGCODE = PRODUCTPASS.PASSENGERSAILINGCODE  ",
                  "   AND BOOKEDPASS.SAILINGSTARTDATE = PRODUCTPASS.PASSENGERSAILINGSTARTDATE  ",
                  "   AND BOOKEDPASS.ROUTEDEPARTUREPORT = PRODUCTPASS.PASSENGERROUTEDEPARTUREPORT",
                  "   AND BOOKEDPASS.ROUTEARRIVALPORT = PRODUCTPASS.PASSENGERROUTEARRIVALPORT ",
                  "   AND BOOKEDPASS.PASSENGERINDEX = PRODUCTPASS.PASSENGERINDEX ",
                  " LEFT JOIN EBOOKING.IBE_BOOKINGCRMENTITY BOOKINGCRMENTITY",
                  "    ON BOOKINGCRMENTITY.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                  "   AND BOOKINGCRMENTITY.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
                  "INNER JOIN EBOOKING.ACC_ACCOUNT ACCOUNT",
                  "    ON ACCOUNT.ACCOUNTID = BOOKING.ACCOUNTID ",
                  "   AND ACCOUNT.STARTDATE = BOOKING.ACCOUNTSTARTDATE",
                  "   AND ACCOUNT.ACCOUNTVERSION = BOOKING.ACCOUNTVERSION",
                  " INNER JOIN EBOOKING.MSP_SAILING SAILING",
                  "    ON SAILING.CODE = BOOKINGROUTE.SAILINGCODE  ",
                  "   AND SAILING.STARTDATE = BOOKINGROUTE.SAILINGSTARTDATE",
                  "   AND SAILING.HIDEINFORMATION = 'N'",
                  "  LEFT JOIN (SELECT BOOKINGREFERENCE, BOOKINGVERSION, DEFERREDPAYMENT FROM EBOOKING.IBE_BOOKINGPAYMENTHISTORY ",
                  "               WHERE PAYMENTSTATUS <> 'FAILED' AND DEFERREDPAYMENT = 'Y'          ",
                  "               GROUP BY BOOKINGREFERENCE, BOOKINGVERSION, DEFERREDPAYMENT) BOOKINGPAYMENTHISTORY",
                  "    ON BOOKINGPAYMENTHISTORY.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                  "   AND BOOKINGPAYMENTHISTORY.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION ",
                  "   GROUP BY PRODUCTSURCHARGE.CODE,",
                  "SAILING.CODE, SAILING.STARTDATE, BOOKINGROUTE.SAILINGCODE, BOOKINGROUTE.ROUTEDEPARTUREPORT,  BOOKINGROUTE.DEPARTUREDATE, BOOKINGROUTE.ROUTEARRIVALPORT,  BOOKINGROUTE.ARRIVALDATE, VALID_MAX.BUSINESSUNITNAME,        VALID_MAX.BOOKINGREFERENCE, BOOKINGHOLDER.SURNAME, BOOKINGHOLDER.NAME, BOOKINGHOLDER.PHONENUMBER, BOOKINGHOLDER.CUSTOMERID, BOOKING.AGENCYID, BOOKING.SPECIALINSTRUCTIONS, BOOKEDPRODUCT.PRODUCTTYPE, BOOKEDPRODUCT.PRODUCTCODE, BOOKEDPRODUCT.STANDBYPRODUCT, PRODUCTPASS.PRODUCTCODE, BOOKEDPASS.TYPE, BOOKEDPASS.NAME,        BOOKEDPASS.SURNAME, BOOKINGPAYMENTHISTORY.DEFERREDPAYMENT, BOOKING.SALESCHANNEL, BOOKING.VESSELTRANSFER, BR_DEP.ROUTEDEPARTUREPORT, BR_ARR.ROUTEARRIVALPORT, ACCOUNT.CUSTOMERNAME, BOOKINGCRMENTITY.ID, BOOKINGCRMENTITY.NAME, PRODUCTSURCHARGE.TYPE, BOOKING.PAID, BOOKING.GROSSAMOUNT",
                  "union",
                  "SELECT ",
                  "       SAILING.CODE || '-' || SAILING.STARTDATE || '-' || BOOKINGROUTE.ROUTEDEPARTUREPORT || '-' || BOOKINGROUTE.ROUTEARRIVALPORT as SAILING_PK,",
                  "       BOOKINGROUTE.ROUTEDEPARTUREPORT,",
                  "       BOOKINGROUTE.DEPARTUREDATE AS ROUTEDEPARTUREDATE,",
                  "       TO_CHAR(BOOKINGROUTE.DEPARTUREDATE,'DD-MON-YY HH24:MI') AS ROUTEDEPARTUREDATETIME,",
                  "       TO_CHAR(BOOKINGROUTE.DEPARTUREDATE,'HH24:MI') AS ROUTEDEPARTURETIME,",
                  " BOOKINGROUTE.ROUTEARRIVALPORT,",
                  "       BOOKINGROUTE.ARRIVALDATE AS ROUTEARRIVALDATE,",
                  "       TO_CHAR(BOOKINGROUTE.ARRIVALDATE,'DD-MON-YY HH24:MI') AS ROUTEARRIVALDATETIME,",
                  "       TO_CHAR(BOOKINGROUTE.ARRIVALDATE,'HH24:MI') AS ROUTEARRIVALTIME,",
                  "VALID_MAX.BUSINESSUNITNAME,",
                  "       VALID_MAX.BOOKINGREFERENCE,",
                  "       CASE WHEN BOOKING.SPECIALINSTRUCTIONS IS NULL THEN 'N'",
                  "            WHEN BOOKING.SPECIALINSTRUCTIONS IS NOT NULL THEN 'Y'",
                  "       END AS SPECIALINSTRUCTIONSFLAG,",
                  "       BOOKINGHOLDER.SURNAME AS BHSURNAME,",
                  "       BOOKINGHOLDER.NAME AS BHFIRSTNAME,",
                  "       BOOKINGHOLDER.PHONENUMBER AS BHTELEPHONE,",
                  "       BOOKINGHOLDER.CUSTOMERID,",
                  "       BOOKING.AGENCYID,",
                  "       BOOKING.SPECIALINSTRUCTIONS AS  SPECIALINSTRUCTIONS,",
                  "       'FEE' AS PRODUCTTYPE, ",
                  "       7 AS PRODUCTTYPESORT,",
                  "       'FEE' AS PRODUCTCODE,",
                  "       'N' AS STANDBYPRODUCT,",
                  "       NULL AS VEHICLELENGTH,",
                  "       NULL as VEHICLEWEIGHT,",
                  "       NULL as VEHICLEWIDTH,",
                  "       NULL as VEHICLEHEIGHT,",
                  "       NULL AS PASSENGERCODE,      ",
                  "       NULL AS TYPE,               ",
                  "       NULL AS PASSENGERFIRSTNAME, ",
                  "       NULL AS PASSENGERSURNAME,   ",
                  "       NULL AS PASSENGERFULLNAME,",
                  "       ' ' AS REDEEMED,",
                  "       NVL(BOOKINGPAYMENTHISTORY.DEFERREDPAYMENT, 'N') AS DEFERREDPAYMENT,",
                  "       SUBSTR(BOOKING.SALESCHANNEL,1,3) AS SALESCHANNEL,",
                  "       BOOKING.VESSELTRANSFER,",
                  "       BR_DEP.ROUTEDEPARTUREPORT AS BOOKINGDEPARTUREPORT,",
                  "       BR_ARR.ROUTEARRIVALPORT AS BOOKINGARRIVALPORT,",
                  "       CASE WHEN BOOKING.VESSELTRANSFER = 'N' THEN BOOKING.VESSELTRANSFER",
                  "            WHEN BOOKING.VESSELTRANSFER = 'Y' THEN BOOKING.VESSELTRANSFER || '-' ||                  BR_ARR.ROUTEARRIVALPORT ",
                  "       END FINALTRANSFERPORT,",
                  "       ACCOUNT.CUSTOMERNAME,",
                  "       BOOKINGCRMENTITY.ID AS ACCOUNTID,",
                  "       REPLACE( BOOKINGCRMENTITY.NAME, '%20', ' ' ) AS ACCOUNTNAME,",
                  "       BOOKING.GROSSAMOUNT, ",
                  "       BOOKING.PAID,",
                  "       (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) AS OWING,",
                  "       CASE WHEN (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) = 0 THEN 'N'",
                  "            WHEN (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) <> 0 THEN 'Y'",
                  "       END AS OWINGFLAG,",
                  "       0 AS REBATEAMOUNT,",
                  "       0 AS SURCHARGEAMOUNT,",
                  "       SUM(BOOKINGFEE.AMOUNT) AS TOTALPRICE,  ",
                  "       COUNT(*) AS QUANTITY, ",
                  "       'N' as HOSTLEPRODUCT,",
                  "       'N' as DGPRODUCT,",
                  "       SUM(BOOKINGFEE.AMOUNT) AS UNITGROSSAMOUNT",
                  "from",
                  "(SELECT DISTINCT BOOKING.BOOKINGREFERENCE, BOOKING.BUSINESSUNITNAME,",
                  "       (SELECT MAX(BOOKINGMAX.BOOKINGVERSION)",
                  "          FROM EBOOKING.IBE_BOOKING BOOKINGMAX",
                  "         WHERE BOOKINGMAX.BOOKINGREFERENCE = BOOKING.BOOKINGREFERENCE ) BOOKINGVERSION",
                  "  FROM EBOOKING.IBE_BOOKING BOOKING",
                  "WHERE BOOKING.BOOKINGSTATUS NOT IN ('OPTION')) VALID_MAX",
                  "INNER JOIN EBOOKING.IBE_BOOKING BOOKING",
                  "ON BOOKING.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                  "AND BOOKING.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
                  "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BOOKINGROUTE",
                  "ON BOOKINGROUTE.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                  "AND BOOKINGROUTE.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
                  "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BR_DEP",
                  "  ON VALID_MAX.BOOKINGREFERENCE = BR_DEP.BOOKINGREFERENCE",
                  " AND VALID_MAX.BOOKINGVERSION = BR_DEP.BOOKINGVERSION",
                  " AND BR_DEP.DEPARTUREDATE = (SELECT MIN(DEPARTUREDATE) FROM EBOOKING.IBE_BOOKINGROUTE WHERE BR_DEP.BOOKINGREFERENCE = BOOKINGREFERENCE AND BR_DEP.BOOKINGVERSION = BOOKINGVERSION)",
                  "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BR_ARR",
                  "  ON VALID_MAX.BOOKINGREFERENCE = BR_ARR.BOOKINGREFERENCE",
                  " AND VALID_MAX.BOOKINGVERSION = BR_ARR.BOOKINGVERSION",
                  " AND BR_ARR.DEPARTUREDATE = (SELECT MAX(DEPARTUREDATE) FROM EBOOKING.IBE_BOOKINGROUTE WHERE BR_ARR.BOOKINGREFERENCE = BOOKINGREFERENCE AND BR_ARR.BOOKINGVERSION = BOOKINGVERSION)",
                  "INNER JOIN EBOOKING.IBE_BOOKINGFEE BOOKINGFEE",
                  "ON BOOKINGFEE.BOOKINGREFERENCE =  BOOKINGROUTE.BOOKINGREFERENCE ",
                  "AND BOOKINGFEE.BOOKINGVERSION =  BOOKINGROUTE.BOOKINGVERSION",
                  "AND BOOKINGFEE.ROUTEINDEX = BOOKINGROUTE.ROUTEINDEX",
                  "INNER JOIN EBOOKING.IBE_BOOKINGHOLDER BOOKINGHOLDER",
                  "    ON BOOKINGHOLDER.CONTACTID = BOOKING.HOLDERCONTACTID",
                  "   AND BOOKINGHOLDER.BOOKINGHOLDERVERSION = BOOKING.HOLDERVERSION",
                  " LEFT JOIN EBOOKING.IBE_BOOKINGCRMENTITY BOOKINGCRMENTITY",
                  "    ON BOOKINGCRMENTITY.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                  "   AND BOOKINGCRMENTITY.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
                  " INNER JOIN EBOOKING.ACC_ACCOUNT ACCOUNT",
                  "    ON ACCOUNT.ACCOUNTID = BOOKING.ACCOUNTID ",
                  "   AND ACCOUNT.STARTDATE = BOOKING.ACCOUNTSTARTDATE",
                  "   AND ACCOUNT.ACCOUNTVERSION = BOOKING.ACCOUNTVERSION",
                  "INNER JOIN EBOOKING.MSP_SAILING SAILING",
                  "    ON SAILING.CODE = BOOKINGROUTE.SAILINGCODE  ",
                  "   AND SAILING.STARTDATE = BOOKINGROUTE.SAILINGSTARTDATE",
                  "   AND SAILING.HIDEINFORMATION = 'N'",
                  "LEFT JOIN (SELECT BOOKINGREFERENCE, BOOKINGVERSION, DEFERREDPAYMENT FROM EBOOKING.IBE_BOOKINGPAYMENTHISTORY ",
                  "           WHERE PAYMENTSTATUS <> 'FAILED' AND DEFERREDPAYMENT = 'Y' ",
                  "           GROUP BY BOOKINGREFERENCE, BOOKINGVERSION, DEFERREDPAYMENT) BOOKINGPAYMENTHISTORY",
                  "    ON BOOKINGPAYMENTHISTORY.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
                  "   AND BOOKINGPAYMENTHISTORY.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION ",
                  "GROUP BY SAILING.CODE, SAILING.STARTDATE,",
                  "BOOKINGROUTE.SAILINGCODE, ",
                  "BOOKINGROUTE.ROUTEDEPARTUREPORT,  BOOKINGROUTE.DEPARTUREDATE, BOOKINGROUTE.ROUTEARRIVALPORT,  BOOKINGROUTE.ARRIVALDATE, VALID_MAX.BUSINESSUNITNAME,  VALID_MAX.BOOKINGREFERENCE, BOOKINGHOLDER.SURNAME, BOOKINGHOLDER.NAME, ",
                  "BOOKINGHOLDER.PHONENUMBER, BOOKINGHOLDER.CUSTOMERID, BOOKING.AGENCYID, ",
                  "BOOKING.SPECIALINSTRUCTIONS, BOOKING.BOOKINGSTATUS, BOOKINGPAYMENTHISTORY.DEFERREDPAYMENT, BOOKING.SALESCHANNEL, BOOKING.VESSELTRANSFER, BR_DEP.ROUTEDEPARTUREPORT,",
                  "BR_ARR.ROUTEARRIVALPORT, ACCOUNT.CUSTOMERNAME, BOOKINGCRMENTITY.ID, BOOKINGCRMENTITY.NAME, BOOKING.PAID, BOOKING.GROSSAMOUNT</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "TotalAmount",
            "expression": "sum(Bookings[TOTALPRICE]) + sum(Bookings[REBATEAMOUNT]) + sum(Bookings[SURCHARGEAMOUNT])"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ",
              "       SAILING.CODE || '-' || SAILING.STARTDATE || '-' || BOOKINGROUTE.ROUTEDEPARTUREPORT || '-' || BOOKINGROUTE.ROUTEARRIVALPORT as SAILING_PK,",
              "       BOOKINGROUTE.ROUTEDEPARTUREPORT,",
              "       BOOKINGROUTE.DEPARTUREDATE AS ROUTEDEPARTUREDATE,",
              "       TO_CHAR(BOOKINGROUTE.DEPARTUREDATE,'DD-MON-YY HH24:MI') AS ROUTEDEPARTUREDATETIME,",
              "       TO_CHAR(BOOKINGROUTE.DEPARTUREDATE,'HH24:MI') AS ROUTEDEPARTURETIME,",
              "       BOOKINGROUTE.ROUTEARRIVALPORT,",
              "       BOOKINGROUTE.ARRIVALDATE AS ROUTEARRIVALDATE,",
              "       TO_CHAR(BOOKINGROUTE.ARRIVALDATE,'DD-MON-YY HH24:MI') AS ROUTEARRIVALDATETIME,",
              "       TO_CHAR(BOOKINGROUTE.ARRIVALDATE,'HH24:MI') AS ROUTEARRIVALTIME,",
              "       VALID_MAX.BUSINESSUNITNAME,",
              "       VALID_MAX.BOOKINGREFERENCE,",
              "       CASE WHEN BOOKING.SPECIALINSTRUCTIONS IS NULL THEN 'N'",
              "            WHEN BOOKING.SPECIALINSTRUCTIONS IS NOT NULL THEN 'Y'",
              "       END AS SPECIALINSTRUCTIONSFLAG,",
              "       BOOKINGHOLDER.SURNAME AS BHSURNAME,",
              "       BOOKINGHOLDER.NAME AS BHFIRSTNAME,",
              "       BOOKINGHOLDER.PHONENUMBER AS BHTELEPHONE,",
              "       BOOKINGHOLDER.CUSTOMERID,",
              "       BOOKING.AGENCYID,",
              "       BOOKING.SPECIALINSTRUCTIONS AS SPECIALINSTRUCTIONS,",
              "       BOOKEDPRODUCT.PRODUCTTYPE,",
              "       CASE WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'PASSENGER' THEN 1",
              "            WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'VEHICLE' THEN 2",
              "            WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'CABIN' THEN 3",
              "            WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'CHAIR' THEN 4",
              "            WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'ONBOARD' THEN 5",
              "            WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'BIKE' THEN 6",
              "       END AS PRODUCTTYPESORT,",
              "       BOOKEDPRODUCT.PRODUCTCODE,",
              "       BOOKEDPRODUCT.STANDBYPRODUCT, ",
              "       SUM(BOOKEDPRODUCT.VEHICLELENGTH) AS VEHICLELENGTH,",
              "       SUM(BOOKEDPRODUCT.VEHICLEWEIGHT) as VEHICLEWEIGHT,",
              "       MAX(BOOKEDPRODUCT.VEHICLEWIDTH) as VEHICLEWIDTH,",
              "       MAX(BOOKEDPRODUCT.VEHICLEHEIGHT) as VEHICLEHEIGHT,",
              "       PRODUCTPASS.PRODUCTCODE AS PASSENGERCODE,",
              "       BOOKEDPASS.TYPE,",
              "       BOOKEDPASS.NAME AS PASSENGERFIRSTNAME,",
              "       BOOKEDPASS.SURNAME AS PASSENGERSURNAME,",
              "       CASE WHEN BOOKEDPASS.SURNAME IS NULL THEN '' ",
              "            WHEN BOOKEDPASS.SURNAME IS NOT NULL THEN BOOKEDPASS.SURNAME || ', ' || BOOKEDPASS.NAME ",
              "       END PASSENGERFULLNAME,",
              "       ' ' AS REDEEMED,",
              "       NVL(BOOKINGPAYMENTHISTORY.DEFERREDPAYMENT, 'N') AS DEFERREDPAYMENT,",
              "       SUBSTR(BOOKING.SALESCHANNEL,1,3) AS SALESCHANNEL,",
              "       BOOKING.VESSELTRANSFER,",
              "       BR_DEP.ROUTEDEPARTUREPORT AS BOOKINGDEPARTUREPORT,",
              "       BR_ARR.ROUTEARRIVALPORT AS BOOKINGARRIVALPORT,",
              "       CASE WHEN BOOKING.VESSELTRANSFER = 'N' THEN BOOKING.VESSELTRANSFER",
              "            WHEN BOOKING.VESSELTRANSFER = 'Y' THEN BOOKING.VESSELTRANSFER || '-' || BR_ARR.ROUTEARRIVALPORT ",
              "       END FINALTRANSFERPORT,",
              "       ACCOUNT.CUSTOMERNAME,",
              "       BOOKINGCRMENTITY.ID AS ACCOUNTID,",
              "       REPLACE( BOOKINGCRMENTITY.NAME, '%20', ' ' ) AS ACCOUNTNAME,",
              "       BOOKING.GROSSAMOUNT, ",
              "       BOOKING.PAID,",
              "       (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) AS OWING,",
              "       CASE WHEN (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) = 0 THEN 'N'",
              "            WHEN (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) <> 0 THEN 'Y'",
              "       END AS OWINGFLAG,",
              "       CASE WHEN PRODUCTSURCHARGE.TYPE = 'REBATE' THEN SUM(-PRODUCTSURCHARGE.AMOUNT) ",
              "            WHEN PRODUCTSURCHARGE.TYPE = 'SURCHARGE' THEN 0",
              "       END REBATEAMOUNT,",
              "       CASE WHEN PRODUCTSURCHARGE.TYPE = 'REBATE' THEN 0 ",
              "            WHEN PRODUCTSURCHARGE.TYPE = 'SURCHARGE' THEN SUM(PRODUCTSURCHARGE.AMOUNT)",
              "       END SURCHARGEAMOUNT,",
              "       SUM(BOOKEDPRODUCT.UNITPRICE) AS TOTALPRICE, ",
              "       SUM(BOOKEDPRODUCT.QUANTITY) AS QUANTITY,",
              "       case when PRODUCTSURCHARGE.CODE = 'HOSTLE' then 'Y' else 'N' end as HOSTLEPRODUCT,",
              "       case when BOOKEDPRODUCT.PRODUCTCODE = 'DG' then 'Y' else 'N' end as DGPRODUCT,",
              "       SUM(BOOKEDPRODUCT.TOTALNETUNITPRICE) AS UNITGROSSAMOUNT",
              "",
              "FROM",
              "(SELECT DISTINCT BOOKING.BOOKINGREFERENCE, BOOKING.BUSINESSUNITNAME,",
              "       (SELECT MAX(BOOKINGMAX.BOOKINGVERSION)",
              "          FROM EBOOKING.IBE_BOOKING BOOKINGMAX",
              "         WHERE BOOKINGMAX.BOOKINGREFERENCE = BOOKING.BOOKINGREFERENCE ) BOOKINGVERSION",
              "  FROM EBOOKING.IBE_BOOKING BOOKING",
              " WHERE BOOKING.BOOKINGSTATUS NOT IN ('CANCELLED', 'OPTION')) VALID_MAX",
              " INNER JOIN EBOOKING.IBE_BOOKING BOOKING",
              "    ON BOOKING.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "   AND BOOKING.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
              " INNER JOIN EBOOKING.IBE_BOOKEDPRODUCT BOOKEDPRODUCT",
              "    ON BOOKEDPRODUCT.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "   AND BOOKEDPRODUCT.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
              "INNER JOIN EBOOKING.IBE_BOOKINGHOLDER BOOKINGHOLDER",
              "    ON BOOKINGHOLDER.CONTACTID = BOOKING.HOLDERCONTACTID",
              "   AND BOOKINGHOLDER.BOOKINGHOLDERVERSION = BOOKING.HOLDERVERSION",
              "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BOOKINGROUTE",
              "    ON BOOKINGROUTE.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "   AND BOOKINGROUTE.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
              "   AND BOOKINGROUTE.SAILINGCODE =  BOOKEDPRODUCT.ROUTESAILINGCODE ",
              "   AND BOOKINGROUTE.SAILINGSTARTDATE =  BOOKEDPRODUCT.ROUTESAILINGSTARTDATE ",
              "   AND BOOKINGROUTE.ROUTEDEPARTUREPORT = BOOKEDPRODUCT.ROUTEDEPARTUREPORT",
              "   AND BOOKINGROUTE.ROUTEARRIVALPORT = BOOKEDPRODUCT.ROUTEARRIVALPORT",
              "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BR_DEP",
              "  ON VALID_MAX.BOOKINGREFERENCE = BR_DEP.BOOKINGREFERENCE",
              " AND VALID_MAX.BOOKINGVERSION = BR_DEP.BOOKINGVERSION",
              " AND BR_DEP.DEPARTUREDATE = (SELECT MIN(DEPARTUREDATE) FROM EBOOKING.IBE_BOOKINGROUTE WHERE BR_DEP.BOOKINGREFERENCE = BOOKINGREFERENCE AND BR_DEP.BOOKINGVERSION = BOOKINGVERSION)",
              "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BR_ARR",
              "  ON VALID_MAX.BOOKINGREFERENCE = BR_ARR.BOOKINGREFERENCE",
              " AND VALID_MAX.BOOKINGVERSION = BR_ARR.BOOKINGVERSION",
              " AND BR_ARR.DEPARTUREDATE = (SELECT MAX(DEPARTUREDATE) FROM EBOOKING.IBE_BOOKINGROUTE WHERE BR_ARR.BOOKINGREFERENCE = BOOKINGREFERENCE AND BR_ARR.BOOKINGVERSION = BOOKINGVERSION)",
              "LEFT OUTER JOIN EBOOKING.IBE_BOOKEDPRODUCTSURCHARGE PRODUCTSURCHARGE",
              "    ON PRODUCTSURCHARGE.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "   AND PRODUCTSURCHARGE.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
              "   AND PRODUCTSURCHARGE.ROUTESAILINGCODE =  BOOKEDPRODUCT.ROUTESAILINGCODE ",
              "   AND PRODUCTSURCHARGE.ROUTESAILINGSTARTDATE =  BOOKEDPRODUCT.ROUTESAILINGSTARTDATE ",
              "   AND PRODUCTSURCHARGE.ROUTEDEPARTUREPORT = BOOKEDPRODUCT.ROUTEDEPARTUREPORT",
              "   AND PRODUCTSURCHARGE.ROUTEARRIVALPORT = BOOKEDPRODUCT.ROUTEARRIVALPORT",
              "   AND PRODUCTSURCHARGE.PRODUCTCODE =  BOOKEDPRODUCT.PRODUCTCODE ",
              "   AND PRODUCTSURCHARGE.PRODUCTSTARTDATE = BOOKEDPRODUCT.PRODUCTSTARTDATE",
              "   AND PRODUCTSURCHARGE.PRODUCTINDEX = BOOKEDPRODUCT.PRODUCTINDEX",
              " INNER JOIN EBOOKING.CHI_PRODUCTSTATUS PRODUCTSTATUS",
              "    ON PRODUCTSTATUS.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "   AND PRODUCTSTATUS.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
              "   AND PRODUCTSTATUS.ROUTESAILINGCODE =  BOOKEDPRODUCT.ROUTESAILINGCODE ",
              "   AND PRODUCTSTATUS.ROUTESAILINGSTARTDATE =  BOOKEDPRODUCT.ROUTESAILINGSTARTDATE ",
              "   AND PRODUCTSTATUS.ROUTEDEPARTUREPORT = BOOKEDPRODUCT.ROUTEDEPARTUREPORT",
              "   AND PRODUCTSTATUS.ROUTEARRIVALPORT = BOOKEDPRODUCT.ROUTEARRIVALPORT",
              "   AND PRODUCTSTATUS.PRODUCTCODE =  BOOKEDPRODUCT.PRODUCTCODE ",
              "   AND PRODUCTSTATUS.PRODUCTSTARTDATE = BOOKEDPRODUCT.PRODUCTSTARTDATE",
              "   AND PRODUCTSTATUS.PRODUCTINDEX = BOOKEDPRODUCT.PRODUCTINDEX",
              "   AND PRODUCTSTATUS.ENDDATE = '99991231000000'",
              "   AND PRODUCTSTATUS.CHECKINSTATUS NOT IN ('CANCELLED', 'NO SHOW')",
              "LEFT OUTER JOIN EBOOKING.IBE_PRODUCTPASSENGER PRODUCTPASS",
              "      ON PRODUCTPASS.PRODUCTBOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "   AND PRODUCTPASS.PRODUCTBOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
              "   AND PRODUCTPASS.PRODUCTROUTESAILINGCODE =  BOOKEDPRODUCT.ROUTESAILINGCODE ",
              "   AND PRODUCTPASS.PRODUCTROUTESAILINGSTARTDATE =  BOOKEDPRODUCT.ROUTESAILINGSTARTDATE ",
              "   AND PRODUCTPASS.PRODUCTROUTEDEPARTUREPORT = BOOKEDPRODUCT.ROUTEDEPARTUREPORT",
              "   AND PRODUCTPASS.PRODUCTROUTEARRIVALPORT = BOOKEDPRODUCT.ROUTEARRIVALPORT",
              "   AND PRODUCTPASS.PRODUCTCODE =  BOOKEDPRODUCT.PRODUCTCODE ",
              "   AND PRODUCTPASS.PRODUCTSTARTDATE = BOOKEDPRODUCT.PRODUCTSTARTDATE",
              "   AND PRODUCTPASS.PRODUCTINDEX = BOOKEDPRODUCT.PRODUCTINDEX",
              "   AND PRODUCTPASS.PRODUCTTYPE = 'PASSENGER'",
              "LEFT OUTER JOIN EBOOKING.IBE_BOOKEDPASSENGER BOOKEDPASS",
              "      ON BOOKEDPASS.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "   AND BOOKEDPASS.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION ",
              "   AND BOOKEDPASS.SAILINGCODE = PRODUCTPASS.PASSENGERSAILINGCODE  ",
              "   AND BOOKEDPASS.SAILINGSTARTDATE = PRODUCTPASS.PASSENGERSAILINGSTARTDATE  ",
              "   AND BOOKEDPASS.ROUTEDEPARTUREPORT = PRODUCTPASS.PASSENGERROUTEDEPARTUREPORT",
              "   AND BOOKEDPASS.ROUTEARRIVALPORT = PRODUCTPASS.PASSENGERROUTEARRIVALPORT ",
              "   AND BOOKEDPASS.PASSENGERINDEX = PRODUCTPASS.PASSENGERINDEX ",
              " LEFT JOIN EBOOKING.IBE_BOOKINGCRMENTITY BOOKINGCRMENTITY",
              "    ON BOOKINGCRMENTITY.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "   AND BOOKINGCRMENTITY.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
              "INNER JOIN EBOOKING.ACC_ACCOUNT ACCOUNT",
              "    ON ACCOUNT.ACCOUNTID = BOOKING.ACCOUNTID ",
              "   AND ACCOUNT.STARTDATE = BOOKING.ACCOUNTSTARTDATE",
              "   AND ACCOUNT.ACCOUNTVERSION = BOOKING.ACCOUNTVERSION",
              " INNER JOIN EBOOKING.MSP_SAILING SAILING",
              "    ON SAILING.CODE = BOOKINGROUTE.SAILINGCODE  ",
              "   AND SAILING.STARTDATE = BOOKINGROUTE.SAILINGSTARTDATE",
              "   AND SAILING.HIDEINFORMATION = 'N'",
              "  LEFT JOIN (SELECT BOOKINGREFERENCE, BOOKINGVERSION, DEFERREDPAYMENT FROM EBOOKING.IBE_BOOKINGPAYMENTHISTORY ",
              "               WHERE PAYMENTSTATUS <> 'FAILED' AND DEFERREDPAYMENT = 'Y'          ",
              "               GROUP BY BOOKINGREFERENCE, BOOKINGVERSION, DEFERREDPAYMENT) BOOKINGPAYMENTHISTORY",
              "    ON BOOKINGPAYMENTHISTORY.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "   AND BOOKINGPAYMENTHISTORY.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION ",
              "   GROUP BY PRODUCTSURCHARGE.CODE,",
              "SAILING.CODE, SAILING.STARTDATE, BOOKINGROUTE.SAILINGCODE, BOOKINGROUTE.ROUTEDEPARTUREPORT,  BOOKINGROUTE.DEPARTUREDATE, BOOKINGROUTE.ROUTEARRIVALPORT,  BOOKINGROUTE.ARRIVALDATE, VALID_MAX.BUSINESSUNITNAME,        VALID_MAX.BOOKINGREFERENCE, BOOKINGHOLDER.SURNAME, BOOKINGHOLDER.NAME, BOOKINGHOLDER.PHONENUMBER, BOOKINGHOLDER.CUSTOMERID, BOOKING.AGENCYID, BOOKING.SPECIALINSTRUCTIONS, BOOKEDPRODUCT.PRODUCTTYPE, BOOKEDPRODUCT.PRODUCTCODE, BOOKEDPRODUCT.STANDBYPRODUCT, PRODUCTPASS.PRODUCTCODE, BOOKEDPASS.TYPE, BOOKEDPASS.NAME,        BOOKEDPASS.SURNAME, BOOKINGPAYMENTHISTORY.DEFERREDPAYMENT, BOOKING.SALESCHANNEL, BOOKING.VESSELTRANSFER, BR_DEP.ROUTEDEPARTUREPORT, BR_ARR.ROUTEARRIVALPORT, ACCOUNT.CUSTOMERNAME, BOOKINGCRMENTITY.ID, BOOKINGCRMENTITY.NAME, PRODUCTSURCHARGE.TYPE, BOOKING.PAID, BOOKING.GROSSAMOUNT",
              "union",
              "SELECT ",
              "       SAILING.CODE || '-' || SAILING.STARTDATE || '-' || BOOKINGROUTE.ROUTEDEPARTUREPORT || '-' || BOOKINGROUTE.ROUTEARRIVALPORT as SAILING_PK,",
              "       BOOKINGROUTE.ROUTEDEPARTUREPORT,",
              "       BOOKINGROUTE.DEPARTUREDATE AS ROUTEDEPARTUREDATE,",
              "       TO_CHAR(BOOKINGROUTE.DEPARTUREDATE,'DD-MON-YY HH24:MI') AS ROUTEDEPARTUREDATETIME,",
              "       TO_CHAR(BOOKINGROUTE.DEPARTUREDATE,'HH24:MI') AS ROUTEDEPARTURETIME,",
              " BOOKINGROUTE.ROUTEARRIVALPORT,",
              "       BOOKINGROUTE.ARRIVALDATE AS ROUTEARRIVALDATE,",
              "       TO_CHAR(BOOKINGROUTE.ARRIVALDATE,'DD-MON-YY HH24:MI') AS ROUTEARRIVALDATETIME,",
              "       TO_CHAR(BOOKINGROUTE.ARRIVALDATE,'HH24:MI') AS ROUTEARRIVALTIME,",
              "VALID_MAX.BUSINESSUNITNAME,",
              "       VALID_MAX.BOOKINGREFERENCE,",
              "       CASE WHEN BOOKING.SPECIALINSTRUCTIONS IS NULL THEN 'N'",
              "            WHEN BOOKING.SPECIALINSTRUCTIONS IS NOT NULL THEN 'Y'",
              "       END AS SPECIALINSTRUCTIONSFLAG,",
              "       BOOKINGHOLDER.SURNAME AS BHSURNAME,",
              "       BOOKINGHOLDER.NAME AS BHFIRSTNAME,",
              "       BOOKINGHOLDER.PHONENUMBER AS BHTELEPHONE,",
              "       BOOKINGHOLDER.CUSTOMERID,",
              "       BOOKING.AGENCYID,",
              "       BOOKING.SPECIALINSTRUCTIONS AS  SPECIALINSTRUCTIONS,",
              "       'FEE' AS PRODUCTTYPE, ",
              "       7 AS PRODUCTTYPESORT,",
              "       'FEE' AS PRODUCTCODE,",
              "       'N' AS STANDBYPRODUCT,",
              "       NULL AS VEHICLELENGTH,",
              "       NULL as VEHICLEWEIGHT,",
              "       NULL as VEHICLEWIDTH,",
              "       NULL as VEHICLEHEIGHT,",
              "       NULL AS PASSENGERCODE,      ",
              "       NULL AS TYPE,               ",
              "       NULL AS PASSENGERFIRSTNAME, ",
              "       NULL AS PASSENGERSURNAME,   ",
              "       NULL AS PASSENGERFULLNAME,",
              "       ' ' AS REDEEMED,",
              "       NVL(BOOKINGPAYMENTHISTORY.DEFERREDPAYMENT, 'N') AS DEFERREDPAYMENT,",
              "       SUBSTR(BOOKING.SALESCHANNEL,1,3) AS SALESCHANNEL,",
              "       BOOKING.VESSELTRANSFER,",
              "       BR_DEP.ROUTEDEPARTUREPORT AS BOOKINGDEPARTUREPORT,",
              "       BR_ARR.ROUTEARRIVALPORT AS BOOKINGARRIVALPORT,",
              "       CASE WHEN BOOKING.VESSELTRANSFER = 'N' THEN BOOKING.VESSELTRANSFER",
              "            WHEN BOOKING.VESSELTRANSFER = 'Y' THEN BOOKING.VESSELTRANSFER || '-' ||                  BR_ARR.ROUTEARRIVALPORT ",
              "       END FINALTRANSFERPORT,",
              "       ACCOUNT.CUSTOMERNAME,",
              "       BOOKINGCRMENTITY.ID AS ACCOUNTID,",
              "       REPLACE( BOOKINGCRMENTITY.NAME, '%20', ' ' ) AS ACCOUNTNAME,",
              "       BOOKING.GROSSAMOUNT, ",
              "       BOOKING.PAID,",
              "       (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) AS OWING,",
              "       CASE WHEN (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) = 0 THEN 'N'",
              "            WHEN (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) <> 0 THEN 'Y'",
              "       END AS OWINGFLAG,",
              "       0 AS REBATEAMOUNT,",
              "       0 AS SURCHARGEAMOUNT,",
              "       SUM(BOOKINGFEE.AMOUNT) AS TOTALPRICE,  ",
              "       COUNT(*) AS QUANTITY, ",
              "       'N' as HOSTLEPRODUCT,",
              "       'N' as DGPRODUCT,",
              "       SUM(BOOKINGFEE.AMOUNT) AS UNITGROSSAMOUNT",
              "from",
              "(SELECT DISTINCT BOOKING.BOOKINGREFERENCE, BOOKING.BUSINESSUNITNAME,",
              "       (SELECT MAX(BOOKINGMAX.BOOKINGVERSION)",
              "          FROM EBOOKING.IBE_BOOKING BOOKINGMAX",
              "         WHERE BOOKINGMAX.BOOKINGREFERENCE = BOOKING.BOOKINGREFERENCE ) BOOKINGVERSION",
              "  FROM EBOOKING.IBE_BOOKING BOOKING",
              "WHERE BOOKING.BOOKINGSTATUS NOT IN ('OPTION')) VALID_MAX",
              "INNER JOIN EBOOKING.IBE_BOOKING BOOKING",
              "ON BOOKING.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "AND BOOKING.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
              "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BOOKINGROUTE",
              "ON BOOKINGROUTE.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "AND BOOKINGROUTE.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
              "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BR_DEP",
              "  ON VALID_MAX.BOOKINGREFERENCE = BR_DEP.BOOKINGREFERENCE",
              " AND VALID_MAX.BOOKINGVERSION = BR_DEP.BOOKINGVERSION",
              " AND BR_DEP.DEPARTUREDATE = (SELECT MIN(DEPARTUREDATE) FROM EBOOKING.IBE_BOOKINGROUTE WHERE BR_DEP.BOOKINGREFERENCE = BOOKINGREFERENCE AND BR_DEP.BOOKINGVERSION = BOOKINGVERSION)",
              "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BR_ARR",
              "  ON VALID_MAX.BOOKINGREFERENCE = BR_ARR.BOOKINGREFERENCE",
              " AND VALID_MAX.BOOKINGVERSION = BR_ARR.BOOKINGVERSION",
              " AND BR_ARR.DEPARTUREDATE = (SELECT MAX(DEPARTUREDATE) FROM EBOOKING.IBE_BOOKINGROUTE WHERE BR_ARR.BOOKINGREFERENCE = BOOKINGREFERENCE AND BR_ARR.BOOKINGVERSION = BOOKINGVERSION)",
              "INNER JOIN EBOOKING.IBE_BOOKINGFEE BOOKINGFEE",
              "ON BOOKINGFEE.BOOKINGREFERENCE =  BOOKINGROUTE.BOOKINGREFERENCE ",
              "AND BOOKINGFEE.BOOKINGVERSION =  BOOKINGROUTE.BOOKINGVERSION",
              "AND BOOKINGFEE.ROUTEINDEX = BOOKINGROUTE.ROUTEINDEX",
              "INNER JOIN EBOOKING.IBE_BOOKINGHOLDER BOOKINGHOLDER",
              "    ON BOOKINGHOLDER.CONTACTID = BOOKING.HOLDERCONTACTID",
              "   AND BOOKINGHOLDER.BOOKINGHOLDERVERSION = BOOKING.HOLDERVERSION",
              " LEFT JOIN EBOOKING.IBE_BOOKINGCRMENTITY BOOKINGCRMENTITY",
              "    ON BOOKINGCRMENTITY.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "   AND BOOKINGCRMENTITY.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
              " INNER JOIN EBOOKING.ACC_ACCOUNT ACCOUNT",
              "    ON ACCOUNT.ACCOUNTID = BOOKING.ACCOUNTID ",
              "   AND ACCOUNT.STARTDATE = BOOKING.ACCOUNTSTARTDATE",
              "   AND ACCOUNT.ACCOUNTVERSION = BOOKING.ACCOUNTVERSION",
              "INNER JOIN EBOOKING.MSP_SAILING SAILING",
              "    ON SAILING.CODE = BOOKINGROUTE.SAILINGCODE  ",
              "   AND SAILING.STARTDATE = BOOKINGROUTE.SAILINGSTARTDATE",
              "   AND SAILING.HIDEINFORMATION = 'N'",
              "LEFT JOIN (SELECT BOOKINGREFERENCE, BOOKINGVERSION, DEFERREDPAYMENT FROM EBOOKING.IBE_BOOKINGPAYMENTHISTORY ",
              "           WHERE PAYMENTSTATUS <> 'FAILED' AND DEFERREDPAYMENT = 'Y' ",
              "           GROUP BY BOOKINGREFERENCE, BOOKINGVERSION, DEFERREDPAYMENT) BOOKINGPAYMENTHISTORY",
              "    ON BOOKINGPAYMENTHISTORY.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "   AND BOOKINGPAYMENTHISTORY.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION ",
              "GROUP BY SAILING.CODE, SAILING.STARTDATE,",
              "BOOKINGROUTE.SAILINGCODE, ",
              "BOOKINGROUTE.ROUTEDEPARTUREPORT,  BOOKINGROUTE.DEPARTUREDATE, BOOKINGROUTE.ROUTEARRIVALPORT,  BOOKINGROUTE.ARRIVALDATE, VALID_MAX.BUSINESSUNITNAME,  VALID_MAX.BOOKINGREFERENCE, BOOKINGHOLDER.SURNAME, BOOKINGHOLDER.NAME, ",
              "BOOKINGHOLDER.PHONENUMBER, BOOKINGHOLDER.CUSTOMERID, BOOKING.AGENCYID, ",
              "BOOKING.SPECIALINSTRUCTIONS, BOOKING.BOOKINGSTATUS, BOOKINGPAYMENTHISTORY.DEFERREDPAYMENT, BOOKING.SALESCHANNEL, BOOKING.VESSELTRANSFER, BR_DEP.ROUTEDEPARTUREPORT,",
              "BR_ARR.ROUTEARRIVALPORT, ACCOUNT.CUSTOMERNAME, BOOKINGCRMENTITY.ID, BOOKINGCRMENTITY.NAME, BOOKING.PAID, BOOKING.GROSSAMOUNT"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Query"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
              "       SAILING.CODE || '-' || SAILING.STARTDATE || '-' || BOOKINGROUTE.ROUTEDEPARTUREPORT || '-' || BOOKINGROUTE.ROUTEARRIVALPORT as SAILING_PK,",
              "       BOOKINGROUTE.ROUTEDEPARTUREPORT,",
              "       BOOKINGROUTE.DEPARTUREDATE AS ROUTEDEPARTUREDATE,",
              "       TO_CHAR(BOOKINGROUTE.DEPARTUREDATE,'DD-MON-YY HH24:MI') AS ROUTEDEPARTUREDATETIME,",
              "       TO_CHAR(BOOKINGROUTE.DEPARTUREDATE,'HH24:MI') AS ROUTEDEPARTURETIME,",
              "       BOOKINGROUTE.ROUTEARRIVALPORT,",
              "       BOOKINGROUTE.ARRIVALDATE AS ROUTEARRIVALDATE,",
              "       TO_CHAR(BOOKINGROUTE.ARRIVALDATE,'DD-MON-YY HH24:MI') AS ROUTEARRIVALDATETIME,",
              "       TO_CHAR(BOOKINGROUTE.ARRIVALDATE,'HH24:MI') AS ROUTEARRIVALTIME,",
              "       VALID_MAX.BUSINESSUNITNAME,",
              "       VALID_MAX.BOOKINGREFERENCE,",
              "       CASE WHEN BOOKING.SPECIALINSTRUCTIONS IS NULL THEN 'N'",
              "            WHEN BOOKING.SPECIALINSTRUCTIONS IS NOT NULL THEN 'Y'",
              "       END AS SPECIALINSTRUCTIONSFLAG,",
              "       BOOKINGHOLDER.SURNAME AS BHSURNAME,",
              "       BOOKINGHOLDER.NAME AS BHFIRSTNAME,",
              "       BOOKINGHOLDER.PHONENUMBER AS BHTELEPHONE,",
              "       BOOKINGHOLDER.CUSTOMERID,",
              "       BOOKING.AGENCYID,",
              "       BOOKING.SPECIALINSTRUCTIONS AS SPECIALINSTRUCTIONS,",
              "       BOOKEDPRODUCT.PRODUCTTYPE,",
              "       CASE WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'PASSENGER' THEN 1",
              "            WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'VEHICLE' THEN 2",
              "            WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'CABIN' THEN 3",
              "            WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'CHAIR' THEN 4",
              "            WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'ONBOARD' THEN 5",
              "            WHEN BOOKEDPRODUCT.PRODUCTTYPE = 'BIKE' THEN 6",
              "       END AS PRODUCTTYPESORT,",
              "       BOOKEDPRODUCT.PRODUCTCODE,",
              "       BOOKEDPRODUCT.STANDBYPRODUCT, ",
              "       SUM(BOOKEDPRODUCT.VEHICLELENGTH) AS VEHICLELENGTH,",
              "       SUM(BOOKEDPRODUCT.VEHICLEWEIGHT) as VEHICLEWEIGHT,",
              "       MAX(BOOKEDPRODUCT.VEHICLEWIDTH) as VEHICLEWIDTH,",
              "       MAX(BOOKEDPRODUCT.VEHICLEHEIGHT) as VEHICLEHEIGHT,",
              "       PRODUCTPASS.PRODUCTCODE AS PASSENGERCODE,",
              "       BOOKEDPASS.TYPE,",
              "       BOOKEDPASS.NAME AS PASSENGERFIRSTNAME,",
              "       BOOKEDPASS.SURNAME AS PASSENGERSURNAME,",
              "       CASE WHEN BOOKEDPASS.SURNAME IS NULL THEN '' ",
              "            WHEN BOOKEDPASS.SURNAME IS NOT NULL THEN BOOKEDPASS.SURNAME || ', ' || BOOKEDPASS.NAME ",
              "       END PASSENGERFULLNAME,",
              "       ' ' AS REDEEMED,",
              "       NVL(BOOKINGPAYMENTHISTORY.DEFERREDPAYMENT, 'N') AS DEFERREDPAYMENT,",
              "       SUBSTR(BOOKING.SALESCHANNEL,1,3) AS SALESCHANNEL,",
              "       BOOKING.VESSELTRANSFER,",
              "       BR_DEP.ROUTEDEPARTUREPORT AS BOOKINGDEPARTUREPORT,",
              "       BR_ARR.ROUTEARRIVALPORT AS BOOKINGARRIVALPORT,",
              "       CASE WHEN BOOKING.VESSELTRANSFER = 'N' THEN BOOKING.VESSELTRANSFER",
              "            WHEN BOOKING.VESSELTRANSFER = 'Y' THEN BOOKING.VESSELTRANSFER || '-' || BR_ARR.ROUTEARRIVALPORT ",
              "       END FINALTRANSFERPORT,",
              "       ACCOUNT.CUSTOMERNAME,",
              "       BOOKINGCRMENTITY.ID AS ACCOUNTID,",
              "       REPLACE( BOOKINGCRMENTITY.NAME, '%20', ' ' ) AS ACCOUNTNAME,",
              "       BOOKING.GROSSAMOUNT, ",
              "       BOOKING.PAID,",
              "       (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) AS OWING,",
              "       CASE WHEN (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) = 0 THEN 'N'",
              "            WHEN (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) <> 0 THEN 'Y'",
              "       END AS OWINGFLAG,",
              "       CASE WHEN PRODUCTSURCHARGE.TYPE = 'REBATE' THEN SUM(-PRODUCTSURCHARGE.AMOUNT) ",
              "            WHEN PRODUCTSURCHARGE.TYPE = 'SURCHARGE' THEN 0",
              "       END REBATEAMOUNT,",
              "       CASE WHEN PRODUCTSURCHARGE.TYPE = 'REBATE' THEN 0 ",
              "            WHEN PRODUCTSURCHARGE.TYPE = 'SURCHARGE' THEN SUM(PRODUCTSURCHARGE.AMOUNT)",
              "       END SURCHARGEAMOUNT,",
              "       SUM(BOOKEDPRODUCT.UNITPRICE) AS TOTALPRICE, ",
              "       SUM(BOOKEDPRODUCT.QUANTITY) AS QUANTITY,",
              "       case when PRODUCTSURCHARGE.CODE = 'HOSTLE' then 'Y' else 'N' end as HOSTLEPRODUCT,",
              "       case when BOOKEDPRODUCT.PRODUCTCODE = 'DG' then 'Y' else 'N' end as DGPRODUCT,",
              "       SUM(BOOKEDPRODUCT.TOTALNETUNITPRICE) AS UNITGROSSAMOUNT",
              "",
              "FROM",
              "(SELECT DISTINCT BOOKING.BOOKINGREFERENCE, BOOKING.BUSINESSUNITNAME,",
              "       (SELECT MAX(BOOKINGMAX.BOOKINGVERSION)",
              "          FROM EBOOKING.IBE_BOOKING BOOKINGMAX",
              "         WHERE BOOKINGMAX.BOOKINGREFERENCE = BOOKING.BOOKINGREFERENCE ) BOOKINGVERSION",
              "  FROM EBOOKING.IBE_BOOKING BOOKING",
              " WHERE BOOKING.BOOKINGSTATUS NOT IN ('CANCELLED', 'OPTION')) VALID_MAX",
              " INNER JOIN EBOOKING.IBE_BOOKING BOOKING",
              "    ON BOOKING.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "   AND BOOKING.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
              " INNER JOIN EBOOKING.IBE_BOOKEDPRODUCT BOOKEDPRODUCT",
              "    ON BOOKEDPRODUCT.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "   AND BOOKEDPRODUCT.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
              "INNER JOIN EBOOKING.IBE_BOOKINGHOLDER BOOKINGHOLDER",
              "    ON BOOKINGHOLDER.CONTACTID = BOOKING.HOLDERCONTACTID",
              "   AND BOOKINGHOLDER.BOOKINGHOLDERVERSION = BOOKING.HOLDERVERSION",
              "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BOOKINGROUTE",
              "    ON BOOKINGROUTE.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "   AND BOOKINGROUTE.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
              "   AND BOOKINGROUTE.SAILINGCODE =  BOOKEDPRODUCT.ROUTESAILINGCODE ",
              "   AND BOOKINGROUTE.SAILINGSTARTDATE =  BOOKEDPRODUCT.ROUTESAILINGSTARTDATE ",
              "   AND BOOKINGROUTE.ROUTEDEPARTUREPORT = BOOKEDPRODUCT.ROUTEDEPARTUREPORT",
              "   AND BOOKINGROUTE.ROUTEARRIVALPORT = BOOKEDPRODUCT.ROUTEARRIVALPORT",
              "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BR_DEP",
              "  ON VALID_MAX.BOOKINGREFERENCE = BR_DEP.BOOKINGREFERENCE",
              " AND VALID_MAX.BOOKINGVERSION = BR_DEP.BOOKINGVERSION",
              " AND BR_DEP.DEPARTUREDATE = (SELECT MIN(DEPARTUREDATE) FROM EBOOKING.IBE_BOOKINGROUTE WHERE BR_DEP.BOOKINGREFERENCE = BOOKINGREFERENCE AND BR_DEP.BOOKINGVERSION = BOOKINGVERSION)",
              "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BR_ARR",
              "  ON VALID_MAX.BOOKINGREFERENCE = BR_ARR.BOOKINGREFERENCE",
              " AND VALID_MAX.BOOKINGVERSION = BR_ARR.BOOKINGVERSION",
              " AND BR_ARR.DEPARTUREDATE = (SELECT MAX(DEPARTUREDATE) FROM EBOOKING.IBE_BOOKINGROUTE WHERE BR_ARR.BOOKINGREFERENCE = BOOKINGREFERENCE AND BR_ARR.BOOKINGVERSION = BOOKINGVERSION)",
              "LEFT OUTER JOIN EBOOKING.IBE_BOOKEDPRODUCTSURCHARGE PRODUCTSURCHARGE",
              "    ON PRODUCTSURCHARGE.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "   AND PRODUCTSURCHARGE.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
              "   AND PRODUCTSURCHARGE.ROUTESAILINGCODE =  BOOKEDPRODUCT.ROUTESAILINGCODE ",
              "   AND PRODUCTSURCHARGE.ROUTESAILINGSTARTDATE =  BOOKEDPRODUCT.ROUTESAILINGSTARTDATE ",
              "   AND PRODUCTSURCHARGE.ROUTEDEPARTUREPORT = BOOKEDPRODUCT.ROUTEDEPARTUREPORT",
              "   AND PRODUCTSURCHARGE.ROUTEARRIVALPORT = BOOKEDPRODUCT.ROUTEARRIVALPORT",
              "   AND PRODUCTSURCHARGE.PRODUCTCODE =  BOOKEDPRODUCT.PRODUCTCODE ",
              "   AND PRODUCTSURCHARGE.PRODUCTSTARTDATE = BOOKEDPRODUCT.PRODUCTSTARTDATE",
              "   AND PRODUCTSURCHARGE.PRODUCTINDEX = BOOKEDPRODUCT.PRODUCTINDEX",
              " INNER JOIN EBOOKING.CHI_PRODUCTSTATUS PRODUCTSTATUS",
              "    ON PRODUCTSTATUS.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "   AND PRODUCTSTATUS.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
              "   AND PRODUCTSTATUS.ROUTESAILINGCODE =  BOOKEDPRODUCT.ROUTESAILINGCODE ",
              "   AND PRODUCTSTATUS.ROUTESAILINGSTARTDATE =  BOOKEDPRODUCT.ROUTESAILINGSTARTDATE ",
              "   AND PRODUCTSTATUS.ROUTEDEPARTUREPORT = BOOKEDPRODUCT.ROUTEDEPARTUREPORT",
              "   AND PRODUCTSTATUS.ROUTEARRIVALPORT = BOOKEDPRODUCT.ROUTEARRIVALPORT",
              "   AND PRODUCTSTATUS.PRODUCTCODE =  BOOKEDPRODUCT.PRODUCTCODE ",
              "   AND PRODUCTSTATUS.PRODUCTSTARTDATE = BOOKEDPRODUCT.PRODUCTSTARTDATE",
              "   AND PRODUCTSTATUS.PRODUCTINDEX = BOOKEDPRODUCT.PRODUCTINDEX",
              "   AND PRODUCTSTATUS.ENDDATE = '99991231000000'",
              "   AND PRODUCTSTATUS.CHECKINSTATUS NOT IN ('CANCELLED', 'NO SHOW')",
              "LEFT OUTER JOIN EBOOKING.IBE_PRODUCTPASSENGER PRODUCTPASS",
              "      ON PRODUCTPASS.PRODUCTBOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "   AND PRODUCTPASS.PRODUCTBOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
              "   AND PRODUCTPASS.PRODUCTROUTESAILINGCODE =  BOOKEDPRODUCT.ROUTESAILINGCODE ",
              "   AND PRODUCTPASS.PRODUCTROUTESAILINGSTARTDATE =  BOOKEDPRODUCT.ROUTESAILINGSTARTDATE ",
              "   AND PRODUCTPASS.PRODUCTROUTEDEPARTUREPORT = BOOKEDPRODUCT.ROUTEDEPARTUREPORT",
              "   AND PRODUCTPASS.PRODUCTROUTEARRIVALPORT = BOOKEDPRODUCT.ROUTEARRIVALPORT",
              "   AND PRODUCTPASS.PRODUCTCODE =  BOOKEDPRODUCT.PRODUCTCODE ",
              "   AND PRODUCTPASS.PRODUCTSTARTDATE = BOOKEDPRODUCT.PRODUCTSTARTDATE",
              "   AND PRODUCTPASS.PRODUCTINDEX = BOOKEDPRODUCT.PRODUCTINDEX",
              "   AND PRODUCTPASS.PRODUCTTYPE = 'PASSENGER'",
              "LEFT OUTER JOIN EBOOKING.IBE_BOOKEDPASSENGER BOOKEDPASS",
              "      ON BOOKEDPASS.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "   AND BOOKEDPASS.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION ",
              "   AND BOOKEDPASS.SAILINGCODE = PRODUCTPASS.PASSENGERSAILINGCODE  ",
              "   AND BOOKEDPASS.SAILINGSTARTDATE = PRODUCTPASS.PASSENGERSAILINGSTARTDATE  ",
              "   AND BOOKEDPASS.ROUTEDEPARTUREPORT = PRODUCTPASS.PASSENGERROUTEDEPARTUREPORT",
              "   AND BOOKEDPASS.ROUTEARRIVALPORT = PRODUCTPASS.PASSENGERROUTEARRIVALPORT ",
              "   AND BOOKEDPASS.PASSENGERINDEX = PRODUCTPASS.PASSENGERINDEX ",
              " LEFT JOIN EBOOKING.IBE_BOOKINGCRMENTITY BOOKINGCRMENTITY",
              "    ON BOOKINGCRMENTITY.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "   AND BOOKINGCRMENTITY.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
              "INNER JOIN EBOOKING.ACC_ACCOUNT ACCOUNT",
              "    ON ACCOUNT.ACCOUNTID = BOOKING.ACCOUNTID ",
              "   AND ACCOUNT.STARTDATE = BOOKING.ACCOUNTSTARTDATE",
              "   AND ACCOUNT.ACCOUNTVERSION = BOOKING.ACCOUNTVERSION",
              " INNER JOIN EBOOKING.MSP_SAILING SAILING",
              "    ON SAILING.CODE = BOOKINGROUTE.SAILINGCODE  ",
              "   AND SAILING.STARTDATE = BOOKINGROUTE.SAILINGSTARTDATE",
              "   AND SAILING.HIDEINFORMATION = 'N'",
              "  LEFT JOIN (SELECT BOOKINGREFERENCE, BOOKINGVERSION, DEFERREDPAYMENT FROM EBOOKING.IBE_BOOKINGPAYMENTHISTORY ",
              "               WHERE PAYMENTSTATUS <> 'FAILED' AND DEFERREDPAYMENT = 'Y'          ",
              "               GROUP BY BOOKINGREFERENCE, BOOKINGVERSION, DEFERREDPAYMENT) BOOKINGPAYMENTHISTORY",
              "    ON BOOKINGPAYMENTHISTORY.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "   AND BOOKINGPAYMENTHISTORY.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION ",
              "   GROUP BY PRODUCTSURCHARGE.CODE,",
              "SAILING.CODE, SAILING.STARTDATE, BOOKINGROUTE.SAILINGCODE, BOOKINGROUTE.ROUTEDEPARTUREPORT,  BOOKINGROUTE.DEPARTUREDATE, BOOKINGROUTE.ROUTEARRIVALPORT,  BOOKINGROUTE.ARRIVALDATE, VALID_MAX.BUSINESSUNITNAME,        VALID_MAX.BOOKINGREFERENCE, BOOKINGHOLDER.SURNAME, BOOKINGHOLDER.NAME, BOOKINGHOLDER.PHONENUMBER, BOOKINGHOLDER.CUSTOMERID, BOOKING.AGENCYID, BOOKING.SPECIALINSTRUCTIONS, BOOKEDPRODUCT.PRODUCTTYPE, BOOKEDPRODUCT.PRODUCTCODE, BOOKEDPRODUCT.STANDBYPRODUCT, PRODUCTPASS.PRODUCTCODE, BOOKEDPASS.TYPE, BOOKEDPASS.NAME,        BOOKEDPASS.SURNAME, BOOKINGPAYMENTHISTORY.DEFERREDPAYMENT, BOOKING.SALESCHANNEL, BOOKING.VESSELTRANSFER, BR_DEP.ROUTEDEPARTUREPORT, BR_ARR.ROUTEARRIVALPORT, ACCOUNT.CUSTOMERNAME, BOOKINGCRMENTITY.ID, BOOKINGCRMENTITY.NAME, PRODUCTSURCHARGE.TYPE, BOOKING.PAID, BOOKING.GROSSAMOUNT",
              "union",
              "SELECT ",
              "       SAILING.CODE || '-' || SAILING.STARTDATE || '-' || BOOKINGROUTE.ROUTEDEPARTUREPORT || '-' || BOOKINGROUTE.ROUTEARRIVALPORT as SAILING_PK,",
              "       BOOKINGROUTE.ROUTEDEPARTUREPORT,",
              "       BOOKINGROUTE.DEPARTUREDATE AS ROUTEDEPARTUREDATE,",
              "       TO_CHAR(BOOKINGROUTE.DEPARTUREDATE,'DD-MON-YY HH24:MI') AS ROUTEDEPARTUREDATETIME,",
              "       TO_CHAR(BOOKINGROUTE.DEPARTUREDATE,'HH24:MI') AS ROUTEDEPARTURETIME,",
              " BOOKINGROUTE.ROUTEARRIVALPORT,",
              "       BOOKINGROUTE.ARRIVALDATE AS ROUTEARRIVALDATE,",
              "       TO_CHAR(BOOKINGROUTE.ARRIVALDATE,'DD-MON-YY HH24:MI') AS ROUTEARRIVALDATETIME,",
              "       TO_CHAR(BOOKINGROUTE.ARRIVALDATE,'HH24:MI') AS ROUTEARRIVALTIME,",
              "VALID_MAX.BUSINESSUNITNAME,",
              "       VALID_MAX.BOOKINGREFERENCE,",
              "       CASE WHEN BOOKING.SPECIALINSTRUCTIONS IS NULL THEN 'N'",
              "            WHEN BOOKING.SPECIALINSTRUCTIONS IS NOT NULL THEN 'Y'",
              "       END AS SPECIALINSTRUCTIONSFLAG,",
              "       BOOKINGHOLDER.SURNAME AS BHSURNAME,",
              "       BOOKINGHOLDER.NAME AS BHFIRSTNAME,",
              "       BOOKINGHOLDER.PHONENUMBER AS BHTELEPHONE,",
              "       BOOKINGHOLDER.CUSTOMERID,",
              "       BOOKING.AGENCYID,",
              "       BOOKING.SPECIALINSTRUCTIONS AS  SPECIALINSTRUCTIONS,",
              "       'FEE' AS PRODUCTTYPE, ",
              "       7 AS PRODUCTTYPESORT,",
              "       'FEE' AS PRODUCTCODE,",
              "       'N' AS STANDBYPRODUCT,",
              "       NULL AS VEHICLELENGTH,",
              "       NULL as VEHICLEWEIGHT,",
              "       NULL as VEHICLEWIDTH,",
              "       NULL as VEHICLEHEIGHT,",
              "       NULL AS PASSENGERCODE,      ",
              "       NULL AS TYPE,               ",
              "       NULL AS PASSENGERFIRSTNAME, ",
              "       NULL AS PASSENGERSURNAME,   ",
              "       NULL AS PASSENGERFULLNAME,",
              "       ' ' AS REDEEMED,",
              "       NVL(BOOKINGPAYMENTHISTORY.DEFERREDPAYMENT, 'N') AS DEFERREDPAYMENT,",
              "       SUBSTR(BOOKING.SALESCHANNEL,1,3) AS SALESCHANNEL,",
              "       BOOKING.VESSELTRANSFER,",
              "       BR_DEP.ROUTEDEPARTUREPORT AS BOOKINGDEPARTUREPORT,",
              "       BR_ARR.ROUTEARRIVALPORT AS BOOKINGARRIVALPORT,",
              "       CASE WHEN BOOKING.VESSELTRANSFER = 'N' THEN BOOKING.VESSELTRANSFER",
              "            WHEN BOOKING.VESSELTRANSFER = 'Y' THEN BOOKING.VESSELTRANSFER || '-' ||                  BR_ARR.ROUTEARRIVALPORT ",
              "       END FINALTRANSFERPORT,",
              "       ACCOUNT.CUSTOMERNAME,",
              "       BOOKINGCRMENTITY.ID AS ACCOUNTID,",
              "       REPLACE( BOOKINGCRMENTITY.NAME, '%20', ' ' ) AS ACCOUNTNAME,",
              "       BOOKING.GROSSAMOUNT, ",
              "       BOOKING.PAID,",
              "       (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) AS OWING,",
              "       CASE WHEN (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) = 0 THEN 'N'",
              "            WHEN (BOOKING.GROSSAMOUNT) - (BOOKING.PAID) <> 0 THEN 'Y'",
              "       END AS OWINGFLAG,",
              "       0 AS REBATEAMOUNT,",
              "       0 AS SURCHARGEAMOUNT,",
              "       SUM(BOOKINGFEE.AMOUNT) AS TOTALPRICE,  ",
              "       COUNT(*) AS QUANTITY, ",
              "       'N' as HOSTLEPRODUCT,",
              "       'N' as DGPRODUCT,",
              "       SUM(BOOKINGFEE.AMOUNT) AS UNITGROSSAMOUNT",
              "from",
              "(SELECT DISTINCT BOOKING.BOOKINGREFERENCE, BOOKING.BUSINESSUNITNAME,",
              "       (SELECT MAX(BOOKINGMAX.BOOKINGVERSION)",
              "          FROM EBOOKING.IBE_BOOKING BOOKINGMAX",
              "         WHERE BOOKINGMAX.BOOKINGREFERENCE = BOOKING.BOOKINGREFERENCE ) BOOKINGVERSION",
              "  FROM EBOOKING.IBE_BOOKING BOOKING",
              "WHERE BOOKING.BOOKINGSTATUS NOT IN ('OPTION')) VALID_MAX",
              "INNER JOIN EBOOKING.IBE_BOOKING BOOKING",
              "ON BOOKING.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "AND BOOKING.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
              "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BOOKINGROUTE",
              "ON BOOKINGROUTE.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "AND BOOKINGROUTE.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
              "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BR_DEP",
              "  ON VALID_MAX.BOOKINGREFERENCE = BR_DEP.BOOKINGREFERENCE",
              " AND VALID_MAX.BOOKINGVERSION = BR_DEP.BOOKINGVERSION",
              " AND BR_DEP.DEPARTUREDATE = (SELECT MIN(DEPARTUREDATE) FROM EBOOKING.IBE_BOOKINGROUTE WHERE BR_DEP.BOOKINGREFERENCE = BOOKINGREFERENCE AND BR_DEP.BOOKINGVERSION = BOOKINGVERSION)",
              "INNER JOIN EBOOKING.IBE_BOOKINGROUTE BR_ARR",
              "  ON VALID_MAX.BOOKINGREFERENCE = BR_ARR.BOOKINGREFERENCE",
              " AND VALID_MAX.BOOKINGVERSION = BR_ARR.BOOKINGVERSION",
              " AND BR_ARR.DEPARTUREDATE = (SELECT MAX(DEPARTUREDATE) FROM EBOOKING.IBE_BOOKINGROUTE WHERE BR_ARR.BOOKINGREFERENCE = BOOKINGREFERENCE AND BR_ARR.BOOKINGVERSION = BOOKINGVERSION)",
              "INNER JOIN EBOOKING.IBE_BOOKINGFEE BOOKINGFEE",
              "ON BOOKINGFEE.BOOKINGREFERENCE =  BOOKINGROUTE.BOOKINGREFERENCE ",
              "AND BOOKINGFEE.BOOKINGVERSION =  BOOKINGROUTE.BOOKINGVERSION",
              "AND BOOKINGFEE.ROUTEINDEX = BOOKINGROUTE.ROUTEINDEX",
              "INNER JOIN EBOOKING.IBE_BOOKINGHOLDER BOOKINGHOLDER",
              "    ON BOOKINGHOLDER.CONTACTID = BOOKING.HOLDERCONTACTID",
              "   AND BOOKINGHOLDER.BOOKINGHOLDERVERSION = BOOKING.HOLDERVERSION",
              " LEFT JOIN EBOOKING.IBE_BOOKINGCRMENTITY BOOKINGCRMENTITY",
              "    ON BOOKINGCRMENTITY.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "   AND BOOKINGCRMENTITY.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION",
              " INNER JOIN EBOOKING.ACC_ACCOUNT ACCOUNT",
              "    ON ACCOUNT.ACCOUNTID = BOOKING.ACCOUNTID ",
              "   AND ACCOUNT.STARTDATE = BOOKING.ACCOUNTSTARTDATE",
              "   AND ACCOUNT.ACCOUNTVERSION = BOOKING.ACCOUNTVERSION",
              "INNER JOIN EBOOKING.MSP_SAILING SAILING",
              "    ON SAILING.CODE = BOOKINGROUTE.SAILINGCODE  ",
              "   AND SAILING.STARTDATE = BOOKINGROUTE.SAILINGSTARTDATE",
              "   AND SAILING.HIDEINFORMATION = 'N'",
              "LEFT JOIN (SELECT BOOKINGREFERENCE, BOOKINGVERSION, DEFERREDPAYMENT FROM EBOOKING.IBE_BOOKINGPAYMENTHISTORY ",
              "           WHERE PAYMENTSTATUS <> 'FAILED' AND DEFERREDPAYMENT = 'Y' ",
              "           GROUP BY BOOKINGREFERENCE, BOOKINGVERSION, DEFERREDPAYMENT) BOOKINGPAYMENTHISTORY",
              "    ON BOOKINGPAYMENTHISTORY.BOOKINGREFERENCE = VALID_MAX.BOOKINGREFERENCE ",
              "   AND BOOKINGPAYMENTHISTORY.BOOKINGVERSION = VALID_MAX.BOOKINGVERSION ",
              "GROUP BY SAILING.CODE, SAILING.STARTDATE,",
              "BOOKINGROUTE.SAILINGCODE, ",
              "BOOKINGROUTE.ROUTEDEPARTUREPORT,  BOOKINGROUTE.DEPARTUREDATE, BOOKINGROUTE.ROUTEARRIVALPORT,  BOOKINGROUTE.ARRIVALDATE, VALID_MAX.BUSINESSUNITNAME,  VALID_MAX.BOOKINGREFERENCE, BOOKINGHOLDER.SURNAME, BOOKINGHOLDER.NAME, ",
              "BOOKINGHOLDER.PHONENUMBER, BOOKINGHOLDER.CUSTOMERID, BOOKING.AGENCYID, ",
              "BOOKING.SPECIALINSTRUCTIONS, BOOKING.BOOKINGSTATUS, BOOKINGPAYMENTHISTORY.DEFERREDPAYMENT, BOOKING.SALESCHANNEL, BOOKING.VESSELTRANSFER, BR_DEP.ROUTEDEPARTUREPORT,",
              "BR_ARR.ROUTEARRIVALPORT, ACCOUNT.CUSTOMERNAME, BOOKINGCRMENTITY.ID, BOOKINGCRMENTITY.NAME, BOOKING.PAID, BOOKING.GROSSAMOUNT</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "a2a584b6-afb9-4485-8f6e-92561c912818",
        "fromTable": "DepartureAllocation",
        "fromColumn": "DepartureAllocationKey",
        "toTable": "Sailings",
        "toColumn": "DepartureAllocationKey"
      },
      {
        "name": "d3bc8447-5c85-463b-a702-25921b733a50",
        "fromTable": "ArrivalAllocation",
        "fromColumn": "ArrivalAllocationKey",
        "toTable": "Sailings",
        "toColumn": "ArrivalAllocationKey"
      },
      {
        "name": "2a494311-913d-4558-83fd-2246cc8927ec",
        "fromTable": "ArrivalAllocation",
        "fromColumn": "PhysicalResourceCode",
        "toTable": "PhysicalResources",
        "toColumn": "PhysicalResourceCode"
      },
      {
        "name": "358baa79-7424-40c3-b2c5-7829330bc58c",
        "fromTable": "DepartureAllocation",
        "fromColumn": "PhysicalResourceCode",
        "toTable": "PhysicalResources",
        "toColumn": "PhysicalResourceCode"
      },
      {
        "name": "48ad062e-e65d-4a8a-960a-2b39df7dd6a5",
        "fromTable": "Bookings",
        "fromColumn": "SAILING_PK",
        "toTable": "Sailings",
        "toColumn": "SailingKey"
      }
    ],
    "roles": [
      {
        "name": "Browse",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "BCFERRIES\\atorrico",
            "memberId": "S-1-5-21-839522115-682003330-2147125571-255055"
          },
          {
            "memberName": "BCFERRIES\\MRegules",
            "memberId": "S-1-5-21-839522115-682003330-2147125571-290108"
          },
          {
            "memberName": "BCFERRIES\\tltowers",
            "memberId": "S-1-5-21-839522115-682003330-2147125571-3221"
          },
          {
            "memberName": "BCFERRIES\\Tariff Revenue",
            "memberId": "S-1-5-21-839522115-682003330-2147125571-304890"
          },
          {
            "memberName": "BCFERRIES\\Revenue Clerk",
            "memberId": "S-1-5-21-839522115-682003330-2147125571-305151"
          },
          {
            "memberName": "BCFERRIES\\Northern Terminal Agent",
            "memberId": "S-1-5-21-839522115-682003330-2147125571-304884"
          },
          {
            "memberName": "BCFERRIES\\Key Accounts",
            "memberId": "S-1-5-21-839522115-682003330-2147125571-304774"
          },
          {
            "memberName": "BCFERRIES\\Customer Service Support",
            "memberId": "S-1-5-21-839522115-682003330-2147125571-304882"
          },
          {
            "memberName": "BCFERRIES\\TerminalMgrSupTicketingSup",
            "memberId": "S-1-5-21-839522115-682003330-2147125571-304889"
          },
          {
            "memberName": "BCFERRIES\\Program Support Analyst",
            "memberId": "S-1-5-21-839522115-682003330-2147125571-304773"
          },
          {
            "memberName": "BCFERRIES\\Northern Terminal TOS",
            "memberId": "S-1-5-21-839522115-682003330-2147125571-304885"
          },
          {
            "memberName": "BCFERRIES\\Customer Care Manager",
            "memberId": "S-1-5-21-839522115-682003330-2147125571-304880"
          },
          {
            "memberName": "BCFERRIES\\IT System Administrator",
            "memberId": "S-1-5-21-839522115-682003330-2147125571-304883"
          },
          {
            "memberName": "BCFERRIES\\Call Center CSSR",
            "memberId": "S-1-5-21-839522115-682003330-2147125571-304878"
          }
        ]
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "400"
      }
    ]
  },
  "id": "SemanticModel"
}