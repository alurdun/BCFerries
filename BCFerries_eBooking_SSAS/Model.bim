{
  "name": "SemanticModel",
  "compatibilityLevel": 1200,
  "model": {
    "defaultMode": "directQuery",
    "culture": "en-CA",
    "dataSources": [
      {
        "name": "Oracle scan.stg01.rac.bcferries.corp",
        "connectionString": "Provider=OraOLEDB.Oracle;Data Source=scan.stg01.rac.bcferries.corp;User ID=report_proxy_user;Persist Security Info=false",
        "impersonationMode": "impersonateServiceAccount",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "Oracle"
          }
        ]
      }
    ],
    "tables": [
      {
        "name": "Sailings",
        "columns": [
          {
            "name": "SailingKey",
            "dataType": "string",
            "sourceColumn": "SAILING_PK"
          },
          {
            "name": "SailingStartDate",
            "dataType": "dateTime",
            "sourceColumn": "SAILING_STARTDATE"
          },
          {
            "name": "SailingEndDate",
            "dataType": "dateTime",
            "sourceColumn": "SAILING_ENDDATE"
          },
          {
            "name": "SailingCode",
            "dataType": "string",
            "sourceColumn": "SAI_CODE"
          },
          {
            "name": "SailingDepartureDate",
            "dataType": "dateTime",
            "sourceColumn": "SAI_SAILINGDEPARTUREDATE"
          },
          {
            "name": "SailingLocked",
            "dataType": "string",
            "sourceColumn": "SAI_LOCKED"
          },
          {
            "name": "SailingScheduleCode",
            "dataType": "string",
            "sourceColumn": "SAI_SCHEDULECODE"
          },
          {
            "name": "SailingArrivalDate",
            "dataType": "dateTime",
            "sourceColumn": "SAI_SAILINGARRIVALDATE"
          },
          {
            "name": "SailingHideInformation",
            "dataType": "string",
            "sourceColumn": "SAI_HIDEINFORMATION"
          },
          {
            "name": "LineCode",
            "dataType": "string",
            "sourceColumn": "LIN_CODE"
          },
          {
            "name": "LineDescription",
            "dataType": "string",
            "sourceColumn": "LIN_DESCRIPTION"
          },
          {
            "name": "ShipCode",
            "dataType": "string",
            "sourceColumn": "SHI_CODE"
          },
          {
            "name": "ShipName",
            "dataType": "string",
            "sourceColumn": "SHI_NAME"
          },
          {
            "name": "ShipType",
            "dataType": "string",
            "sourceColumn": "SHI_SHIPTYPE"
          },
          {
            "name": "ShipDivision",
            "dataType": "string",
            "sourceColumn": "SHI_DIVISION"
          },
          {
            "name": "PhysicalShipName",
            "dataType": "string",
            "sourceColumn": "SHI_PHYSICALSHIPNAME"
          },
          {
            "name": "ShipPhysicalDescription",
            "dataType": "string",
            "sourceColumn": "PHY_DESCRIPTION"
          },
          {
            "name": "DeparturePortCode",
            "dataType": "string",
            "sourceColumn": "DEP_PORTCODE"
          },
          {
            "name": "DeparturePortOrder",
            "dataType": "double",
            "sourceColumn": "DEP_PORTORDER"
          },
          {
            "name": "DepartureTime",
            "dataType": "dateTime",
            "sourceColumn": "DEP_DEPARTURETIME",
            "formatString": "HH:MM"
          },
          {
            "name": "ArrivalSailingCode",
            "dataType": "string",
            "sourceColumn": "ARR_SAILINGCODE"
          },
          {
            "name": "ArrivalPortCode",
            "dataType": "string",
            "sourceColumn": "ARR_PORTCODE"
          },
          {
            "name": "ArrivalPortOrder",
            "dataType": "double",
            "sourceColumn": "ARR_PORTORDER"
          },
          {
            "name": "ArrivalTime",
            "dataType": "dateTime",
            "sourceColumn": "ARR_ARRIVALTIME"
          },
          {
            "name": "LegCode",
            "dataType": "string",
            "sourceColumn": "LEG_CODE"
          },
          {
            "name": "DeparturePortGeographicalArea",
            "dataType": "string",
            "sourceColumn": "DPO_GEOGRAPHICALAREA"
          },
          {
            "name": "DeparturePortName",
            "dataType": "string",
            "sourceColumn": "DPO_NAME"
          },
          {
            "name": "DeparturePortDescription",
            "dataType": "string",
            "sourceColumn": "DPO_DESCRIPTION"
          },
          {
            "name": "ArrivalPortGeographicalArea",
            "dataType": "string",
            "sourceColumn": "APO_GEOGRAPHICALAREA"
          },
          {
            "name": "ArrivalPortName",
            "dataType": "string",
            "sourceColumn": "APO_NAME"
          },
          {
            "name": "ArrivalPortDescription",
            "dataType": "string",
            "sourceColumn": "APO_DESCRIPTION"
          },
          {
            "name": "DepartureGeographicalAreaName",
            "dataType": "string",
            "sourceColumn": "GED_NAME"
          },
          {
            "name": "ArrivalGeographicalAreaName",
            "dataType": "string",
            "sourceColumn": "GEA_NAME"
          },
          {
            "name": "RouteCode",
            "dataType": "string",
            "sourceColumn": "ROUTECODE"
          },
          {
            "name": "RouteSort",
            "dataType": "string",
            "sourceColumn": "ROUTESORT"
          },
          {
            "name": "DepartureDateTime",
            "dataType": "dateTime",
            "sourceColumn": "DEP_DEPARTUREDATETIME"
          },
          {
            "name": "DepartureDate",
            "dataType": "dateTime",
            "sourceColumn": "DEP_DEPARTUREDATE"
          },
          {
            "name": "DepartureTimeHour",
            "dataType": "string",
            "sourceColumn": "DEP_DEPARTURETIMEHOUR"
          },
          {
            "name": "ArrivalDateTime",
            "dataType": "dateTime",
            "sourceColumn": "ARR_ARRIVALDATETIME"
          },
          {
            "name": "ArrivalDate",
            "dataType": "dateTime",
            "sourceColumn": "ARR_ARRIVALDATE"
          },
          {
            "name": "ArrivalTimeHour",
            "dataType": "string",
            "sourceColumn": "ARR_ARRIVALTIMEHOUR"
          },
          {
            "name": "DepartureDateMonth",
            "dataType": "string",
            "sourceColumn": "DEP_DEPARTUREDATEMONTH"
          },
          {
            "name": "DepartureDateTimeMonthSort",
            "dataType": "string",
            "sourceColumn": "DEP_DEPARTUREDATEMONTHSORT"
          },
          {
            "name": "DepartureDateDayOfWeek",
            "dataType": "string",
            "sourceColumn": "DEP_DEPARTUREDATEDAYOFWEEK"
          },
          {
            "name": "DepartureDateDayOfWeekSort",
            "dataType": "string",
            "sourceColumn": "DEP_DEPARTUREDATEDAYOFWEEKSORT"
          },
          {
            "name": "DepartureDateDay",
            "dataType": "string",
            "sourceColumn": "DEP_DEPARTUREDATEDAY"
          },
          {
            "name": "LicenseCrewnumber",
            "dataType": "double",
            "sourceColumn": "LIC_CREWNUMBER"
          },
          {
            "name": "LicenseSellableCapacity",
            "dataType": "double",
            "sourceColumn": "LIC_SELLABLECAPACITY"
          },
          {
            "type": "calculated",
            "name": "DepartureAllocationKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "Sailings[SailingCode] & Sailings[DeparturePortCode]"
          },
          {
            "type": "calculated",
            "name": "ArrivalAllocationKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "Sailings[SailingCode] & Sailings[ArrivalPortCode]"
          },
          {
            "type": "calculated",
            "name": "DepartureDateDefault",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " IF(",
              "\tMONTH(",
              "\t\tSailings[DepartureDate])=MONTH(",
              "\t\t\tNOW()) && YEAR(Sailings[DepartureDate])=YEAR(NOW()) && DAY(Sailings[DepartureDate])=DAY(NOW()),\"1\",\"0\")"
            ]
          }
        ],
        "partitions": [
          {
            "name": "Query 1",
            "dataView": "full",
            "source": {
              "query": [
                "SELECT  distinct SAILING_PK",
                "       ,SAILING_STARTDATE",
                "       ,SAILING_ENDDATE",
                "       ,SAI_CODE",
                "       ,SAI_SAILINGDEPARTUREDATE",
                "       ,SAI_SAILINGARRIVALDATE",
                "       ,SAI_LOCKED",
                "       ,SAI_HIDEINFORMATION",
                "       ,SAI_SCHEDULECODE",
                "       ,case",
                "            when (LIN_CODE) in ('10BECA', '10BECB', '10BECC', '10PBBA', '10PBBB', '10PBBC', '10POFA', '10SHWA', '10SHWB') then ('10S')",
                "            when (LIN_CODE) in ('10PPHA', '10PPHB', '10PPHC', '10PPHD', '10PPRA', '10PPRB', '10PPRC', '10PPRD') then ('10')",
                "            when (substr(LIN_CODE,1 ,1) in ('5', '9')) then (substr(LIN_CODE,1,1))",
                "            when (substr(LIN_CODE,1,2) in ('01', '02', '03')) then (substr(LIN_CODE,2,1))",
                "            when (substr(LIN_CODE,1,1) not in ('5', '9')) then (substr(LIN_CODE,1,2))",
                "        end as ROUTECODE",
                "       ,case",
                "           when (LIN_CODE) in ('10BECA', '10BECB', '10BECC', '10PBBA', '10PBBB', '10PBBC', '10POFA', '10SHWA', '10SHWB') then ('10S')",
                "           when (LIN_CODE) in ('10PPHA', '10PPHB', '10PPHC', '10PPHD', '10PPRA', '10PPRB', '10PPRC', '10PPRD') then ('10')",
                "           when (substr( LIN_CODE,1 ,1) in ('5', '9')) then ( '0' || (substr( LIN_CODE,1,1)) )",
                "           when (substr( LIN_CODE,1,1) not in ('5', '9')) then (substr( LIN_CODE,1,2))",
                "        end as ROUTESORT",
                "       ,LIN_CODE",
                "       ,LIN_DESCRIPTION",
                "       ,LEG_CODE",
                "       ,DEP_PORTCODE",
                "       ,DPO_NAME",
                "       ,DPO_DESCRIPTION",
                "       ,DEP_PORTORDER",
                "       ,DEP_DEPARTURETIME as DEP_DEPARTUREDATETIME",
                "       ,TRUNC(DEP_DEPARTURETIME) as DEP_DEPARTUREDATE",
                "       ,to_char( DEP_DEPARTURETIME, 'HH24:MI' ) as DEP_DEPARTURETIME",
                "       ,to_char( DEP_DEPARTURETIME, 'HH24' ) as DEP_DEPARTURETIMEHOUR",
                "       ,DPO_GEOGRAPHICALAREA",
                "       ,GED_NAME",
                "       ,ARR_SAILINGCODE",
                "       ,ARR_PORTCODE",
                "       ,APO_NAME",
                "       ,APO_DESCRIPTION",
                "       ,ARR_PORTORDER",
                "       ,ARR_ARRIVALTIME as ARR_ARRIVALDATETIME",
                "       ,TRUNC(ARR_ARRIVALTIME) as ARR_ARRIVALDATE",
                "       ,to_char( ARR_ARRIVALTIME, 'HH24:MI' ) as ARR_ARRIVALTIME",
                "       ,to_char( ARR_ARRIVALTIME, 'HH24' ) as ARR_ARRIVALTIMEHOUR",
                "       ,APO_GEOGRAPHICALAREA",
                "       ,GEA_NAME",
                "       ,SHI_CODE",
                "       ,SHI_NAME",
                "       ,SHI_SHIPTYPE",
                "       ,SHI_DIVISION",
                "       ,SHI_PHYSICALSHIPNAME",
                "       ,PHY_DESCRIPTION",
                "        ,to_char ( DEP_DEPARTURETIME, 'Month' ) as DEP_DEPARTUREDATEMONTH",
                "      ,to_char ( DEP_DEPARTURETIME, 'MM' ) as DEP_DEPARTUREDATEMONTHSORT",
                "      ,to_char ( DEP_DEPARTURETIME, 'Day' ) as DEP_DEPARTUREDATEDAYOFWEEK",
                "      ,to_char ( DEP_DEPARTURETIME, 'Day',  'NLS_DATE_LANGUAGE=''numeric date language''' ) as DEP_DEPARTUREDATEDAYOFWEEKSORT",
                "      ,to_char ( DEP_DEPARTURETIME, 'DD' ) as DEP_DEPARTUREDATEDAY",
                "      , LIC_MAXCAPACITY",
                "    LIC_CREWNUMBER,",
                "    LIC_SELLABLECAPACITY",
                "FROM (SELECT",
                "SAILING.CODE || '-' || SAILING.STARTDATE || '-' || DEPARTSAILINGPORTSCHEDULE.PORTCODE || '-' || ARRIVALSAILINGPORTSCHEDULE.PORTCODE  as SAILING_PK ,",
                "TO_DATE (SAILING.STARTDATE, 'YYYY-MM-DD hh24:mi:ss') as SAILING_STARTDATE ,",
                "TO_DATE (SAILING.ENDDATE, 'YYYY-MM-DD hh24:mi:ss') as SAILING_ENDDATE ,",
                "SAILING.CODE as SAI_CODE,",
                "SAILING.STARTDATE as SAI_STARTDATE ,",
                "SAILING.DESCRIPTION as SAI_DESCRIPTION ,",
                "SAILING.ENDDATE as SAI_ENDDATE ,",
                "SAILING.SAILINGDEPARTUREDATE as SAI_SAILINGDEPARTUREDATE   ,",
                "SAILING.JOURNEYDURATION as SAI_JOURNEYDURATION   ,",
                "SAILING.LOCKED as SAI_LOCKED ,",
                "SAILING.SCHEDULECODE as SAI_SCHEDULECODE ,",
                "SAILING.SCHEDULESTARTDATE as SAI_SCHEDULESTARTDATE ,",
                "SAILING.SHIPTEMPLATECODE as SAI_SHIPTEMPLATECODE ,",
                "SAILING.SHIPTEMPLATESTARTDATE as SAI_SHIPTEMPLATESTARTDATE ,",
                "SAILING.LINECODE as SAI_LINECODE ,",
                "SAILING.LINESTARTDATE as SAI_LINESTARTDATE ,",
                "SAILING.SAILINGARRIVALDATE as SAI_SAILINGARRIVALDATE ,",
                "SAILING.DAYNIGHT as SAI_DAYNIGHT ,",
                "SAILING.VERSION as SAI_VERSION ,",
                "SAILING.COMMENTS as SAI_COMMENTS ,",
                "SAILING.VOYAGECODE as SAI_VOYAGECODE ,",
                "SAILING.HIDEINFORMATION as SAI_HIDEINFORMATION ,",
                "SAILING.MDS as SAI_MDS ,",
                "SAILING.NORESERVABLE as SAI_NORESERVABLE ,",
                "LINE.CODE as LIN_CODE ,",
                "LINE.STARTDATE as LIN_STARTDATE ,",
                "LINE.DESCRIPTION as LIN_DESCRIPTION,",
                "LINE.MILES as LIN_MILES ,",
                "LINE.DEPARTURE_TIME as LIN_DEPARTURE_TIME ,",
                "LINE.ARRIVAL_TIME as LIN_ARRIVAL_TIME ,",
                "LINE.ENDDATE as LIN_ENDDATE,",
                "LINE.RTSPODEPARTURENUMBER as LIN_RTSPODEPARTURENUMBER ,",
                "LINE.VERSION as LIN_VERSION ,",
                "LINE.LINEDIRECTIONID as LIN_LINEDIRECTIONID ,",
                "LINE.HOURS_BEFORE_DEPARTURE LIN_HOURS_BEFORE_DEPARTURE ,",
                "SHIPTEMPLATE.CODE as SHI_CODE,",
                "SHIPTEMPLATE.STARTDATE as SHI_STARTDATE ,",
                "SHIPTEMPLATE.NAME as  SHI_NAME,",
                "SHIPTEMPLATE.SHIPTYPE as SHI_SHIPTYPE,",
                "SHIPTEMPLATE.DIVISION as SHI_DIVISION ,",
                "SHIPTEMPLATE.PHYSICALSHIPNAME as SHI_PHYSICALSHIPNAME ,",
                "SHIPTEMPLATE.PHYSICALSHIPSTARTDATE as SHI_PHYSICALSHIPSTARTDATE ,",
                "SHIPTEMPLATE.DAYNIGHT as SHI_DAYNIGHT,",
                "SHIPTEMPLATE.ENDDATE as SHI_ENDDATE,",
                "SHIPTEMPLATE.VERSION as SHI_VERSION ,",
                "PHYSICALSHIP.NAME as PHY_NAME ,",
                "PHYSICALSHIP.STARTDATE as PHY_STARTDATE ,",
                "PHYSICALSHIP.ENDDATE as PHY_ENDDATE ,",
                "PHYSICALSHIP.DESCRIPTION as PHY_DESCRIPTION ,",
                "PHYSICALSHIP.VERSION as PHY_VERSION ,",
                "PHYSICALSHIP.VINGCARDNAME as PHY_VINGCARDNAME ,",
                "PHYSICALSHIP.LLOYDSREGISTER as PHY_LLOYDSREGISTER ,",
                "PHYSICALSHIP.CALLRADIOSIGNAL as PHY_CALLRADIOSIGNAL ,",
                "PHYSICALSHIP.CODE as PHY_CODE ,",
                "PHYSICALSHIP.WIDTHTRESHOLD as PHY_WIDTHTRESHOLD ,",
                "PHYSICALSHIP.BUILDYEAR as PHY_BUILDYEAR ,",
                "PHYSICALSHIP.COUNTRYFLAG as PHY_COUNTRYFLAG ,",
                "PHYSICALSHIP.ICECLASS as PHY_ICECLASS ,",
                "PHYSICALSHIP.ISDUMMYSHIP as PHY_ISDUMMYSHIP ,",
                "DEPARTSAILINGPORTSCHEDULE.SAILINGCODE as DEP_SAILINGCODE ,",
                "DEPARTSAILINGPORTSCHEDULE.SAILINGSTARTDATE as DEP_SAILINGSTARTDATE ,",
                "DEPARTSAILINGPORTSCHEDULE.PORTCODE as DEP_PORTCODE ,",
                "DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE as DEP_PORTSTARTDATE ,",
                "DEPARTSAILINGPORTSCHEDULE.STARTDATE as DEP_STARTDATE ,",
                "DEPARTSAILINGPORTSCHEDULE.PORTORDER as DEP_PORTORDER ,",
                "DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME as DEP_DEPARTURETIME ,",
                "DEPARTSAILINGPORTSCHEDULE.ARRIVALTIME as DEP_ARRIVALTIME ,",
                "DEPARTSAILINGPORTSCHEDULE.ENDDATE as DEP_ENDDATE ,",
                "DEPARTSAILINGPORTSCHEDULE.VERSION as DEP_VERSION ,",
                "DEPARTSAILINGPORTSCHEDULE.GVNUMBERIMPORT as DEP_GVNUMBERIMPORT ,",
                "DEPARTSAILINGPORTSCHEDULE.GVNUMBEREXPORT as DEP_GVNUMBEREXPORT ,",
                "DEPARTSAILINGPORTSCHEDULE.ACTUALDEPARTUREDATE as DEP_ACTUALDEPARTUREDATE ,",
                "DEPARTSAILINGPORTSCHEDULE.ACTUALARRIVALDATE as DEP_ACTUALARRIVALDATE ,",
                "DEPARTSAILINGPORTSCHEDULE.GSVOYAGECODE as DEP_GSVOYAGECODE ,",
                "DEPARTSAILINGPORTSCHEDULE.REPORTCLOSED as DEP_REPORTCLOSED ,",
                "DEPARTSAILINGPORTSCHEDULE.BERTH  as DEP_BERTH ,",
                "ARRIVALSAILINGPORTSCHEDULE.SAILINGCODE as ARR_SAILINGCODE ,",
                "ARRIVALSAILINGPORTSCHEDULE.SAILINGSTARTDATE as ARR_SAILINGSTARTDATE ,",
                "ARRIVALSAILINGPORTSCHEDULE.PORTCODE as ARR_PORTCODE ,",
                "ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE as ARR_PORTSTARTDATE ,",
                "ARRIVALSAILINGPORTSCHEDULE.STARTDATE as ARR_STARTDATE ,",
                "ARRIVALSAILINGPORTSCHEDULE.PORTORDER as ARR_PORTORDER ,",
                "ARRIVALSAILINGPORTSCHEDULE.DEPARTURETIME as ARR_DEPARTURETIME ,",
                "ARRIVALSAILINGPORTSCHEDULE.ARRIVALTIME as ARR_ARRIVALTIME ,",
                "ARRIVALSAILINGPORTSCHEDULE.ENDDATE as ARR_ENDDATE ,",
                "ARRIVALSAILINGPORTSCHEDULE.VERSION as ARR_VERSION ,",
                "ARRIVALSAILINGPORTSCHEDULE.GVNUMBERIMPORT as ARR_GVNUMBERIMPORT ,",
                "ARRIVALSAILINGPORTSCHEDULE.GVNUMBEREXPORT as ARR_GVNUMBEREXPORT ,",
                "ARRIVALSAILINGPORTSCHEDULE.ACTUALDEPARTUREDATE as ARR_ACTUALDEPARTUREDATE ,",
                "ARRIVALSAILINGPORTSCHEDULE.ACTUALARRIVALDATE as ARR_ACTUALARRIVALDATE ,",
                "ARRIVALSAILINGPORTSCHEDULE.GSVOYAGECODE as ARR_GSVOYAGECODE ,",
                "ARRIVALSAILINGPORTSCHEDULE.REPORTCLOSED as ARR_REPORTCLOSED ,",
                "ARRIVALSAILINGPORTSCHEDULE.BERTH  as ARR_BERTH ,",
                "LEG.CODE as LEG_CODE ,",
                "LEG.STARTDATE as LEG_STARTDATE ,",
                "LEG.DEPARTURE_PORT as LEG_DEPARTURE_PORT ,",
                "LEG.DEPARTURE_PORTSTARTDATE as LEG_DEPARTURE_PORTSTARTDATE ,",
                "LEG.ARRIVAL_PORT as LEG_ARRIVAL_PORT ,",
                "LEG.ARRIVAL_PORTSTARTDATE as LEG_ARRIVAL_PORTSTARTDATE ,",
                "LEG.ENDDATE as LEG_ENDDATE ,",
                "LEG.VERSION as LEG_VERSION ,",
                "LEG.MANDATORYDOCUMENT as LEG_MANDATORYDOCUMENT ,",
                "DEPARTPORT.CODE as DPO_CODE  ,",
                "DEPARTPORT.STARTDATE as DPO_STARTDATE  ,",
                "DEPARTPORT.GEOGRAPHICALAREA as DPO_GEOGRAPHICALAREA  ,",
                "DEPARTPORT.COUNTRY as DPO_COUNTRY  ,",
                "DEPARTPORT.NAME as DPO_NAME  ,",
                "DEPARTPORT.DESCRIPTION as DPO_DESCRIPTION  ,",
                "DEPARTPORT.EMAIL as DPO_EMAIL  ,",
                "DEPARTPORT.FAX as DPO_FAX  ,",
                "DEPARTPORT.ENDDATE as DPO_ENDDATE  ,",
                "DEPARTPORT.VERSION as DPO_VERSION  ,",
                "DEPARTPORT.PORTID as DPO_PORTID  ,",
                "DEPARTPORT.ADDRESS as DPO_ADDRESS  ,",
                "DEPARTPORT.TOWN as DPO_TOWN  ,",
                "DEPARTPORT.DISTRICT as DPO_DISTRICT  ,",
                "DEPARTPORT.POSTCODE as DPO_POSTCODE  ,",
                "DEPARTPORT.DESTINATIONCODE as DPO_DESTINATIONCODE  ,",
                "ARRIVALPORT.CODE as APO_CODE  ,",
                "ARRIVALPORT.STARTDATE as APO_STARTDATE  ,",
                "ARRIVALPORT.GEOGRAPHICALAREA as APO_GEOGRAPHICALAREA  ,",
                "ARRIVALPORT.COUNTRY as APO_COUNTRY  ,",
                "ARRIVALPORT.NAME as APO_NAME  ,",
                "ARRIVALPORT.DESCRIPTION as APO_DESCRIPTION  ,",
                "ARRIVALPORT.EMAIL as APO_EMAIL  ,",
                "ARRIVALPORT.FAX as APO_FAX  ,",
                "ARRIVALPORT.ENDDATE as APO_ENDDATE  ,",
                "ARRIVALPORT.VERSION as APO_VERSION  ,",
                "ARRIVALPORT.PORTID as APO_PORTID  ,",
                "ARRIVALPORT.ADDRESS as APO_ADDRESS  ,",
                "ARRIVALPORT.TOWN as APO_TOWN  ,",
                "ARRIVALPORT.DISTRICT as APO_DISTRICT  ,",
                "ARRIVALPORT.POSTCODE as APO_POSTCODE  ,",
                "ARRIVALPORT.DESTINATIONCODE as APO_DESTINATIONCODE  ,",
                "DEPARTGEOGRAPHICALAREA.CODE as GED_CODE ,",
                "DEPARTGEOGRAPHICALAREA.NAME as GED_NAME ,",
                "DEPARTGEOGRAPHICALAREA.COUNTRY as GED_COUNTRY ,",
                "ARRIVALGEOGRAPHICALAREA.CODE as GEA_CODE ,",
                "ARRIVALGEOGRAPHICALAREA.NAME as GEA_NAME ,",
                "ARRIVALGEOGRAPHICALAREA.COUNTRY as GEA_COUNTRY,",
                "SAILINGVESSELLICENSE.VESSELLICENSECODE as LIC_VESSELLICENSECODE,",
                "SAILINGVESSELLICENSE.CREWNUMBER as LIC_CREWNUMBER,",
                "SAILINGVESSELLICENSE.SELLABLECAPACITY as LIC_SELLABLECAPACITY,",
                "SAILINGVESSELLICENSE.MAXCAPACITY as LIC_MAXCAPACITY",
                "",
                "FROM",
                "eBooking.MSP_SAILING SAILING,",
                "(select CODE, MAX(STARTDATE) as STARTDATE from eBooking.MSP_SAILING group by CODE) SAILINGFILTER,",
                "eBooking.MSP_LINE LINE ,",
                "eBooking.MSP_SHIPTEMPLATE SHIPTEMPLATE ,",
                "eBooking.MSP_PHYSICALSHIP PHYSICALSHIP ,",
                "eBooking.MSP_SAILINGPORTSCHEDULE DEPARTSAILINGPORTSCHEDULE ,",
                "eBooking.MSP_SAILINGPORTSCHEDULE ARRIVALSAILINGPORTSCHEDULE ,",
                "eBooking.MSP_LEG LEG ,",
                "eBooking.MSP_PORT DEPARTPORT ,",
                "eBooking.MSP_PORT ARRIVALPORT ,",
                "eBooking.MSP_GEOGRAPHICALAREA DEPARTGEOGRAPHICALAREA ,",
                "eBooking.MSP_GEOGRAPHICALAREA ARRIVALGEOGRAPHICALAREA,",
                "eBooking.MSP_SAILINGVESSELLICENSE SAILINGVESSELLICENSE,",
                "(select SAILINGCODE, SHIPTEMPLATECODE, MAX(STARTDATE) as STARTDATE from eBooking.MSP_SAILINGVESSELLICENSE group by SAILINGCODE, SHIPTEMPLATECODE) LICENSEFILTER",
                "WHERE ",
                "SAILING.CODE = SAILINGFILTER.CODE",
                "and SAILING.STARTDATE = SAILINGFILTER.STARTDATE",
                "and SAILING.LINECODE = LINE.CODE",
                "AND SAILING.SHIPTEMPLATECODE = SHIPTEMPLATE.CODE",
                "  AND SAILING.SHIPTEMPLATESTARTDATE = SHIPTEMPLATE.STARTDATE",
                "  AND PHYSICALSHIP.NAME = SHIPTEMPLATE.PHYSICALSHIPNAME",
                "AND PHYSICALSHIP.STARTDATE = SHIPTEMPLATE.PHYSICALSHIPSTARTDATE",
                "  AND SAILING.CODE = DEPARTSAILINGPORTSCHEDULE.SAILINGCODE",
                "  AND SAILING.STARTDATE = DEPARTSAILINGPORTSCHEDULE.SAILINGSTARTDATE",
                "  AND DEPARTSAILINGPORTSCHEDULE.SAILINGCODE = ARRIVALSAILINGPORTSCHEDULE.SAILINGCODE",
                "  AND ARRIVALSAILINGPORTSCHEDULE.PORTORDER = DEPARTSAILINGPORTSCHEDULE.PORTORDER + 1",
                "  AND ARRIVALSAILINGPORTSCHEDULE.STARTDATE = DEPARTSAILINGPORTSCHEDULE.STARTDATE",
                "  AND DEPARTSAILINGPORTSCHEDULE.PORTCODE = LEG.DEPARTURE_PORT",
                "  AND DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE = LEG.DEPARTURE_PORTSTARTDATE",
                "  AND ARRIVALSAILINGPORTSCHEDULE.PORTCODE = LEG.ARRIVAL_PORT",
                "  AND ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE = LEG.ARRIVAL_PORTSTARTDATE",
                "AND DEPARTSAILINGPORTSCHEDULE.PORTCODE = DEPARTPORT.CODE",
                "  AND DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE = DEPARTPORT.STARTDATE",
                "  AND ARRIVALSAILINGPORTSCHEDULE.PORTCODE = ARRIVALPORT.CODE",
                "  AND ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE = ARRIVALPORT.STARTDATE",
                "  AND DEPARTPORT.GEOGRAPHICALAREA = DEPARTGEOGRAPHICALAREA.CODE",
                "  AND ARRIVALPORT.GEOGRAPHICALAREA = ARRIVALGEOGRAPHICALAREA.CODE",
                "  AND SAILING.CODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
                "  AND SAILING.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
                "  AND SAILING.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE ",
                "  AND LICENSEFILTER.SAILINGCODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
                "  AND LICENSEFILTER.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
                "  AND LICENSEFILTER.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE",
                ") D_STG_EBK_SAILING"
              ],
              "dataSource": "Oracle scan.stg01.rac.bcferries.corp"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT  distinct SAILING_PK",
                  "       ,SAILING_STARTDATE",
                  "       ,SAILING_ENDDATE",
                  "       ,SAI_CODE",
                  "       ,SAI_SAILINGDEPARTUREDATE",
                  "       ,SAI_SAILINGARRIVALDATE",
                  "       ,SAI_LOCKED",
                  "       ,SAI_HIDEINFORMATION",
                  "       ,SAI_SCHEDULECODE",
                  "       ,case",
                  "            when (LIN_CODE) in ('10BECA', '10BECB', '10BECC', '10PBBA', '10PBBB', '10PBBC', '10POFA', '10SHWA', '10SHWB') then ('10S')",
                  "            when (LIN_CODE) in ('10PPHA', '10PPHB', '10PPHC', '10PPHD', '10PPRA', '10PPRB', '10PPRC', '10PPRD') then ('10')",
                  "            when (substr(LIN_CODE,1 ,1) in ('5', '9')) then (substr(LIN_CODE,1,1))",
                  "            when (substr(LIN_CODE,1,2) in ('01', '02', '03')) then (substr(LIN_CODE,2,1))",
                  "            when (substr(LIN_CODE,1,1) not in ('5', '9')) then (substr(LIN_CODE,1,2))",
                  "        end as ROUTECODE",
                  "       ,case",
                  "           when (LIN_CODE) in ('10BECA', '10BECB', '10BECC', '10PBBA', '10PBBB', '10PBBC', '10POFA', '10SHWA', '10SHWB') then ('10S')",
                  "           when (LIN_CODE) in ('10PPHA', '10PPHB', '10PPHC', '10PPHD', '10PPRA', '10PPRB', '10PPRC', '10PPRD') then ('10')",
                  "           when (substr( LIN_CODE,1 ,1) in ('5', '9')) then ( '0' || (substr( LIN_CODE,1,1)) )",
                  "           when (substr( LIN_CODE,1,1) not in ('5', '9')) then (substr( LIN_CODE,1,2))",
                  "        end as ROUTESORT",
                  "       ,LIN_CODE",
                  "       ,LIN_DESCRIPTION",
                  "       ,LEG_CODE",
                  "       ,DEP_PORTCODE",
                  "       ,DPO_NAME",
                  "       ,DPO_DESCRIPTION",
                  "       ,DEP_PORTORDER",
                  "       ,DEP_DEPARTURETIME as DEP_DEPARTUREDATETIME",
                  "       ,TRUNC(DEP_DEPARTURETIME) as DEP_DEPARTUREDATE",
                  "       ,to_char( DEP_DEPARTURETIME, 'HH24:MI' ) as DEP_DEPARTURETIME",
                  "       ,to_char( DEP_DEPARTURETIME, 'HH24' ) as DEP_DEPARTURETIMEHOUR",
                  "       ,DPO_GEOGRAPHICALAREA",
                  "       ,GED_NAME",
                  "       ,ARR_SAILINGCODE",
                  "       ,ARR_PORTCODE",
                  "       ,APO_NAME",
                  "       ,APO_DESCRIPTION",
                  "       ,ARR_PORTORDER",
                  "       ,ARR_ARRIVALTIME as ARR_ARRIVALDATETIME",
                  "       ,TRUNC(ARR_ARRIVALTIME) as ARR_ARRIVALDATE",
                  "       ,to_char( ARR_ARRIVALTIME, 'HH24:MI' ) as ARR_ARRIVALTIME",
                  "       ,to_char( ARR_ARRIVALTIME, 'HH24' ) as ARR_ARRIVALTIMEHOUR",
                  "       ,APO_GEOGRAPHICALAREA",
                  "       ,GEA_NAME",
                  "       ,SHI_CODE",
                  "       ,SHI_NAME",
                  "       ,SHI_SHIPTYPE",
                  "       ,SHI_DIVISION",
                  "       ,SHI_PHYSICALSHIPNAME",
                  "       ,PHY_DESCRIPTION",
                  "        ,to_char ( DEP_DEPARTURETIME, 'Month' ) as DEP_DEPARTUREDATEMONTH",
                  "      ,to_char ( DEP_DEPARTURETIME, 'MM' ) as DEP_DEPARTUREDATEMONTHSORT",
                  "      ,to_char ( DEP_DEPARTURETIME, 'Day' ) as DEP_DEPARTUREDATEDAYOFWEEK",
                  "      ,to_char ( DEP_DEPARTURETIME, 'Day',  'NLS_DATE_LANGUAGE=''numeric date language''' ) as DEP_DEPARTUREDATEDAYOFWEEKSORT",
                  "      ,to_char ( DEP_DEPARTURETIME, 'DD' ) as DEP_DEPARTUREDATEDAY",
                  "      , LIC_MAXCAPACITY",
                  "    LIC_CREWNUMBER,",
                  "    LIC_SELLABLECAPACITY",
                  "FROM (SELECT",
                  "SAILING.CODE || '-' || SAILING.STARTDATE || '-' || DEPARTSAILINGPORTSCHEDULE.PORTCODE || '-' || ARRIVALSAILINGPORTSCHEDULE.PORTCODE  as SAILING_PK ,",
                  "TO_DATE (SAILING.STARTDATE, 'YYYY-MM-DD hh24:mi:ss') as SAILING_STARTDATE ,",
                  "TO_DATE (SAILING.ENDDATE, 'YYYY-MM-DD hh24:mi:ss') as SAILING_ENDDATE ,",
                  "SAILING.CODE as SAI_CODE,",
                  "SAILING.STARTDATE as SAI_STARTDATE ,",
                  "SAILING.DESCRIPTION as SAI_DESCRIPTION ,",
                  "SAILING.ENDDATE as SAI_ENDDATE ,",
                  "SAILING.SAILINGDEPARTUREDATE as SAI_SAILINGDEPARTUREDATE   ,",
                  "SAILING.JOURNEYDURATION as SAI_JOURNEYDURATION   ,",
                  "SAILING.LOCKED as SAI_LOCKED ,",
                  "SAILING.SCHEDULECODE as SAI_SCHEDULECODE ,",
                  "SAILING.SCHEDULESTARTDATE as SAI_SCHEDULESTARTDATE ,",
                  "SAILING.SHIPTEMPLATECODE as SAI_SHIPTEMPLATECODE ,",
                  "SAILING.SHIPTEMPLATESTARTDATE as SAI_SHIPTEMPLATESTARTDATE ,",
                  "SAILING.LINECODE as SAI_LINECODE ,",
                  "SAILING.LINESTARTDATE as SAI_LINESTARTDATE ,",
                  "SAILING.SAILINGARRIVALDATE as SAI_SAILINGARRIVALDATE ,",
                  "SAILING.DAYNIGHT as SAI_DAYNIGHT ,",
                  "SAILING.VERSION as SAI_VERSION ,",
                  "SAILING.COMMENTS as SAI_COMMENTS ,",
                  "SAILING.VOYAGECODE as SAI_VOYAGECODE ,",
                  "SAILING.HIDEINFORMATION as SAI_HIDEINFORMATION ,",
                  "SAILING.MDS as SAI_MDS ,",
                  "SAILING.NORESERVABLE as SAI_NORESERVABLE ,",
                  "LINE.CODE as LIN_CODE ,",
                  "LINE.STARTDATE as LIN_STARTDATE ,",
                  "LINE.DESCRIPTION as LIN_DESCRIPTION,",
                  "LINE.MILES as LIN_MILES ,",
                  "LINE.DEPARTURE_TIME as LIN_DEPARTURE_TIME ,",
                  "LINE.ARRIVAL_TIME as LIN_ARRIVAL_TIME ,",
                  "LINE.ENDDATE as LIN_ENDDATE,",
                  "LINE.RTSPODEPARTURENUMBER as LIN_RTSPODEPARTURENUMBER ,",
                  "LINE.VERSION as LIN_VERSION ,",
                  "LINE.LINEDIRECTIONID as LIN_LINEDIRECTIONID ,",
                  "LINE.HOURS_BEFORE_DEPARTURE LIN_HOURS_BEFORE_DEPARTURE ,",
                  "SHIPTEMPLATE.CODE as SHI_CODE,",
                  "SHIPTEMPLATE.STARTDATE as SHI_STARTDATE ,",
                  "SHIPTEMPLATE.NAME as  SHI_NAME,",
                  "SHIPTEMPLATE.SHIPTYPE as SHI_SHIPTYPE,",
                  "SHIPTEMPLATE.DIVISION as SHI_DIVISION ,",
                  "SHIPTEMPLATE.PHYSICALSHIPNAME as SHI_PHYSICALSHIPNAME ,",
                  "SHIPTEMPLATE.PHYSICALSHIPSTARTDATE as SHI_PHYSICALSHIPSTARTDATE ,",
                  "SHIPTEMPLATE.DAYNIGHT as SHI_DAYNIGHT,",
                  "SHIPTEMPLATE.ENDDATE as SHI_ENDDATE,",
                  "SHIPTEMPLATE.VERSION as SHI_VERSION ,",
                  "PHYSICALSHIP.NAME as PHY_NAME ,",
                  "PHYSICALSHIP.STARTDATE as PHY_STARTDATE ,",
                  "PHYSICALSHIP.ENDDATE as PHY_ENDDATE ,",
                  "PHYSICALSHIP.DESCRIPTION as PHY_DESCRIPTION ,",
                  "PHYSICALSHIP.VERSION as PHY_VERSION ,",
                  "PHYSICALSHIP.VINGCARDNAME as PHY_VINGCARDNAME ,",
                  "PHYSICALSHIP.LLOYDSREGISTER as PHY_LLOYDSREGISTER ,",
                  "PHYSICALSHIP.CALLRADIOSIGNAL as PHY_CALLRADIOSIGNAL ,",
                  "PHYSICALSHIP.CODE as PHY_CODE ,",
                  "PHYSICALSHIP.WIDTHTRESHOLD as PHY_WIDTHTRESHOLD ,",
                  "PHYSICALSHIP.BUILDYEAR as PHY_BUILDYEAR ,",
                  "PHYSICALSHIP.COUNTRYFLAG as PHY_COUNTRYFLAG ,",
                  "PHYSICALSHIP.ICECLASS as PHY_ICECLASS ,",
                  "PHYSICALSHIP.ISDUMMYSHIP as PHY_ISDUMMYSHIP ,",
                  "DEPARTSAILINGPORTSCHEDULE.SAILINGCODE as DEP_SAILINGCODE ,",
                  "DEPARTSAILINGPORTSCHEDULE.SAILINGSTARTDATE as DEP_SAILINGSTARTDATE ,",
                  "DEPARTSAILINGPORTSCHEDULE.PORTCODE as DEP_PORTCODE ,",
                  "DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE as DEP_PORTSTARTDATE ,",
                  "DEPARTSAILINGPORTSCHEDULE.STARTDATE as DEP_STARTDATE ,",
                  "DEPARTSAILINGPORTSCHEDULE.PORTORDER as DEP_PORTORDER ,",
                  "DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME as DEP_DEPARTURETIME ,",
                  "DEPARTSAILINGPORTSCHEDULE.ARRIVALTIME as DEP_ARRIVALTIME ,",
                  "DEPARTSAILINGPORTSCHEDULE.ENDDATE as DEP_ENDDATE ,",
                  "DEPARTSAILINGPORTSCHEDULE.VERSION as DEP_VERSION ,",
                  "DEPARTSAILINGPORTSCHEDULE.GVNUMBERIMPORT as DEP_GVNUMBERIMPORT ,",
                  "DEPARTSAILINGPORTSCHEDULE.GVNUMBEREXPORT as DEP_GVNUMBEREXPORT ,",
                  "DEPARTSAILINGPORTSCHEDULE.ACTUALDEPARTUREDATE as DEP_ACTUALDEPARTUREDATE ,",
                  "DEPARTSAILINGPORTSCHEDULE.ACTUALARRIVALDATE as DEP_ACTUALARRIVALDATE ,",
                  "DEPARTSAILINGPORTSCHEDULE.GSVOYAGECODE as DEP_GSVOYAGECODE ,",
                  "DEPARTSAILINGPORTSCHEDULE.REPORTCLOSED as DEP_REPORTCLOSED ,",
                  "DEPARTSAILINGPORTSCHEDULE.BERTH  as DEP_BERTH ,",
                  "ARRIVALSAILINGPORTSCHEDULE.SAILINGCODE as ARR_SAILINGCODE ,",
                  "ARRIVALSAILINGPORTSCHEDULE.SAILINGSTARTDATE as ARR_SAILINGSTARTDATE ,",
                  "ARRIVALSAILINGPORTSCHEDULE.PORTCODE as ARR_PORTCODE ,",
                  "ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE as ARR_PORTSTARTDATE ,",
                  "ARRIVALSAILINGPORTSCHEDULE.STARTDATE as ARR_STARTDATE ,",
                  "ARRIVALSAILINGPORTSCHEDULE.PORTORDER as ARR_PORTORDER ,",
                  "ARRIVALSAILINGPORTSCHEDULE.DEPARTURETIME as ARR_DEPARTURETIME ,",
                  "ARRIVALSAILINGPORTSCHEDULE.ARRIVALTIME as ARR_ARRIVALTIME ,",
                  "ARRIVALSAILINGPORTSCHEDULE.ENDDATE as ARR_ENDDATE ,",
                  "ARRIVALSAILINGPORTSCHEDULE.VERSION as ARR_VERSION ,",
                  "ARRIVALSAILINGPORTSCHEDULE.GVNUMBERIMPORT as ARR_GVNUMBERIMPORT ,",
                  "ARRIVALSAILINGPORTSCHEDULE.GVNUMBEREXPORT as ARR_GVNUMBEREXPORT ,",
                  "ARRIVALSAILINGPORTSCHEDULE.ACTUALDEPARTUREDATE as ARR_ACTUALDEPARTUREDATE ,",
                  "ARRIVALSAILINGPORTSCHEDULE.ACTUALARRIVALDATE as ARR_ACTUALARRIVALDATE ,",
                  "ARRIVALSAILINGPORTSCHEDULE.GSVOYAGECODE as ARR_GSVOYAGECODE ,",
                  "ARRIVALSAILINGPORTSCHEDULE.REPORTCLOSED as ARR_REPORTCLOSED ,",
                  "ARRIVALSAILINGPORTSCHEDULE.BERTH  as ARR_BERTH ,",
                  "LEG.CODE as LEG_CODE ,",
                  "LEG.STARTDATE as LEG_STARTDATE ,",
                  "LEG.DEPARTURE_PORT as LEG_DEPARTURE_PORT ,",
                  "LEG.DEPARTURE_PORTSTARTDATE as LEG_DEPARTURE_PORTSTARTDATE ,",
                  "LEG.ARRIVAL_PORT as LEG_ARRIVAL_PORT ,",
                  "LEG.ARRIVAL_PORTSTARTDATE as LEG_ARRIVAL_PORTSTARTDATE ,",
                  "LEG.ENDDATE as LEG_ENDDATE ,",
                  "LEG.VERSION as LEG_VERSION ,",
                  "LEG.MANDATORYDOCUMENT as LEG_MANDATORYDOCUMENT ,",
                  "DEPARTPORT.CODE as DPO_CODE  ,",
                  "DEPARTPORT.STARTDATE as DPO_STARTDATE  ,",
                  "DEPARTPORT.GEOGRAPHICALAREA as DPO_GEOGRAPHICALAREA  ,",
                  "DEPARTPORT.COUNTRY as DPO_COUNTRY  ,",
                  "DEPARTPORT.NAME as DPO_NAME  ,",
                  "DEPARTPORT.DESCRIPTION as DPO_DESCRIPTION  ,",
                  "DEPARTPORT.EMAIL as DPO_EMAIL  ,",
                  "DEPARTPORT.FAX as DPO_FAX  ,",
                  "DEPARTPORT.ENDDATE as DPO_ENDDATE  ,",
                  "DEPARTPORT.VERSION as DPO_VERSION  ,",
                  "DEPARTPORT.PORTID as DPO_PORTID  ,",
                  "DEPARTPORT.ADDRESS as DPO_ADDRESS  ,",
                  "DEPARTPORT.TOWN as DPO_TOWN  ,",
                  "DEPARTPORT.DISTRICT as DPO_DISTRICT  ,",
                  "DEPARTPORT.POSTCODE as DPO_POSTCODE  ,",
                  "DEPARTPORT.DESTINATIONCODE as DPO_DESTINATIONCODE  ,",
                  "ARRIVALPORT.CODE as APO_CODE  ,",
                  "ARRIVALPORT.STARTDATE as APO_STARTDATE  ,",
                  "ARRIVALPORT.GEOGRAPHICALAREA as APO_GEOGRAPHICALAREA  ,",
                  "ARRIVALPORT.COUNTRY as APO_COUNTRY  ,",
                  "ARRIVALPORT.NAME as APO_NAME  ,",
                  "ARRIVALPORT.DESCRIPTION as APO_DESCRIPTION  ,",
                  "ARRIVALPORT.EMAIL as APO_EMAIL  ,",
                  "ARRIVALPORT.FAX as APO_FAX  ,",
                  "ARRIVALPORT.ENDDATE as APO_ENDDATE  ,",
                  "ARRIVALPORT.VERSION as APO_VERSION  ,",
                  "ARRIVALPORT.PORTID as APO_PORTID  ,",
                  "ARRIVALPORT.ADDRESS as APO_ADDRESS  ,",
                  "ARRIVALPORT.TOWN as APO_TOWN  ,",
                  "ARRIVALPORT.DISTRICT as APO_DISTRICT  ,",
                  "ARRIVALPORT.POSTCODE as APO_POSTCODE  ,",
                  "ARRIVALPORT.DESTINATIONCODE as APO_DESTINATIONCODE  ,",
                  "DEPARTGEOGRAPHICALAREA.CODE as GED_CODE ,",
                  "DEPARTGEOGRAPHICALAREA.NAME as GED_NAME ,",
                  "DEPARTGEOGRAPHICALAREA.COUNTRY as GED_COUNTRY ,",
                  "ARRIVALGEOGRAPHICALAREA.CODE as GEA_CODE ,",
                  "ARRIVALGEOGRAPHICALAREA.NAME as GEA_NAME ,",
                  "ARRIVALGEOGRAPHICALAREA.COUNTRY as GEA_COUNTRY,",
                  "SAILINGVESSELLICENSE.VESSELLICENSECODE as LIC_VESSELLICENSECODE,",
                  "SAILINGVESSELLICENSE.CREWNUMBER as LIC_CREWNUMBER,",
                  "SAILINGVESSELLICENSE.SELLABLECAPACITY as LIC_SELLABLECAPACITY,",
                  "SAILINGVESSELLICENSE.MAXCAPACITY as LIC_MAXCAPACITY",
                  "",
                  "FROM",
                  "eBooking.MSP_SAILING SAILING,",
                  "(select CODE, MAX(STARTDATE) as STARTDATE from eBooking.MSP_SAILING group by CODE) SAILINGFILTER,",
                  "eBooking.MSP_LINE LINE ,",
                  "eBooking.MSP_SHIPTEMPLATE SHIPTEMPLATE ,",
                  "eBooking.MSP_PHYSICALSHIP PHYSICALSHIP ,",
                  "eBooking.MSP_SAILINGPORTSCHEDULE DEPARTSAILINGPORTSCHEDULE ,",
                  "eBooking.MSP_SAILINGPORTSCHEDULE ARRIVALSAILINGPORTSCHEDULE ,",
                  "eBooking.MSP_LEG LEG ,",
                  "eBooking.MSP_PORT DEPARTPORT ,",
                  "eBooking.MSP_PORT ARRIVALPORT ,",
                  "eBooking.MSP_GEOGRAPHICALAREA DEPARTGEOGRAPHICALAREA ,",
                  "eBooking.MSP_GEOGRAPHICALAREA ARRIVALGEOGRAPHICALAREA,",
                  "eBooking.MSP_SAILINGVESSELLICENSE SAILINGVESSELLICENSE,",
                  "(select SAILINGCODE, SHIPTEMPLATECODE, MAX(STARTDATE) as STARTDATE from eBooking.MSP_SAILINGVESSELLICENSE group by SAILINGCODE, SHIPTEMPLATECODE) LICENSEFILTER",
                  "WHERE ",
                  "SAILING.CODE = SAILINGFILTER.CODE",
                  "and SAILING.STARTDATE = SAILINGFILTER.STARTDATE",
                  "and SAILING.LINECODE = LINE.CODE",
                  "AND SAILING.SHIPTEMPLATECODE = SHIPTEMPLATE.CODE",
                  "  AND SAILING.SHIPTEMPLATESTARTDATE = SHIPTEMPLATE.STARTDATE",
                  "  AND PHYSICALSHIP.NAME = SHIPTEMPLATE.PHYSICALSHIPNAME",
                  "AND PHYSICALSHIP.STARTDATE = SHIPTEMPLATE.PHYSICALSHIPSTARTDATE",
                  "  AND SAILING.CODE = DEPARTSAILINGPORTSCHEDULE.SAILINGCODE",
                  "  AND SAILING.STARTDATE = DEPARTSAILINGPORTSCHEDULE.SAILINGSTARTDATE",
                  "  AND DEPARTSAILINGPORTSCHEDULE.SAILINGCODE = ARRIVALSAILINGPORTSCHEDULE.SAILINGCODE",
                  "  AND ARRIVALSAILINGPORTSCHEDULE.PORTORDER = DEPARTSAILINGPORTSCHEDULE.PORTORDER + 1",
                  "  AND ARRIVALSAILINGPORTSCHEDULE.STARTDATE = DEPARTSAILINGPORTSCHEDULE.STARTDATE",
                  "  AND DEPARTSAILINGPORTSCHEDULE.PORTCODE = LEG.DEPARTURE_PORT",
                  "  AND DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE = LEG.DEPARTURE_PORTSTARTDATE",
                  "  AND ARRIVALSAILINGPORTSCHEDULE.PORTCODE = LEG.ARRIVAL_PORT",
                  "  AND ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE = LEG.ARRIVAL_PORTSTARTDATE",
                  "AND DEPARTSAILINGPORTSCHEDULE.PORTCODE = DEPARTPORT.CODE",
                  "  AND DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE = DEPARTPORT.STARTDATE",
                  "  AND ARRIVALSAILINGPORTSCHEDULE.PORTCODE = ARRIVALPORT.CODE",
                  "  AND ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE = ARRIVALPORT.STARTDATE",
                  "  AND DEPARTPORT.GEOGRAPHICALAREA = DEPARTGEOGRAPHICALAREA.CODE",
                  "  AND ARRIVALPORT.GEOGRAPHICALAREA = ARRIVALGEOGRAPHICALAREA.CODE",
                  "  AND SAILING.CODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
                  "  AND SAILING.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
                  "  AND SAILING.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE ",
                  "  AND LICENSEFILTER.SAILINGCODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
                  "  AND LICENSEFILTER.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
                  "  AND LICENSEFILTER.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE",
                  ") D_STG_EBK_SAILING</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT  distinct SAILING_PK",
              "       ,SAILING_STARTDATE",
              "       ,SAILING_ENDDATE",
              "       ,SAI_CODE",
              "       ,SAI_SAILINGDEPARTUREDATE",
              "       ,SAI_SAILINGARRIVALDATE",
              "       ,SAI_LOCKED",
              "       ,SAI_HIDEINFORMATION",
              "       ,SAI_SCHEDULECODE",
              "       ,case",
              "            when (LIN_CODE) in ('10BECA', '10BECB', '10BECC', '10PBBA', '10PBBB', '10PBBC', '10POFA', '10SHWA', '10SHWB') then ('10S')",
              "            when (LIN_CODE) in ('10PPHA', '10PPHB', '10PPHC', '10PPHD', '10PPRA', '10PPRB', '10PPRC', '10PPRD') then ('10')",
              "            when (substr(LIN_CODE,1 ,1) in ('5', '9')) then (substr(LIN_CODE,1,1))",
              "            when (substr(LIN_CODE,1,2) in ('01', '02', '03')) then (substr(LIN_CODE,2,1))",
              "            when (substr(LIN_CODE,1,1) not in ('5', '9')) then (substr(LIN_CODE,1,2))",
              "        end as ROUTECODE",
              "       ,case",
              "           when (LIN_CODE) in ('10BECA', '10BECB', '10BECC', '10PBBA', '10PBBB', '10PBBC', '10POFA', '10SHWA', '10SHWB') then ('10S')",
              "           when (LIN_CODE) in ('10PPHA', '10PPHB', '10PPHC', '10PPHD', '10PPRA', '10PPRB', '10PPRC', '10PPRD') then ('10')",
              "           when (substr( LIN_CODE,1 ,1) in ('5', '9')) then ( '0' || (substr( LIN_CODE,1,1)) )",
              "           when (substr( LIN_CODE,1,1) not in ('5', '9')) then (substr( LIN_CODE,1,2))",
              "        end as ROUTESORT",
              "       ,LIN_CODE",
              "       ,LIN_DESCRIPTION",
              "       ,LEG_CODE",
              "       ,DEP_PORTCODE",
              "       ,DPO_NAME",
              "       ,DPO_DESCRIPTION",
              "       ,DEP_PORTORDER",
              "       ,DEP_DEPARTURETIME as DEP_DEPARTUREDATETIME",
              "       ,TRUNC(DEP_DEPARTURETIME) as DEP_DEPARTUREDATE",
              "       ,to_char( DEP_DEPARTURETIME, 'HH24:MI' ) as DEP_DEPARTURETIME",
              "       ,to_char( DEP_DEPARTURETIME, 'HH24' ) as DEP_DEPARTURETIMEHOUR",
              "       ,DPO_GEOGRAPHICALAREA",
              "       ,GED_NAME",
              "       ,ARR_SAILINGCODE",
              "       ,ARR_PORTCODE",
              "       ,APO_NAME",
              "       ,APO_DESCRIPTION",
              "       ,ARR_PORTORDER",
              "       ,ARR_ARRIVALTIME as ARR_ARRIVALDATETIME",
              "       ,TRUNC(ARR_ARRIVALTIME) as ARR_ARRIVALDATE",
              "       ,to_char( ARR_ARRIVALTIME, 'HH24:MI' ) as ARR_ARRIVALTIME",
              "       ,to_char( ARR_ARRIVALTIME, 'HH24' ) as ARR_ARRIVALTIMEHOUR",
              "       ,APO_GEOGRAPHICALAREA",
              "       ,GEA_NAME",
              "       ,SHI_CODE",
              "       ,SHI_NAME",
              "       ,SHI_SHIPTYPE",
              "       ,SHI_DIVISION",
              "       ,SHI_PHYSICALSHIPNAME",
              "       ,PHY_DESCRIPTION",
              "        ,to_char ( DEP_DEPARTURETIME, 'Month' ) as DEP_DEPARTUREDATEMONTH",
              "      ,to_char ( DEP_DEPARTURETIME, 'MM' ) as DEP_DEPARTUREDATEMONTHSORT",
              "      ,to_char ( DEP_DEPARTURETIME, 'Day' ) as DEP_DEPARTUREDATEDAYOFWEEK",
              "      ,to_char ( DEP_DEPARTURETIME, 'Day',  'NLS_DATE_LANGUAGE=''numeric date language''' ) as DEP_DEPARTUREDATEDAYOFWEEKSORT",
              "      ,to_char ( DEP_DEPARTURETIME, 'DD' ) as DEP_DEPARTUREDATEDAY",
              "      , LIC_MAXCAPACITY",
              "    LIC_CREWNUMBER,",
              "    LIC_SELLABLECAPACITY",
              "FROM (SELECT",
              "SAILING.CODE || '-' || SAILING.STARTDATE || '-' || DEPARTSAILINGPORTSCHEDULE.PORTCODE || '-' || ARRIVALSAILINGPORTSCHEDULE.PORTCODE  as SAILING_PK ,",
              "TO_DATE (SAILING.STARTDATE, 'YYYY-MM-DD hh24:mi:ss') as SAILING_STARTDATE ,",
              "TO_DATE (SAILING.ENDDATE, 'YYYY-MM-DD hh24:mi:ss') as SAILING_ENDDATE ,",
              "SAILING.CODE as SAI_CODE,",
              "SAILING.STARTDATE as SAI_STARTDATE ,",
              "SAILING.DESCRIPTION as SAI_DESCRIPTION ,",
              "SAILING.ENDDATE as SAI_ENDDATE ,",
              "SAILING.SAILINGDEPARTUREDATE as SAI_SAILINGDEPARTUREDATE   ,",
              "SAILING.JOURNEYDURATION as SAI_JOURNEYDURATION   ,",
              "SAILING.LOCKED as SAI_LOCKED ,",
              "SAILING.SCHEDULECODE as SAI_SCHEDULECODE ,",
              "SAILING.SCHEDULESTARTDATE as SAI_SCHEDULESTARTDATE ,",
              "SAILING.SHIPTEMPLATECODE as SAI_SHIPTEMPLATECODE ,",
              "SAILING.SHIPTEMPLATESTARTDATE as SAI_SHIPTEMPLATESTARTDATE ,",
              "SAILING.LINECODE as SAI_LINECODE ,",
              "SAILING.LINESTARTDATE as SAI_LINESTARTDATE ,",
              "SAILING.SAILINGARRIVALDATE as SAI_SAILINGARRIVALDATE ,",
              "SAILING.DAYNIGHT as SAI_DAYNIGHT ,",
              "SAILING.VERSION as SAI_VERSION ,",
              "SAILING.COMMENTS as SAI_COMMENTS ,",
              "SAILING.VOYAGECODE as SAI_VOYAGECODE ,",
              "SAILING.HIDEINFORMATION as SAI_HIDEINFORMATION ,",
              "SAILING.MDS as SAI_MDS ,",
              "SAILING.NORESERVABLE as SAI_NORESERVABLE ,",
              "LINE.CODE as LIN_CODE ,",
              "LINE.STARTDATE as LIN_STARTDATE ,",
              "LINE.DESCRIPTION as LIN_DESCRIPTION,",
              "LINE.MILES as LIN_MILES ,",
              "LINE.DEPARTURE_TIME as LIN_DEPARTURE_TIME ,",
              "LINE.ARRIVAL_TIME as LIN_ARRIVAL_TIME ,",
              "LINE.ENDDATE as LIN_ENDDATE,",
              "LINE.RTSPODEPARTURENUMBER as LIN_RTSPODEPARTURENUMBER ,",
              "LINE.VERSION as LIN_VERSION ,",
              "LINE.LINEDIRECTIONID as LIN_LINEDIRECTIONID ,",
              "LINE.HOURS_BEFORE_DEPARTURE LIN_HOURS_BEFORE_DEPARTURE ,",
              "SHIPTEMPLATE.CODE as SHI_CODE,",
              "SHIPTEMPLATE.STARTDATE as SHI_STARTDATE ,",
              "SHIPTEMPLATE.NAME as  SHI_NAME,",
              "SHIPTEMPLATE.SHIPTYPE as SHI_SHIPTYPE,",
              "SHIPTEMPLATE.DIVISION as SHI_DIVISION ,",
              "SHIPTEMPLATE.PHYSICALSHIPNAME as SHI_PHYSICALSHIPNAME ,",
              "SHIPTEMPLATE.PHYSICALSHIPSTARTDATE as SHI_PHYSICALSHIPSTARTDATE ,",
              "SHIPTEMPLATE.DAYNIGHT as SHI_DAYNIGHT,",
              "SHIPTEMPLATE.ENDDATE as SHI_ENDDATE,",
              "SHIPTEMPLATE.VERSION as SHI_VERSION ,",
              "PHYSICALSHIP.NAME as PHY_NAME ,",
              "PHYSICALSHIP.STARTDATE as PHY_STARTDATE ,",
              "PHYSICALSHIP.ENDDATE as PHY_ENDDATE ,",
              "PHYSICALSHIP.DESCRIPTION as PHY_DESCRIPTION ,",
              "PHYSICALSHIP.VERSION as PHY_VERSION ,",
              "PHYSICALSHIP.VINGCARDNAME as PHY_VINGCARDNAME ,",
              "PHYSICALSHIP.LLOYDSREGISTER as PHY_LLOYDSREGISTER ,",
              "PHYSICALSHIP.CALLRADIOSIGNAL as PHY_CALLRADIOSIGNAL ,",
              "PHYSICALSHIP.CODE as PHY_CODE ,",
              "PHYSICALSHIP.WIDTHTRESHOLD as PHY_WIDTHTRESHOLD ,",
              "PHYSICALSHIP.BUILDYEAR as PHY_BUILDYEAR ,",
              "PHYSICALSHIP.COUNTRYFLAG as PHY_COUNTRYFLAG ,",
              "PHYSICALSHIP.ICECLASS as PHY_ICECLASS ,",
              "PHYSICALSHIP.ISDUMMYSHIP as PHY_ISDUMMYSHIP ,",
              "DEPARTSAILINGPORTSCHEDULE.SAILINGCODE as DEP_SAILINGCODE ,",
              "DEPARTSAILINGPORTSCHEDULE.SAILINGSTARTDATE as DEP_SAILINGSTARTDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.PORTCODE as DEP_PORTCODE ,",
              "DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE as DEP_PORTSTARTDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.STARTDATE as DEP_STARTDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.PORTORDER as DEP_PORTORDER ,",
              "DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME as DEP_DEPARTURETIME ,",
              "DEPARTSAILINGPORTSCHEDULE.ARRIVALTIME as DEP_ARRIVALTIME ,",
              "DEPARTSAILINGPORTSCHEDULE.ENDDATE as DEP_ENDDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.VERSION as DEP_VERSION ,",
              "DEPARTSAILINGPORTSCHEDULE.GVNUMBERIMPORT as DEP_GVNUMBERIMPORT ,",
              "DEPARTSAILINGPORTSCHEDULE.GVNUMBEREXPORT as DEP_GVNUMBEREXPORT ,",
              "DEPARTSAILINGPORTSCHEDULE.ACTUALDEPARTUREDATE as DEP_ACTUALDEPARTUREDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.ACTUALARRIVALDATE as DEP_ACTUALARRIVALDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.GSVOYAGECODE as DEP_GSVOYAGECODE ,",
              "DEPARTSAILINGPORTSCHEDULE.REPORTCLOSED as DEP_REPORTCLOSED ,",
              "DEPARTSAILINGPORTSCHEDULE.BERTH  as DEP_BERTH ,",
              "ARRIVALSAILINGPORTSCHEDULE.SAILINGCODE as ARR_SAILINGCODE ,",
              "ARRIVALSAILINGPORTSCHEDULE.SAILINGSTARTDATE as ARR_SAILINGSTARTDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.PORTCODE as ARR_PORTCODE ,",
              "ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE as ARR_PORTSTARTDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.STARTDATE as ARR_STARTDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.PORTORDER as ARR_PORTORDER ,",
              "ARRIVALSAILINGPORTSCHEDULE.DEPARTURETIME as ARR_DEPARTURETIME ,",
              "ARRIVALSAILINGPORTSCHEDULE.ARRIVALTIME as ARR_ARRIVALTIME ,",
              "ARRIVALSAILINGPORTSCHEDULE.ENDDATE as ARR_ENDDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.VERSION as ARR_VERSION ,",
              "ARRIVALSAILINGPORTSCHEDULE.GVNUMBERIMPORT as ARR_GVNUMBERIMPORT ,",
              "ARRIVALSAILINGPORTSCHEDULE.GVNUMBEREXPORT as ARR_GVNUMBEREXPORT ,",
              "ARRIVALSAILINGPORTSCHEDULE.ACTUALDEPARTUREDATE as ARR_ACTUALDEPARTUREDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.ACTUALARRIVALDATE as ARR_ACTUALARRIVALDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.GSVOYAGECODE as ARR_GSVOYAGECODE ,",
              "ARRIVALSAILINGPORTSCHEDULE.REPORTCLOSED as ARR_REPORTCLOSED ,",
              "ARRIVALSAILINGPORTSCHEDULE.BERTH  as ARR_BERTH ,",
              "LEG.CODE as LEG_CODE ,",
              "LEG.STARTDATE as LEG_STARTDATE ,",
              "LEG.DEPARTURE_PORT as LEG_DEPARTURE_PORT ,",
              "LEG.DEPARTURE_PORTSTARTDATE as LEG_DEPARTURE_PORTSTARTDATE ,",
              "LEG.ARRIVAL_PORT as LEG_ARRIVAL_PORT ,",
              "LEG.ARRIVAL_PORTSTARTDATE as LEG_ARRIVAL_PORTSTARTDATE ,",
              "LEG.ENDDATE as LEG_ENDDATE ,",
              "LEG.VERSION as LEG_VERSION ,",
              "LEG.MANDATORYDOCUMENT as LEG_MANDATORYDOCUMENT ,",
              "DEPARTPORT.CODE as DPO_CODE  ,",
              "DEPARTPORT.STARTDATE as DPO_STARTDATE  ,",
              "DEPARTPORT.GEOGRAPHICALAREA as DPO_GEOGRAPHICALAREA  ,",
              "DEPARTPORT.COUNTRY as DPO_COUNTRY  ,",
              "DEPARTPORT.NAME as DPO_NAME  ,",
              "DEPARTPORT.DESCRIPTION as DPO_DESCRIPTION  ,",
              "DEPARTPORT.EMAIL as DPO_EMAIL  ,",
              "DEPARTPORT.FAX as DPO_FAX  ,",
              "DEPARTPORT.ENDDATE as DPO_ENDDATE  ,",
              "DEPARTPORT.VERSION as DPO_VERSION  ,",
              "DEPARTPORT.PORTID as DPO_PORTID  ,",
              "DEPARTPORT.ADDRESS as DPO_ADDRESS  ,",
              "DEPARTPORT.TOWN as DPO_TOWN  ,",
              "DEPARTPORT.DISTRICT as DPO_DISTRICT  ,",
              "DEPARTPORT.POSTCODE as DPO_POSTCODE  ,",
              "DEPARTPORT.DESTINATIONCODE as DPO_DESTINATIONCODE  ,",
              "ARRIVALPORT.CODE as APO_CODE  ,",
              "ARRIVALPORT.STARTDATE as APO_STARTDATE  ,",
              "ARRIVALPORT.GEOGRAPHICALAREA as APO_GEOGRAPHICALAREA  ,",
              "ARRIVALPORT.COUNTRY as APO_COUNTRY  ,",
              "ARRIVALPORT.NAME as APO_NAME  ,",
              "ARRIVALPORT.DESCRIPTION as APO_DESCRIPTION  ,",
              "ARRIVALPORT.EMAIL as APO_EMAIL  ,",
              "ARRIVALPORT.FAX as APO_FAX  ,",
              "ARRIVALPORT.ENDDATE as APO_ENDDATE  ,",
              "ARRIVALPORT.VERSION as APO_VERSION  ,",
              "ARRIVALPORT.PORTID as APO_PORTID  ,",
              "ARRIVALPORT.ADDRESS as APO_ADDRESS  ,",
              "ARRIVALPORT.TOWN as APO_TOWN  ,",
              "ARRIVALPORT.DISTRICT as APO_DISTRICT  ,",
              "ARRIVALPORT.POSTCODE as APO_POSTCODE  ,",
              "ARRIVALPORT.DESTINATIONCODE as APO_DESTINATIONCODE  ,",
              "DEPARTGEOGRAPHICALAREA.CODE as GED_CODE ,",
              "DEPARTGEOGRAPHICALAREA.NAME as GED_NAME ,",
              "DEPARTGEOGRAPHICALAREA.COUNTRY as GED_COUNTRY ,",
              "ARRIVALGEOGRAPHICALAREA.CODE as GEA_CODE ,",
              "ARRIVALGEOGRAPHICALAREA.NAME as GEA_NAME ,",
              "ARRIVALGEOGRAPHICALAREA.COUNTRY as GEA_COUNTRY,",
              "SAILINGVESSELLICENSE.VESSELLICENSECODE as LIC_VESSELLICENSECODE,",
              "SAILINGVESSELLICENSE.CREWNUMBER as LIC_CREWNUMBER,",
              "SAILINGVESSELLICENSE.SELLABLECAPACITY as LIC_SELLABLECAPACITY,",
              "SAILINGVESSELLICENSE.MAXCAPACITY as LIC_MAXCAPACITY",
              "",
              "FROM",
              "eBooking.MSP_SAILING SAILING,",
              "(select CODE, MAX(STARTDATE) as STARTDATE from eBooking.MSP_SAILING group by CODE) SAILINGFILTER,",
              "eBooking.MSP_LINE LINE ,",
              "eBooking.MSP_SHIPTEMPLATE SHIPTEMPLATE ,",
              "eBooking.MSP_PHYSICALSHIP PHYSICALSHIP ,",
              "eBooking.MSP_SAILINGPORTSCHEDULE DEPARTSAILINGPORTSCHEDULE ,",
              "eBooking.MSP_SAILINGPORTSCHEDULE ARRIVALSAILINGPORTSCHEDULE ,",
              "eBooking.MSP_LEG LEG ,",
              "eBooking.MSP_PORT DEPARTPORT ,",
              "eBooking.MSP_PORT ARRIVALPORT ,",
              "eBooking.MSP_GEOGRAPHICALAREA DEPARTGEOGRAPHICALAREA ,",
              "eBooking.MSP_GEOGRAPHICALAREA ARRIVALGEOGRAPHICALAREA,",
              "eBooking.MSP_SAILINGVESSELLICENSE SAILINGVESSELLICENSE,",
              "(select SAILINGCODE, SHIPTEMPLATECODE, MAX(STARTDATE) as STARTDATE from eBooking.MSP_SAILINGVESSELLICENSE group by SAILINGCODE, SHIPTEMPLATECODE) LICENSEFILTER",
              "WHERE ",
              "SAILING.CODE = SAILINGFILTER.CODE",
              "and SAILING.STARTDATE = SAILINGFILTER.STARTDATE",
              "and SAILING.LINECODE = LINE.CODE",
              "AND SAILING.SHIPTEMPLATECODE = SHIPTEMPLATE.CODE",
              "  AND SAILING.SHIPTEMPLATESTARTDATE = SHIPTEMPLATE.STARTDATE",
              "  AND PHYSICALSHIP.NAME = SHIPTEMPLATE.PHYSICALSHIPNAME",
              "AND PHYSICALSHIP.STARTDATE = SHIPTEMPLATE.PHYSICALSHIPSTARTDATE",
              "  AND SAILING.CODE = DEPARTSAILINGPORTSCHEDULE.SAILINGCODE",
              "  AND SAILING.STARTDATE = DEPARTSAILINGPORTSCHEDULE.SAILINGSTARTDATE",
              "  AND DEPARTSAILINGPORTSCHEDULE.SAILINGCODE = ARRIVALSAILINGPORTSCHEDULE.SAILINGCODE",
              "  AND ARRIVALSAILINGPORTSCHEDULE.PORTORDER = DEPARTSAILINGPORTSCHEDULE.PORTORDER + 1",
              "  AND ARRIVALSAILINGPORTSCHEDULE.STARTDATE = DEPARTSAILINGPORTSCHEDULE.STARTDATE",
              "  AND DEPARTSAILINGPORTSCHEDULE.PORTCODE = LEG.DEPARTURE_PORT",
              "  AND DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE = LEG.DEPARTURE_PORTSTARTDATE",
              "  AND ARRIVALSAILINGPORTSCHEDULE.PORTCODE = LEG.ARRIVAL_PORT",
              "  AND ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE = LEG.ARRIVAL_PORTSTARTDATE",
              "AND DEPARTSAILINGPORTSCHEDULE.PORTCODE = DEPARTPORT.CODE",
              "  AND DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE = DEPARTPORT.STARTDATE",
              "  AND ARRIVALSAILINGPORTSCHEDULE.PORTCODE = ARRIVALPORT.CODE",
              "  AND ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE = ARRIVALPORT.STARTDATE",
              "  AND DEPARTPORT.GEOGRAPHICALAREA = DEPARTGEOGRAPHICALAREA.CODE",
              "  AND ARRIVALPORT.GEOGRAPHICALAREA = ARRIVALGEOGRAPHICALAREA.CODE",
              "  AND SAILING.CODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
              "  AND SAILING.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
              "  AND SAILING.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE ",
              "  AND LICENSEFILTER.SAILINGCODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
              "  AND LICENSEFILTER.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
              "  AND LICENSEFILTER.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE",
              ") D_STG_EBK_SAILING"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Query 1"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT  distinct SAILING_PK",
              "       ,SAILING_STARTDATE",
              "       ,SAILING_ENDDATE",
              "       ,SAI_CODE",
              "       ,SAI_SAILINGDEPARTUREDATE",
              "       ,SAI_SAILINGARRIVALDATE",
              "       ,SAI_LOCKED",
              "       ,SAI_HIDEINFORMATION",
              "       ,SAI_SCHEDULECODE",
              "       ,case",
              "            when (LIN_CODE) in ('10BECA', '10BECB', '10BECC', '10PBBA', '10PBBB', '10PBBC', '10POFA', '10SHWA', '10SHWB') then ('10S')",
              "            when (LIN_CODE) in ('10PPHA', '10PPHB', '10PPHC', '10PPHD', '10PPRA', '10PPRB', '10PPRC', '10PPRD') then ('10')",
              "            when (substr(LIN_CODE,1 ,1) in ('5', '9')) then (substr(LIN_CODE,1,1))",
              "            when (substr(LIN_CODE,1,2) in ('01', '02', '03')) then (substr(LIN_CODE,2,1))",
              "            when (substr(LIN_CODE,1,1) not in ('5', '9')) then (substr(LIN_CODE,1,2))",
              "        end as ROUTECODE",
              "       ,case",
              "           when (LIN_CODE) in ('10BECA', '10BECB', '10BECC', '10PBBA', '10PBBB', '10PBBC', '10POFA', '10SHWA', '10SHWB') then ('10S')",
              "           when (LIN_CODE) in ('10PPHA', '10PPHB', '10PPHC', '10PPHD', '10PPRA', '10PPRB', '10PPRC', '10PPRD') then ('10')",
              "           when (substr( LIN_CODE,1 ,1) in ('5', '9')) then ( '0' || (substr( LIN_CODE,1,1)) )",
              "           when (substr( LIN_CODE,1,1) not in ('5', '9')) then (substr( LIN_CODE,1,2))",
              "        end as ROUTESORT",
              "       ,LIN_CODE",
              "       ,LIN_DESCRIPTION",
              "       ,LEG_CODE",
              "       ,DEP_PORTCODE",
              "       ,DPO_NAME",
              "       ,DPO_DESCRIPTION",
              "       ,DEP_PORTORDER",
              "       ,DEP_DEPARTURETIME as DEP_DEPARTUREDATETIME",
              "       ,TRUNC(DEP_DEPARTURETIME) as DEP_DEPARTUREDATE",
              "       ,to_char( DEP_DEPARTURETIME, 'HH24:MI' ) as DEP_DEPARTURETIME",
              "       ,to_char( DEP_DEPARTURETIME, 'HH24' ) as DEP_DEPARTURETIMEHOUR",
              "       ,DPO_GEOGRAPHICALAREA",
              "       ,GED_NAME",
              "       ,ARR_SAILINGCODE",
              "       ,ARR_PORTCODE",
              "       ,APO_NAME",
              "       ,APO_DESCRIPTION",
              "       ,ARR_PORTORDER",
              "       ,ARR_ARRIVALTIME as ARR_ARRIVALDATETIME",
              "       ,TRUNC(ARR_ARRIVALTIME) as ARR_ARRIVALDATE",
              "       ,to_char( ARR_ARRIVALTIME, 'HH24:MI' ) as ARR_ARRIVALTIME",
              "       ,to_char( ARR_ARRIVALTIME, 'HH24' ) as ARR_ARRIVALTIMEHOUR",
              "       ,APO_GEOGRAPHICALAREA",
              "       ,GEA_NAME",
              "       ,SHI_CODE",
              "       ,SHI_NAME",
              "       ,SHI_SHIPTYPE",
              "       ,SHI_DIVISION",
              "       ,SHI_PHYSICALSHIPNAME",
              "       ,PHY_DESCRIPTION",
              "        ,to_char ( DEP_DEPARTURETIME, 'Month' ) as DEP_DEPARTUREDATEMONTH",
              "      ,to_char ( DEP_DEPARTURETIME, 'MM' ) as DEP_DEPARTUREDATEMONTHSORT",
              "      ,to_char ( DEP_DEPARTURETIME, 'Day' ) as DEP_DEPARTUREDATEDAYOFWEEK",
              "      ,to_char ( DEP_DEPARTURETIME, 'Day',  'NLS_DATE_LANGUAGE=''numeric date language''' ) as DEP_DEPARTUREDATEDAYOFWEEKSORT",
              "      ,to_char ( DEP_DEPARTURETIME, 'DD' ) as DEP_DEPARTUREDATEDAY",
              "      , LIC_MAXCAPACITY",
              "    LIC_CREWNUMBER,",
              "    LIC_SELLABLECAPACITY",
              "FROM (SELECT",
              "SAILING.CODE || '-' || SAILING.STARTDATE || '-' || DEPARTSAILINGPORTSCHEDULE.PORTCODE || '-' || ARRIVALSAILINGPORTSCHEDULE.PORTCODE  as SAILING_PK ,",
              "TO_DATE (SAILING.STARTDATE, 'YYYY-MM-DD hh24:mi:ss') as SAILING_STARTDATE ,",
              "TO_DATE (SAILING.ENDDATE, 'YYYY-MM-DD hh24:mi:ss') as SAILING_ENDDATE ,",
              "SAILING.CODE as SAI_CODE,",
              "SAILING.STARTDATE as SAI_STARTDATE ,",
              "SAILING.DESCRIPTION as SAI_DESCRIPTION ,",
              "SAILING.ENDDATE as SAI_ENDDATE ,",
              "SAILING.SAILINGDEPARTUREDATE as SAI_SAILINGDEPARTUREDATE   ,",
              "SAILING.JOURNEYDURATION as SAI_JOURNEYDURATION   ,",
              "SAILING.LOCKED as SAI_LOCKED ,",
              "SAILING.SCHEDULECODE as SAI_SCHEDULECODE ,",
              "SAILING.SCHEDULESTARTDATE as SAI_SCHEDULESTARTDATE ,",
              "SAILING.SHIPTEMPLATECODE as SAI_SHIPTEMPLATECODE ,",
              "SAILING.SHIPTEMPLATESTARTDATE as SAI_SHIPTEMPLATESTARTDATE ,",
              "SAILING.LINECODE as SAI_LINECODE ,",
              "SAILING.LINESTARTDATE as SAI_LINESTARTDATE ,",
              "SAILING.SAILINGARRIVALDATE as SAI_SAILINGARRIVALDATE ,",
              "SAILING.DAYNIGHT as SAI_DAYNIGHT ,",
              "SAILING.VERSION as SAI_VERSION ,",
              "SAILING.COMMENTS as SAI_COMMENTS ,",
              "SAILING.VOYAGECODE as SAI_VOYAGECODE ,",
              "SAILING.HIDEINFORMATION as SAI_HIDEINFORMATION ,",
              "SAILING.MDS as SAI_MDS ,",
              "SAILING.NORESERVABLE as SAI_NORESERVABLE ,",
              "LINE.CODE as LIN_CODE ,",
              "LINE.STARTDATE as LIN_STARTDATE ,",
              "LINE.DESCRIPTION as LIN_DESCRIPTION,",
              "LINE.MILES as LIN_MILES ,",
              "LINE.DEPARTURE_TIME as LIN_DEPARTURE_TIME ,",
              "LINE.ARRIVAL_TIME as LIN_ARRIVAL_TIME ,",
              "LINE.ENDDATE as LIN_ENDDATE,",
              "LINE.RTSPODEPARTURENUMBER as LIN_RTSPODEPARTURENUMBER ,",
              "LINE.VERSION as LIN_VERSION ,",
              "LINE.LINEDIRECTIONID as LIN_LINEDIRECTIONID ,",
              "LINE.HOURS_BEFORE_DEPARTURE LIN_HOURS_BEFORE_DEPARTURE ,",
              "SHIPTEMPLATE.CODE as SHI_CODE,",
              "SHIPTEMPLATE.STARTDATE as SHI_STARTDATE ,",
              "SHIPTEMPLATE.NAME as  SHI_NAME,",
              "SHIPTEMPLATE.SHIPTYPE as SHI_SHIPTYPE,",
              "SHIPTEMPLATE.DIVISION as SHI_DIVISION ,",
              "SHIPTEMPLATE.PHYSICALSHIPNAME as SHI_PHYSICALSHIPNAME ,",
              "SHIPTEMPLATE.PHYSICALSHIPSTARTDATE as SHI_PHYSICALSHIPSTARTDATE ,",
              "SHIPTEMPLATE.DAYNIGHT as SHI_DAYNIGHT,",
              "SHIPTEMPLATE.ENDDATE as SHI_ENDDATE,",
              "SHIPTEMPLATE.VERSION as SHI_VERSION ,",
              "PHYSICALSHIP.NAME as PHY_NAME ,",
              "PHYSICALSHIP.STARTDATE as PHY_STARTDATE ,",
              "PHYSICALSHIP.ENDDATE as PHY_ENDDATE ,",
              "PHYSICALSHIP.DESCRIPTION as PHY_DESCRIPTION ,",
              "PHYSICALSHIP.VERSION as PHY_VERSION ,",
              "PHYSICALSHIP.VINGCARDNAME as PHY_VINGCARDNAME ,",
              "PHYSICALSHIP.LLOYDSREGISTER as PHY_LLOYDSREGISTER ,",
              "PHYSICALSHIP.CALLRADIOSIGNAL as PHY_CALLRADIOSIGNAL ,",
              "PHYSICALSHIP.CODE as PHY_CODE ,",
              "PHYSICALSHIP.WIDTHTRESHOLD as PHY_WIDTHTRESHOLD ,",
              "PHYSICALSHIP.BUILDYEAR as PHY_BUILDYEAR ,",
              "PHYSICALSHIP.COUNTRYFLAG as PHY_COUNTRYFLAG ,",
              "PHYSICALSHIP.ICECLASS as PHY_ICECLASS ,",
              "PHYSICALSHIP.ISDUMMYSHIP as PHY_ISDUMMYSHIP ,",
              "DEPARTSAILINGPORTSCHEDULE.SAILINGCODE as DEP_SAILINGCODE ,",
              "DEPARTSAILINGPORTSCHEDULE.SAILINGSTARTDATE as DEP_SAILINGSTARTDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.PORTCODE as DEP_PORTCODE ,",
              "DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE as DEP_PORTSTARTDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.STARTDATE as DEP_STARTDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.PORTORDER as DEP_PORTORDER ,",
              "DEPARTSAILINGPORTSCHEDULE.DEPARTURETIME as DEP_DEPARTURETIME ,",
              "DEPARTSAILINGPORTSCHEDULE.ARRIVALTIME as DEP_ARRIVALTIME ,",
              "DEPARTSAILINGPORTSCHEDULE.ENDDATE as DEP_ENDDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.VERSION as DEP_VERSION ,",
              "DEPARTSAILINGPORTSCHEDULE.GVNUMBERIMPORT as DEP_GVNUMBERIMPORT ,",
              "DEPARTSAILINGPORTSCHEDULE.GVNUMBEREXPORT as DEP_GVNUMBEREXPORT ,",
              "DEPARTSAILINGPORTSCHEDULE.ACTUALDEPARTUREDATE as DEP_ACTUALDEPARTUREDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.ACTUALARRIVALDATE as DEP_ACTUALARRIVALDATE ,",
              "DEPARTSAILINGPORTSCHEDULE.GSVOYAGECODE as DEP_GSVOYAGECODE ,",
              "DEPARTSAILINGPORTSCHEDULE.REPORTCLOSED as DEP_REPORTCLOSED ,",
              "DEPARTSAILINGPORTSCHEDULE.BERTH  as DEP_BERTH ,",
              "ARRIVALSAILINGPORTSCHEDULE.SAILINGCODE as ARR_SAILINGCODE ,",
              "ARRIVALSAILINGPORTSCHEDULE.SAILINGSTARTDATE as ARR_SAILINGSTARTDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.PORTCODE as ARR_PORTCODE ,",
              "ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE as ARR_PORTSTARTDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.STARTDATE as ARR_STARTDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.PORTORDER as ARR_PORTORDER ,",
              "ARRIVALSAILINGPORTSCHEDULE.DEPARTURETIME as ARR_DEPARTURETIME ,",
              "ARRIVALSAILINGPORTSCHEDULE.ARRIVALTIME as ARR_ARRIVALTIME ,",
              "ARRIVALSAILINGPORTSCHEDULE.ENDDATE as ARR_ENDDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.VERSION as ARR_VERSION ,",
              "ARRIVALSAILINGPORTSCHEDULE.GVNUMBERIMPORT as ARR_GVNUMBERIMPORT ,",
              "ARRIVALSAILINGPORTSCHEDULE.GVNUMBEREXPORT as ARR_GVNUMBEREXPORT ,",
              "ARRIVALSAILINGPORTSCHEDULE.ACTUALDEPARTUREDATE as ARR_ACTUALDEPARTUREDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.ACTUALARRIVALDATE as ARR_ACTUALARRIVALDATE ,",
              "ARRIVALSAILINGPORTSCHEDULE.GSVOYAGECODE as ARR_GSVOYAGECODE ,",
              "ARRIVALSAILINGPORTSCHEDULE.REPORTCLOSED as ARR_REPORTCLOSED ,",
              "ARRIVALSAILINGPORTSCHEDULE.BERTH  as ARR_BERTH ,",
              "LEG.CODE as LEG_CODE ,",
              "LEG.STARTDATE as LEG_STARTDATE ,",
              "LEG.DEPARTURE_PORT as LEG_DEPARTURE_PORT ,",
              "LEG.DEPARTURE_PORTSTARTDATE as LEG_DEPARTURE_PORTSTARTDATE ,",
              "LEG.ARRIVAL_PORT as LEG_ARRIVAL_PORT ,",
              "LEG.ARRIVAL_PORTSTARTDATE as LEG_ARRIVAL_PORTSTARTDATE ,",
              "LEG.ENDDATE as LEG_ENDDATE ,",
              "LEG.VERSION as LEG_VERSION ,",
              "LEG.MANDATORYDOCUMENT as LEG_MANDATORYDOCUMENT ,",
              "DEPARTPORT.CODE as DPO_CODE  ,",
              "DEPARTPORT.STARTDATE as DPO_STARTDATE  ,",
              "DEPARTPORT.GEOGRAPHICALAREA as DPO_GEOGRAPHICALAREA  ,",
              "DEPARTPORT.COUNTRY as DPO_COUNTRY  ,",
              "DEPARTPORT.NAME as DPO_NAME  ,",
              "DEPARTPORT.DESCRIPTION as DPO_DESCRIPTION  ,",
              "DEPARTPORT.EMAIL as DPO_EMAIL  ,",
              "DEPARTPORT.FAX as DPO_FAX  ,",
              "DEPARTPORT.ENDDATE as DPO_ENDDATE  ,",
              "DEPARTPORT.VERSION as DPO_VERSION  ,",
              "DEPARTPORT.PORTID as DPO_PORTID  ,",
              "DEPARTPORT.ADDRESS as DPO_ADDRESS  ,",
              "DEPARTPORT.TOWN as DPO_TOWN  ,",
              "DEPARTPORT.DISTRICT as DPO_DISTRICT  ,",
              "DEPARTPORT.POSTCODE as DPO_POSTCODE  ,",
              "DEPARTPORT.DESTINATIONCODE as DPO_DESTINATIONCODE  ,",
              "ARRIVALPORT.CODE as APO_CODE  ,",
              "ARRIVALPORT.STARTDATE as APO_STARTDATE  ,",
              "ARRIVALPORT.GEOGRAPHICALAREA as APO_GEOGRAPHICALAREA  ,",
              "ARRIVALPORT.COUNTRY as APO_COUNTRY  ,",
              "ARRIVALPORT.NAME as APO_NAME  ,",
              "ARRIVALPORT.DESCRIPTION as APO_DESCRIPTION  ,",
              "ARRIVALPORT.EMAIL as APO_EMAIL  ,",
              "ARRIVALPORT.FAX as APO_FAX  ,",
              "ARRIVALPORT.ENDDATE as APO_ENDDATE  ,",
              "ARRIVALPORT.VERSION as APO_VERSION  ,",
              "ARRIVALPORT.PORTID as APO_PORTID  ,",
              "ARRIVALPORT.ADDRESS as APO_ADDRESS  ,",
              "ARRIVALPORT.TOWN as APO_TOWN  ,",
              "ARRIVALPORT.DISTRICT as APO_DISTRICT  ,",
              "ARRIVALPORT.POSTCODE as APO_POSTCODE  ,",
              "ARRIVALPORT.DESTINATIONCODE as APO_DESTINATIONCODE  ,",
              "DEPARTGEOGRAPHICALAREA.CODE as GED_CODE ,",
              "DEPARTGEOGRAPHICALAREA.NAME as GED_NAME ,",
              "DEPARTGEOGRAPHICALAREA.COUNTRY as GED_COUNTRY ,",
              "ARRIVALGEOGRAPHICALAREA.CODE as GEA_CODE ,",
              "ARRIVALGEOGRAPHICALAREA.NAME as GEA_NAME ,",
              "ARRIVALGEOGRAPHICALAREA.COUNTRY as GEA_COUNTRY,",
              "SAILINGVESSELLICENSE.VESSELLICENSECODE as LIC_VESSELLICENSECODE,",
              "SAILINGVESSELLICENSE.CREWNUMBER as LIC_CREWNUMBER,",
              "SAILINGVESSELLICENSE.SELLABLECAPACITY as LIC_SELLABLECAPACITY,",
              "SAILINGVESSELLICENSE.MAXCAPACITY as LIC_MAXCAPACITY",
              "",
              "FROM",
              "eBooking.MSP_SAILING SAILING,",
              "(select CODE, MAX(STARTDATE) as STARTDATE from eBooking.MSP_SAILING group by CODE) SAILINGFILTER,",
              "eBooking.MSP_LINE LINE ,",
              "eBooking.MSP_SHIPTEMPLATE SHIPTEMPLATE ,",
              "eBooking.MSP_PHYSICALSHIP PHYSICALSHIP ,",
              "eBooking.MSP_SAILINGPORTSCHEDULE DEPARTSAILINGPORTSCHEDULE ,",
              "eBooking.MSP_SAILINGPORTSCHEDULE ARRIVALSAILINGPORTSCHEDULE ,",
              "eBooking.MSP_LEG LEG ,",
              "eBooking.MSP_PORT DEPARTPORT ,",
              "eBooking.MSP_PORT ARRIVALPORT ,",
              "eBooking.MSP_GEOGRAPHICALAREA DEPARTGEOGRAPHICALAREA ,",
              "eBooking.MSP_GEOGRAPHICALAREA ARRIVALGEOGRAPHICALAREA,",
              "eBooking.MSP_SAILINGVESSELLICENSE SAILINGVESSELLICENSE,",
              "(select SAILINGCODE, SHIPTEMPLATECODE, MAX(STARTDATE) as STARTDATE from eBooking.MSP_SAILINGVESSELLICENSE group by SAILINGCODE, SHIPTEMPLATECODE) LICENSEFILTER",
              "WHERE ",
              "SAILING.CODE = SAILINGFILTER.CODE",
              "and SAILING.STARTDATE = SAILINGFILTER.STARTDATE",
              "and SAILING.LINECODE = LINE.CODE",
              "AND SAILING.SHIPTEMPLATECODE = SHIPTEMPLATE.CODE",
              "  AND SAILING.SHIPTEMPLATESTARTDATE = SHIPTEMPLATE.STARTDATE",
              "  AND PHYSICALSHIP.NAME = SHIPTEMPLATE.PHYSICALSHIPNAME",
              "AND PHYSICALSHIP.STARTDATE = SHIPTEMPLATE.PHYSICALSHIPSTARTDATE",
              "  AND SAILING.CODE = DEPARTSAILINGPORTSCHEDULE.SAILINGCODE",
              "  AND SAILING.STARTDATE = DEPARTSAILINGPORTSCHEDULE.SAILINGSTARTDATE",
              "  AND DEPARTSAILINGPORTSCHEDULE.SAILINGCODE = ARRIVALSAILINGPORTSCHEDULE.SAILINGCODE",
              "  AND ARRIVALSAILINGPORTSCHEDULE.PORTORDER = DEPARTSAILINGPORTSCHEDULE.PORTORDER + 1",
              "  AND ARRIVALSAILINGPORTSCHEDULE.STARTDATE = DEPARTSAILINGPORTSCHEDULE.STARTDATE",
              "  AND DEPARTSAILINGPORTSCHEDULE.PORTCODE = LEG.DEPARTURE_PORT",
              "  AND DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE = LEG.DEPARTURE_PORTSTARTDATE",
              "  AND ARRIVALSAILINGPORTSCHEDULE.PORTCODE = LEG.ARRIVAL_PORT",
              "  AND ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE = LEG.ARRIVAL_PORTSTARTDATE",
              "AND DEPARTSAILINGPORTSCHEDULE.PORTCODE = DEPARTPORT.CODE",
              "  AND DEPARTSAILINGPORTSCHEDULE.PORTSTARTDATE = DEPARTPORT.STARTDATE",
              "  AND ARRIVALSAILINGPORTSCHEDULE.PORTCODE = ARRIVALPORT.CODE",
              "  AND ARRIVALSAILINGPORTSCHEDULE.PORTSTARTDATE = ARRIVALPORT.STARTDATE",
              "  AND DEPARTPORT.GEOGRAPHICALAREA = DEPARTGEOGRAPHICALAREA.CODE",
              "  AND ARRIVALPORT.GEOGRAPHICALAREA = ARRIVALGEOGRAPHICALAREA.CODE",
              "  AND SAILING.CODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
              "  AND SAILING.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
              "  AND SAILING.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE ",
              "  AND LICENSEFILTER.SAILINGCODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
              "  AND LICENSEFILTER.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
              "  AND LICENSEFILTER.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE",
              ") D_STG_EBK_SAILING</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "DepartureAllocation",
        "columns": [
          {
            "name": "SailingCode",
            "dataType": "string",
            "sourceColumn": "SAILINGCODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DeparturePort",
            "dataType": "string",
            "sourceColumn": "DEPARTUREPORT",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ArrivalPort",
            "dataType": "string",
            "sourceColumn": "ARRIVALPORT",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "LegCode",
            "dataType": "string",
            "sourceColumn": "LEGCODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PhysicalResourceCode",
            "dataType": "string",
            "sourceColumn": "PHYSICALRESOURCECODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SellableCapacity",
            "dataType": "double",
            "sourceColumn": "SELLABLECAPACITY",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "SoldCapacity",
            "dataType": "double",
            "sourceColumn": "SOLDCAPACITY",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "AvailableCapacity",
            "dataType": "double",
            "sourceColumn": "AVAILABLECAPACITY",
            "formatString": "0",
            "sourceProviderType": "Decimal"
          },
          {
            "type": "calculated",
            "name": "DepartureAllocationKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "DepartureAllocation[SailingCode] & DepartureAllocation[DeparturePort]"
          },
          {
            "type": "calculated",
            "name": "AvailablePercent",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": "DepartureAllocation[AvailableCapacity]/DepartureAllocation[SellableCapacity]",
            "formatString": "0%"
          }
        ],
        "partitions": [
          {
            "name": "DepartureAllocation",
            "dataView": "full",
            "source": {
              "query": [
                "SELECT ",
                "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
                "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
                "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
                "SAILINGSELLABLEPRODUCT.LEGCODE,",
                "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
                "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
                "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
                "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
                "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
                "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
                "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
                "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
                "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0"
              ],
              "dataSource": "Oracle scan.stg01.rac.bcferries.corp"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
                  "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
                  "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
                  "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
                  "SAILINGSELLABLEPRODUCT.LEGCODE,",
                  "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
                  "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
                  "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
                  "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
                  "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
                  "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
                  "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
                  "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
                  "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ",
              "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
              "SAILINGSELLABLEPRODUCT.LEGCODE,",
              "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
              "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
              "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
              "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
              "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
              "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
              "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
              "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
              "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DepartureAllocation"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
              "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
              "SAILINGSELLABLEPRODUCT.LEGCODE,",
              "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
              "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
              "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
              "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
              "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
              "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
              "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
              "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
              "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "ArrivalAllocation",
        "columns": [
          {
            "name": "SailingCode",
            "dataType": "string",
            "sourceColumn": "SAILINGCODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DeparturePort",
            "dataType": "string",
            "sourceColumn": "DEPARTUREPORT",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ArrivalPort",
            "dataType": "string",
            "sourceColumn": "ARRIVALPORT",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "LegCode",
            "dataType": "string",
            "sourceColumn": "LEGCODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PhysicalResourceCode",
            "dataType": "string",
            "sourceColumn": "PHYSICALRESOURCECODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SellableCapacity",
            "dataType": "double",
            "sourceColumn": "SELLABLECAPACITY",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "SoldCapacity",
            "dataType": "double",
            "sourceColumn": "SOLDCAPACITY",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "AvailableCapacity",
            "dataType": "double",
            "sourceColumn": "AVAILABLECAPACITY",
            "sourceProviderType": "Decimal"
          },
          {
            "type": "calculated",
            "name": "ArrivalAllocationKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "ArrivalAllocation[SailingCode] & ArrivalAllocation[ArrivalPort]"
          }
        ],
        "partitions": [
          {
            "name": "ArrivalAllocation",
            "dataView": "full",
            "source": {
              "query": [
                "SELECT ",
                "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
                "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
                "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
                "SAILINGSELLABLEPRODUCT.LEGCODE,",
                "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
                "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
                "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
                "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
                "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
                "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
                "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
                "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
                "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0"
              ],
              "dataSource": "Oracle scan.stg01.rac.bcferries.corp"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
                  "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
                  "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
                  "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
                  "SAILINGSELLABLEPRODUCT.LEGCODE,",
                  "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
                  "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
                  "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
                  "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
                  "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
                  "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
                  "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
                  "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
                  "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ",
              "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
              "SAILINGSELLABLEPRODUCT.LEGCODE,",
              "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
              "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
              "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
              "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
              "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
              "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
              "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
              "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
              "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "ArrivalAllocation"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
              "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
              "SAILINGSELLABLEPRODUCT.LEGCODE,",
              "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
              "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
              "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
              "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
              "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
              "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
              "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
              "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
              "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "JasperQuerySpaceAvailability",
        "isHidden": true,
        "columns": [
          {
            "name": "SAILINGCODE",
            "dataType": "string",
            "sourceColumn": "SAILINGCODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SAILINGDEPARTUREDATE",
            "dataType": "dateTime",
            "sourceColumn": "SAILINGDEPARTUREDATE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "SAILINGDEPARTUREDATETIME",
            "dataType": "string",
            "sourceColumn": "SAILINGDEPARTUREDATETIME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SAILINGDEPARTURETIME",
            "dataType": "string",
            "sourceColumn": "SAILINGDEPARTURETIME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "LINECODE",
            "dataType": "string",
            "sourceColumn": "LINECODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "LEGCODE",
            "dataType": "string",
            "sourceColumn": "LEGCODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "LEGNAME",
            "dataType": "string",
            "sourceColumn": "LEGNAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEDEPARTUREPORT",
            "dataType": "string",
            "sourceColumn": "ROUTEDEPARTUREPORT",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEDEPARTUREPORTNAME",
            "dataType": "string",
            "sourceColumn": "ROUTEDEPARTUREPORTNAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEDEPARTUREDATE",
            "dataType": "dateTime",
            "sourceColumn": "ROUTEDEPARTUREDATE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ROUTEDEPARTUREDATETIME",
            "dataType": "string",
            "sourceColumn": "ROUTEDEPARTUREDATETIME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEDEPARTURETIME",
            "dataType": "string",
            "sourceColumn": "ROUTEDEPARTURETIME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DEPARTUREPORTDATETIME",
            "dataType": "string",
            "sourceColumn": "DEPARTUREPORTDATETIME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEARRIVALPORT",
            "dataType": "string",
            "sourceColumn": "ROUTEARRIVALPORT",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEARRIVALPORTNAME",
            "dataType": "string",
            "sourceColumn": "ROUTEARRIVALPORTNAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEARRIVALDATE",
            "dataType": "dateTime",
            "sourceColumn": "ROUTEARRIVALDATE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ROUTEARRIVALDATETIME",
            "dataType": "string",
            "sourceColumn": "ROUTEARRIVALDATETIME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEARRIVALTIME",
            "dataType": "string",
            "sourceColumn": "ROUTEARRIVALTIME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ARRIVALPORTDATETIME",
            "dataType": "string",
            "sourceColumn": "ARRIVALPORTDATETIME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ROUTEDEPARTUREARRIVALDATETIME",
            "dataType": "string",
            "sourceColumn": "ROUTEDEPARTUREARRIVALDATETIME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PHYSICALSHIPNAME",
            "dataType": "string",
            "sourceColumn": "PHYSICALSHIPNAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PHYSICALSHIPDESCRIPTION",
            "dataType": "string",
            "sourceColumn": "PHYSICALSHIPDESCRIPTION",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "VESSELCODE",
            "dataType": "string",
            "sourceColumn": "VESSELCODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DEPARTUREDAY",
            "dataType": "string",
            "sourceColumn": "DEPARTUREDAY",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DEPARTUREDAYS",
            "dataType": "string",
            "sourceColumn": "DEPARTUREDAYS",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DEPARTUREDATEDAY",
            "dataType": "string",
            "sourceColumn": "DEPARTUREDATEDAY",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "RESOURCETYPE",
            "dataType": "string",
            "sourceColumn": "RESOURCETYPE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "RESOURCETYPESORT",
            "dataType": "double",
            "sourceColumn": "RESOURCETYPESORT",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "PHYSICALRESOURCECODE",
            "dataType": "string",
            "sourceColumn": "PHYSICALRESOURCECODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PHYSICALRESOURCETYPE",
            "dataType": "string",
            "sourceColumn": "PHYSICALRESOURCETYPE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SOLDCAPACITY",
            "dataType": "double",
            "sourceColumn": "SOLDCAPACITY",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "AVAILABLECAPACITY",
            "dataType": "double",
            "sourceColumn": "AVAILABLECAPACITY",
            "sourceProviderType": "Decimal"
          }
        ],
        "partitions": [
          {
            "name": "Query",
            "dataView": "full",
            "source": {
              "query": [
                "SELECT ",
                "SAILINGCODE,",
                "SAILINGDEPARTUREDATE,",
                "SAILINGDEPARTUREDATETIME,",
                "SAILINGDEPARTURETIME,",
                "LINECODE,",
                "LEGCODE,",
                "LEGNAME,",
                "ROUTEDEPARTUREPORT,",
                "ROUTEDEPARTUREPORTNAME,",
                "ROUTEDEPARTUREDATE,",
                "ROUTEDEPARTUREDATETIME,",
                "ROUTEDEPARTURETIME,",
                "DEPARTUREPORTDATETIME,",
                "ROUTEARRIVALPORT,",
                "ROUTEARRIVALPORTNAME,",
                "ROUTEARRIVALDATE,",
                "ROUTEARRIVALDATETIME,",
                "ROUTEARRIVALTIME,",
                "ARRIVALPORTDATETIME,",
                "ROUTEDEPARTUREARRIVALDATETIME,",
                "PHYSICALSHIPNAME,",
                "PHYSICALSHIPDESCRIPTION,",
                "LEGCODE || ' ' || '(' || VESSELCODE || ')' AS VESSELCODE,",
                "DEPARTUREDAY,",
                "DEPARTUREDAYS,",
                "DEPARTUREDATEDAY,",
                "CASE WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN '1PASSENGER'     ",
                "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN '2CAR DECK '",
                "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN '3CABIN    '",
                "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN '4CHAIR    '",
                "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN '5ONBOARD  '     ",
                "END RESOURCETYPE, ",
                "CASE  ",
                "     WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 1 ",
                "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 2",
                "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 3",
                "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 4",
                "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 5     ",
                "END RESOURCETYPESORT, ",
                "CASE WHEN PHYSICALRESOURCECODE IN ('BUS') THEN 'BUS (FT)' ",
                "     WHEN PHYSICALRESOURCECODE IN ('FOH') THEN 'FOH (FT)' ",
                "     WHEN PHYSICALRESOURCECODE IN ('POH') THEN 'POH (FT)' ",
                "     WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' ",
                "     WHEN PHYSICALRESOURCECODE NOT IN ('BUS', 'FOH', 'POH', 'UH') THEN PHYSICALRESOURCECODE  ",
                "END AS PHYSICALRESOURCECODE,",
                "PHYSICALRESOURCETYPE,",
                "SOLDCAPACITY,",
                "AVAILABLECAPACITY ",
                "FROM ",
                "(SELECT ",
                "ALLSAILINGS.SAILINGCODE,",
                "ALLSAILINGS.SAILINGDEPARTUREDATE,",
                "ALLSAILINGS.SAILINGDEPARTUREDATETIME,",
                "ALLSAILINGS.SAILINGDEPARTURETIME,",
                "ALLSAILINGS.LINECODE,",
                "ALLSAILINGS.LEGCODE,",
                "ALLSAILINGS.LEGNAME,",
                "ALLSAILINGS.ROUTEDEPARTUREPORT,",
                "ALLSAILINGS.ROUTEDEPARTUREPORTNAME,",
                "ALLSAILINGS.ROUTEDEPARTUREDATE,",
                "ALLSAILINGS.ROUTEDEPARTUREDATETIME,",
                "ALLSAILINGS.ROUTEDEPARTURETIME,",
                "ALLSAILINGS.DEPARTUREPORTDATETIME,",
                "ALLSAILINGS.ROUTEARRIVALPORT,",
                "ALLSAILINGS.ROUTEARRIVALPORTNAME,",
                "ALLSAILINGS.ROUTEARRIVALDATE,",
                "ALLSAILINGS.ROUTEARRIVALDATETIME,",
                "ALLSAILINGS.ROUTEARRIVALTIME,",
                "ALLSAILINGS.ARRIVALPORTDATETIME,",
                "ALLSAILINGS.ROUTEDEPARTUREARRIVALDATETIME,",
                "ALLSAILINGS.PHYSICALSHIPNAME,",
                "ALLSAILINGS.PHYSICALSHIPDESCRIPTION,",
                "ALLSAILINGS.VESSELCODE,",
                "ALLSAILINGS.DEPARTUREDAY,",
                "ALLSAILINGS.DEPARTUREDAYS,",
                "ALLSAILINGS.DEPARTUREDATEDAY,",
                "DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE,",
                "CASE WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('PAX', 'CHILD')                                  THEN 'PASSENGER'     ",
                "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 'CAR DECK'",
                "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 'CABIN'",
                "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('SEA', 'SEAWC')                                  THEN 'CHAIR'",
                "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 'ONBOARD'     ",
                "END PHYSICALRESOURCETYPE, ",
                "CASE WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY > ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (DEPARTURE_ALLOCATION.SOLDCAPACITY)",
                "     WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY = ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (DEPARTURE_ALLOCATION.SOLDCAPACITY)",
                "     WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY < ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (ARRIVAL_ALLOCATION.SOLDCAPACITY)",
                "END SOLDCAPACITY,",
                "CASE WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY < ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY)",
                "     WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY = ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY)",
                "     WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY > ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (ARRIVAL_ALLOCATION.AVAILABLECAPACITY)",
                "END AVAILABLECAPACITY ",
                "FROM ",
                "(SELECT ",
                "SAILING.CODE AS SAILINGCODE,",
                "SAILING.LINECODE,",
                "SAILING.SAILINGDEPARTUREDATE,",
                "TO_CHAR(SAILING.SAILINGDEPARTUREDATE,'DD-MON-YY HH24:MI') AS SAILINGDEPARTUREDATETIME,",
                "TO_CHAR(SAILING.SAILINGDEPARTUREDATE,'HH24:MI') AS SAILINGDEPARTURETIME,",
                "DEPARTUREPORT.CODE || '-' || ARRIVALPORT.CODE AS LEGCODE,",
                "DEPARTUREPORT.NAME || ' - ' ||   ARRIVALPORT.NAME AS LEGNAME,",
                "DEPARTUREPORT.CODE AS ROUTEDEPARTUREPORT,",
                "DEPARTUREPORT.NAME AS ROUTEDEPARTUREPORTNAME,",
                "SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME AS ROUTEDEPARTUREDATE,",
                "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') AS ROUTEDEPARTUREDATETIME,",
                "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'HH24:MI') AS ROUTEDEPARTURETIME,",
                "DEPARTUREPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') || ')' AS DEPARTUREPORTDATETIME,",
                "ARRIVALPORT.CODE AS ROUTEARRIVALPORT,",
                "ARRIVALPORT.NAME AS ROUTEARRIVALPORTNAME,",
                "SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME AS ROUTEARRIVALDATE,",
                "TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') AS ROUTEARRIVALDATETIME,",
                "TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'HH24:MI') AS ROUTEARRIVALTIME,",
                "ARRIVALPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') || ')' AS ARRIVALPORTDATETIME,",
                "DEPARTUREPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') || ') - ' || ARRIVALPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') || ')' AS ROUTEDEPARTUREARRIVALDATETIME,",
                "SHIPTEMPLATE.PHYSICALSHIPNAME,",
                "PHYSICALSHIP.DESCRIPTION AS PHYSICALSHIPDESCRIPTION,",
                "SUBSTR(SHIPTEMPLATE.CODE,1,3) AS VESSELCODE,",
                "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY') AS DEPARTUREDAY,",
                "SUBSTR(TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY'),1,3) AS DEPARTUREDAYS,",
                "SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME || ' (' || SUBSTR(TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY'),1,3) || ')' AS DEPARTUREDATEDAY,",
                "SAILINGVESSELLICENSE.VESSELLICENSECODE,",
                "SAILINGVESSELLICENSE.CREWNUMBER,",
                "SAILINGVESSELLICENSE.SELLABLECAPACITY,",
                "SAILINGVESSELLICENSE.MAXCAPACITY",
                "FROM EBOOKING.MSP_SAILING SAILING",
                "INNER JOIN EBOOKING.MSP_SHIPTEMPLATE SHIPTEMPLATE",
                "    ON SHIPTEMPLATE.CODE = SAILING.SHIPTEMPLATECODE  ",
                "  AND SHIPTEMPLATE.STARTDATE = SAILING.SHIPTEMPLATESTARTDATE",
                "  AND SAILING.HIDEINFORMATION = 'N'",
                "INNER JOIN EBOOKING.MSP_PHYSICALSHIP PHYSICALSHIP",
                "    ON PHYSICALSHIP.NAME = SHIPTEMPLATE.PHYSICALSHIPNAME   ",
                "  AND PHYSICALSHIP.STARTDATE = SHIPTEMPLATE.PHYSICALSHIPSTARTDATE",
                "INNER JOIN EBOOKING.MSP_SAILINGPORTSCHEDULE SAILINGPORTSCHEDULEDEPARTURE",
                "    ON SAILINGPORTSCHEDULEDEPARTURE.SAILINGCODE = SAILING.CODE",
                "  AND SAILINGPORTSCHEDULEDEPARTURE.SAILINGSTARTDATE = SAILING.STARTDATE",
                "INNER JOIN EBOOKING.MSP_SAILINGPORTSCHEDULE SAILINGPORTSCHEDULEARRIVAL",
                "    ON SAILINGPORTSCHEDULEARRIVAL.SAILINGCODE = SAILING.CODE",
                "  AND SAILINGPORTSCHEDULEARRIVAL.SAILINGSTARTDATE = SAILING.STARTDATE",
                "INNER JOIN EBOOKING.MSP_LEG LEG",
                "    ON SAILINGPORTSCHEDULEDEPARTURE.PORTCODE = LEG.DEPARTURE_PORT",
                "  AND SAILINGPORTSCHEDULEDEPARTURE.PORTSTARTDATE = LEG.DEPARTURE_PORTSTARTDATE",
                "  AND SAILINGPORTSCHEDULEARRIVAL.PORTCODE = LEG.ARRIVAL_PORT",
                "  AND SAILINGPORTSCHEDULEARRIVAL.PORTSTARTDATE = LEG.ARRIVAL_PORTSTARTDATE",
                "INNER JOIN EBOOKING.MSP_PORT DEPARTUREPORT",
                "    ON DEPARTUREPORT.CODE = SAILINGPORTSCHEDULEDEPARTURE.PORTCODE",
                "INNER JOIN EBOOKING.MSP_PORT ARRIVALPORT",
                "    ON ARRIVALPORT.CODE = SAILINGPORTSCHEDULEARRIVAL.PORTCODE",
                "INNER JOIN EBOOKING.MSP_SAILINGVESSELLICENSE SAILINGVESSELLICENSE",
                "    ON SAILING.CODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
                "  AND SAILING.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
                "  AND SAILING.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE ",
                "  AND SAILING.SHIPTEMPLATESTARTDATE = SAILINGVESSELLICENSE.SHIPTEMPLATESTARTDATE",
                "  AND ARRIVALPORT.CODE = SUBSTR(SAILINGVESSELLICENSE.LEGCODE,5,3) ",
                "  AND SAILINGVESSELLICENSE.ENDDATE = '99991231000000'",
                "WHERE SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME IS NOT NULL",
                "AND SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME IS NOT NULL",
                "AND SAILINGPORTSCHEDULEDEPARTURE.PORTORDER - SAILINGPORTSCHEDULEARRIVAL.PORTORDER < 0 ) ALLSAILINGS",
                "LEFT OUTER JOIN ",
                "(SELECT ",
                "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
                "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
                "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
                "SAILINGSELLABLEPRODUCT.LEGCODE,",
                "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
                "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
                "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
                "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
                "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
                "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
                "AND SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
                "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
                "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0 ) ARRIVAL_ALLOCATION",
                "    ON ALLSAILINGS.SAILINGCODE = ARRIVAL_ALLOCATION.SAILINGCODE",
                "  AND ALLSAILINGS.ROUTEARRIVALPORT = ARRIVAL_ALLOCATION.ARRIVALPORT ",
                "LEFT OUTER JOIN ",
                "(SELECT ",
                "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
                "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
                "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
                "SAILINGSELLABLEPRODUCT.LEGCODE,",
                "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
                "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
                "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
                "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
                "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
                "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
                "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
                "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
                "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0) DEPARTURE_ALLOCATION",
                "    ON ALLSAILINGS.SAILINGCODE = DEPARTURE_ALLOCATION.SAILINGCODE",
                "  AND ALLSAILINGS.ROUTEDEPARTUREPORT = DEPARTURE_ALLOCATION.DEPARTUREPORT",
                "  AND DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE = ARRIVAL_ALLOCATION.PHYSICALRESOURCECODE) ALL_ALLOCATIONS",
                "",
                "ORDER BY ROUTEDEPARTUREDATE, RESOURCETYPESORT"
              ],
              "dataSource": "Oracle scan.stg01.rac.bcferries.corp"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
                  "SAILINGCODE,",
                  "SAILINGDEPARTUREDATE,",
                  "SAILINGDEPARTUREDATETIME,",
                  "SAILINGDEPARTURETIME,",
                  "LINECODE,",
                  "LEGCODE,",
                  "LEGNAME,",
                  "ROUTEDEPARTUREPORT,",
                  "ROUTEDEPARTUREPORTNAME,",
                  "ROUTEDEPARTUREDATE,",
                  "ROUTEDEPARTUREDATETIME,",
                  "ROUTEDEPARTURETIME,",
                  "DEPARTUREPORTDATETIME,",
                  "ROUTEARRIVALPORT,",
                  "ROUTEARRIVALPORTNAME,",
                  "ROUTEARRIVALDATE,",
                  "ROUTEARRIVALDATETIME,",
                  "ROUTEARRIVALTIME,",
                  "ARRIVALPORTDATETIME,",
                  "ROUTEDEPARTUREARRIVALDATETIME,",
                  "PHYSICALSHIPNAME,",
                  "PHYSICALSHIPDESCRIPTION,",
                  "LEGCODE || ' ' || '(' || VESSELCODE || ')' AS VESSELCODE,",
                  "DEPARTUREDAY,",
                  "DEPARTUREDAYS,",
                  "DEPARTUREDATEDAY,",
                  "CASE WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN '1PASSENGER'     ",
                  "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN '2CAR DECK '",
                  "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN '3CABIN    '",
                  "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN '4CHAIR    '",
                  "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN '5ONBOARD  '     ",
                  "END RESOURCETYPE, ",
                  "CASE  ",
                  "     WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 1 ",
                  "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 2",
                  "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 3",
                  "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 4",
                  "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 5     ",
                  "END RESOURCETYPESORT, ",
                  "CASE WHEN PHYSICALRESOURCECODE IN ('BUS') THEN 'BUS (FT)' ",
                  "     WHEN PHYSICALRESOURCECODE IN ('FOH') THEN 'FOH (FT)' ",
                  "     WHEN PHYSICALRESOURCECODE IN ('POH') THEN 'POH (FT)' ",
                  "     WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' ",
                  "     WHEN PHYSICALRESOURCECODE NOT IN ('BUS', 'FOH', 'POH', 'UH') THEN PHYSICALRESOURCECODE  ",
                  "END AS PHYSICALRESOURCECODE,",
                  "PHYSICALRESOURCETYPE,",
                  "SOLDCAPACITY,",
                  "AVAILABLECAPACITY ",
                  "FROM ",
                  "(SELECT ",
                  "ALLSAILINGS.SAILINGCODE,",
                  "ALLSAILINGS.SAILINGDEPARTUREDATE,",
                  "ALLSAILINGS.SAILINGDEPARTUREDATETIME,",
                  "ALLSAILINGS.SAILINGDEPARTURETIME,",
                  "ALLSAILINGS.LINECODE,",
                  "ALLSAILINGS.LEGCODE,",
                  "ALLSAILINGS.LEGNAME,",
                  "ALLSAILINGS.ROUTEDEPARTUREPORT,",
                  "ALLSAILINGS.ROUTEDEPARTUREPORTNAME,",
                  "ALLSAILINGS.ROUTEDEPARTUREDATE,",
                  "ALLSAILINGS.ROUTEDEPARTUREDATETIME,",
                  "ALLSAILINGS.ROUTEDEPARTURETIME,",
                  "ALLSAILINGS.DEPARTUREPORTDATETIME,",
                  "ALLSAILINGS.ROUTEARRIVALPORT,",
                  "ALLSAILINGS.ROUTEARRIVALPORTNAME,",
                  "ALLSAILINGS.ROUTEARRIVALDATE,",
                  "ALLSAILINGS.ROUTEARRIVALDATETIME,",
                  "ALLSAILINGS.ROUTEARRIVALTIME,",
                  "ALLSAILINGS.ARRIVALPORTDATETIME,",
                  "ALLSAILINGS.ROUTEDEPARTUREARRIVALDATETIME,",
                  "ALLSAILINGS.PHYSICALSHIPNAME,",
                  "ALLSAILINGS.PHYSICALSHIPDESCRIPTION,",
                  "ALLSAILINGS.VESSELCODE,",
                  "ALLSAILINGS.DEPARTUREDAY,",
                  "ALLSAILINGS.DEPARTUREDAYS,",
                  "ALLSAILINGS.DEPARTUREDATEDAY,",
                  "DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE,",
                  "CASE WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('PAX', 'CHILD')                                  THEN 'PASSENGER'     ",
                  "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 'CAR DECK'",
                  "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 'CABIN'",
                  "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('SEA', 'SEAWC')                                  THEN 'CHAIR'",
                  "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 'ONBOARD'     ",
                  "END PHYSICALRESOURCETYPE, ",
                  "CASE WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY > ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (DEPARTURE_ALLOCATION.SOLDCAPACITY)",
                  "     WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY = ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (DEPARTURE_ALLOCATION.SOLDCAPACITY)",
                  "     WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY < ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (ARRIVAL_ALLOCATION.SOLDCAPACITY)",
                  "END SOLDCAPACITY,",
                  "CASE WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY < ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY)",
                  "     WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY = ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY)",
                  "     WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY > ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (ARRIVAL_ALLOCATION.AVAILABLECAPACITY)",
                  "END AVAILABLECAPACITY ",
                  "FROM ",
                  "(SELECT ",
                  "SAILING.CODE AS SAILINGCODE,",
                  "SAILING.LINECODE,",
                  "SAILING.SAILINGDEPARTUREDATE,",
                  "TO_CHAR(SAILING.SAILINGDEPARTUREDATE,'DD-MON-YY HH24:MI') AS SAILINGDEPARTUREDATETIME,",
                  "TO_CHAR(SAILING.SAILINGDEPARTUREDATE,'HH24:MI') AS SAILINGDEPARTURETIME,",
                  "DEPARTUREPORT.CODE || '-' || ARRIVALPORT.CODE AS LEGCODE,",
                  "DEPARTUREPORT.NAME || ' - ' ||   ARRIVALPORT.NAME AS LEGNAME,",
                  "DEPARTUREPORT.CODE AS ROUTEDEPARTUREPORT,",
                  "DEPARTUREPORT.NAME AS ROUTEDEPARTUREPORTNAME,",
                  "SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME AS ROUTEDEPARTUREDATE,",
                  "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') AS ROUTEDEPARTUREDATETIME,",
                  "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'HH24:MI') AS ROUTEDEPARTURETIME,",
                  "DEPARTUREPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') || ')' AS DEPARTUREPORTDATETIME,",
                  "ARRIVALPORT.CODE AS ROUTEARRIVALPORT,",
                  "ARRIVALPORT.NAME AS ROUTEARRIVALPORTNAME,",
                  "SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME AS ROUTEARRIVALDATE,",
                  "TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') AS ROUTEARRIVALDATETIME,",
                  "TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'HH24:MI') AS ROUTEARRIVALTIME,",
                  "ARRIVALPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') || ')' AS ARRIVALPORTDATETIME,",
                  "DEPARTUREPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') || ') - ' || ARRIVALPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') || ')' AS ROUTEDEPARTUREARRIVALDATETIME,",
                  "SHIPTEMPLATE.PHYSICALSHIPNAME,",
                  "PHYSICALSHIP.DESCRIPTION AS PHYSICALSHIPDESCRIPTION,",
                  "SUBSTR(SHIPTEMPLATE.CODE,1,3) AS VESSELCODE,",
                  "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY') AS DEPARTUREDAY,",
                  "SUBSTR(TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY'),1,3) AS DEPARTUREDAYS,",
                  "SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME || ' (' || SUBSTR(TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY'),1,3) || ')' AS DEPARTUREDATEDAY,",
                  "SAILINGVESSELLICENSE.VESSELLICENSECODE,",
                  "SAILINGVESSELLICENSE.CREWNUMBER,",
                  "SAILINGVESSELLICENSE.SELLABLECAPACITY,",
                  "SAILINGVESSELLICENSE.MAXCAPACITY",
                  "FROM EBOOKING.MSP_SAILING SAILING",
                  "INNER JOIN EBOOKING.MSP_SHIPTEMPLATE SHIPTEMPLATE",
                  "    ON SHIPTEMPLATE.CODE = SAILING.SHIPTEMPLATECODE  ",
                  "  AND SHIPTEMPLATE.STARTDATE = SAILING.SHIPTEMPLATESTARTDATE",
                  "  AND SAILING.HIDEINFORMATION = 'N'",
                  "INNER JOIN EBOOKING.MSP_PHYSICALSHIP PHYSICALSHIP",
                  "    ON PHYSICALSHIP.NAME = SHIPTEMPLATE.PHYSICALSHIPNAME   ",
                  "  AND PHYSICALSHIP.STARTDATE = SHIPTEMPLATE.PHYSICALSHIPSTARTDATE",
                  "INNER JOIN EBOOKING.MSP_SAILINGPORTSCHEDULE SAILINGPORTSCHEDULEDEPARTURE",
                  "    ON SAILINGPORTSCHEDULEDEPARTURE.SAILINGCODE = SAILING.CODE",
                  "  AND SAILINGPORTSCHEDULEDEPARTURE.SAILINGSTARTDATE = SAILING.STARTDATE",
                  "INNER JOIN EBOOKING.MSP_SAILINGPORTSCHEDULE SAILINGPORTSCHEDULEARRIVAL",
                  "    ON SAILINGPORTSCHEDULEARRIVAL.SAILINGCODE = SAILING.CODE",
                  "  AND SAILINGPORTSCHEDULEARRIVAL.SAILINGSTARTDATE = SAILING.STARTDATE",
                  "INNER JOIN EBOOKING.MSP_LEG LEG",
                  "    ON SAILINGPORTSCHEDULEDEPARTURE.PORTCODE = LEG.DEPARTURE_PORT",
                  "  AND SAILINGPORTSCHEDULEDEPARTURE.PORTSTARTDATE = LEG.DEPARTURE_PORTSTARTDATE",
                  "  AND SAILINGPORTSCHEDULEARRIVAL.PORTCODE = LEG.ARRIVAL_PORT",
                  "  AND SAILINGPORTSCHEDULEARRIVAL.PORTSTARTDATE = LEG.ARRIVAL_PORTSTARTDATE",
                  "INNER JOIN EBOOKING.MSP_PORT DEPARTUREPORT",
                  "    ON DEPARTUREPORT.CODE = SAILINGPORTSCHEDULEDEPARTURE.PORTCODE",
                  "INNER JOIN EBOOKING.MSP_PORT ARRIVALPORT",
                  "    ON ARRIVALPORT.CODE = SAILINGPORTSCHEDULEARRIVAL.PORTCODE",
                  "INNER JOIN EBOOKING.MSP_SAILINGVESSELLICENSE SAILINGVESSELLICENSE",
                  "    ON SAILING.CODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
                  "  AND SAILING.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
                  "  AND SAILING.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE ",
                  "  AND SAILING.SHIPTEMPLATESTARTDATE = SAILINGVESSELLICENSE.SHIPTEMPLATESTARTDATE",
                  "  AND ARRIVALPORT.CODE = SUBSTR(SAILINGVESSELLICENSE.LEGCODE,5,3) ",
                  "  AND SAILINGVESSELLICENSE.ENDDATE = '99991231000000'",
                  "WHERE SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME IS NOT NULL",
                  "AND SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME IS NOT NULL",
                  "AND SAILINGPORTSCHEDULEDEPARTURE.PORTORDER - SAILINGPORTSCHEDULEARRIVAL.PORTORDER < 0 ) ALLSAILINGS",
                  "LEFT OUTER JOIN ",
                  "(SELECT ",
                  "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
                  "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
                  "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
                  "SAILINGSELLABLEPRODUCT.LEGCODE,",
                  "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
                  "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
                  "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
                  "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
                  "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
                  "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
                  "AND SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
                  "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
                  "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0 ) ARRIVAL_ALLOCATION",
                  "    ON ALLSAILINGS.SAILINGCODE = ARRIVAL_ALLOCATION.SAILINGCODE",
                  "  AND ALLSAILINGS.ROUTEARRIVALPORT = ARRIVAL_ALLOCATION.ARRIVALPORT ",
                  "LEFT OUTER JOIN ",
                  "(SELECT ",
                  "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
                  "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
                  "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
                  "SAILINGSELLABLEPRODUCT.LEGCODE,",
                  "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
                  "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
                  "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
                  "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
                  "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
                  "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
                  "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
                  "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
                  "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0) DEPARTURE_ALLOCATION",
                  "    ON ALLSAILINGS.SAILINGCODE = DEPARTURE_ALLOCATION.SAILINGCODE",
                  "  AND ALLSAILINGS.ROUTEDEPARTUREPORT = DEPARTURE_ALLOCATION.DEPARTUREPORT",
                  "  AND DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE = ARRIVAL_ALLOCATION.PHYSICALRESOURCECODE) ALL_ALLOCATIONS",
                  "",
                  "ORDER BY ROUTEDEPARTUREDATE, RESOURCETYPESORT</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ",
              "SAILINGCODE,",
              "SAILINGDEPARTUREDATE,",
              "SAILINGDEPARTUREDATETIME,",
              "SAILINGDEPARTURETIME,",
              "LINECODE,",
              "LEGCODE,",
              "LEGNAME,",
              "ROUTEDEPARTUREPORT,",
              "ROUTEDEPARTUREPORTNAME,",
              "ROUTEDEPARTUREDATE,",
              "ROUTEDEPARTUREDATETIME,",
              "ROUTEDEPARTURETIME,",
              "DEPARTUREPORTDATETIME,",
              "ROUTEARRIVALPORT,",
              "ROUTEARRIVALPORTNAME,",
              "ROUTEARRIVALDATE,",
              "ROUTEARRIVALDATETIME,",
              "ROUTEARRIVALTIME,",
              "ARRIVALPORTDATETIME,",
              "ROUTEDEPARTUREARRIVALDATETIME,",
              "PHYSICALSHIPNAME,",
              "PHYSICALSHIPDESCRIPTION,",
              "LEGCODE || ' ' || '(' || VESSELCODE || ')' AS VESSELCODE,",
              "DEPARTUREDAY,",
              "DEPARTUREDAYS,",
              "DEPARTUREDATEDAY,",
              "CASE WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN '1PASSENGER'     ",
              "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN '2CAR DECK '",
              "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN '3CABIN    '",
              "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN '4CHAIR    '",
              "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN '5ONBOARD  '     ",
              "END RESOURCETYPE, ",
              "CASE  ",
              "     WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 1 ",
              "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 2",
              "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 3",
              "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 4",
              "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 5     ",
              "END RESOURCETYPESORT, ",
              "CASE WHEN PHYSICALRESOURCECODE IN ('BUS') THEN 'BUS (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('FOH') THEN 'FOH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('POH') THEN 'POH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE NOT IN ('BUS', 'FOH', 'POH', 'UH') THEN PHYSICALRESOURCECODE  ",
              "END AS PHYSICALRESOURCECODE,",
              "PHYSICALRESOURCETYPE,",
              "SOLDCAPACITY,",
              "AVAILABLECAPACITY ",
              "FROM ",
              "(SELECT ",
              "ALLSAILINGS.SAILINGCODE,",
              "ALLSAILINGS.SAILINGDEPARTUREDATE,",
              "ALLSAILINGS.SAILINGDEPARTUREDATETIME,",
              "ALLSAILINGS.SAILINGDEPARTURETIME,",
              "ALLSAILINGS.LINECODE,",
              "ALLSAILINGS.LEGCODE,",
              "ALLSAILINGS.LEGNAME,",
              "ALLSAILINGS.ROUTEDEPARTUREPORT,",
              "ALLSAILINGS.ROUTEDEPARTUREPORTNAME,",
              "ALLSAILINGS.ROUTEDEPARTUREDATE,",
              "ALLSAILINGS.ROUTEDEPARTUREDATETIME,",
              "ALLSAILINGS.ROUTEDEPARTURETIME,",
              "ALLSAILINGS.DEPARTUREPORTDATETIME,",
              "ALLSAILINGS.ROUTEARRIVALPORT,",
              "ALLSAILINGS.ROUTEARRIVALPORTNAME,",
              "ALLSAILINGS.ROUTEARRIVALDATE,",
              "ALLSAILINGS.ROUTEARRIVALDATETIME,",
              "ALLSAILINGS.ROUTEARRIVALTIME,",
              "ALLSAILINGS.ARRIVALPORTDATETIME,",
              "ALLSAILINGS.ROUTEDEPARTUREARRIVALDATETIME,",
              "ALLSAILINGS.PHYSICALSHIPNAME,",
              "ALLSAILINGS.PHYSICALSHIPDESCRIPTION,",
              "ALLSAILINGS.VESSELCODE,",
              "ALLSAILINGS.DEPARTUREDAY,",
              "ALLSAILINGS.DEPARTUREDAYS,",
              "ALLSAILINGS.DEPARTUREDATEDAY,",
              "DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE,",
              "CASE WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('PAX', 'CHILD')                                  THEN 'PASSENGER'     ",
              "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 'CAR DECK'",
              "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 'CABIN'",
              "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('SEA', 'SEAWC')                                  THEN 'CHAIR'",
              "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 'ONBOARD'     ",
              "END PHYSICALRESOURCETYPE, ",
              "CASE WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY > ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (DEPARTURE_ALLOCATION.SOLDCAPACITY)",
              "     WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY = ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (DEPARTURE_ALLOCATION.SOLDCAPACITY)",
              "     WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY < ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (ARRIVAL_ALLOCATION.SOLDCAPACITY)",
              "END SOLDCAPACITY,",
              "CASE WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY < ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY)",
              "     WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY = ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY)",
              "     WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY > ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (ARRIVAL_ALLOCATION.AVAILABLECAPACITY)",
              "END AVAILABLECAPACITY ",
              "FROM ",
              "(SELECT ",
              "SAILING.CODE AS SAILINGCODE,",
              "SAILING.LINECODE,",
              "SAILING.SAILINGDEPARTUREDATE,",
              "TO_CHAR(SAILING.SAILINGDEPARTUREDATE,'DD-MON-YY HH24:MI') AS SAILINGDEPARTUREDATETIME,",
              "TO_CHAR(SAILING.SAILINGDEPARTUREDATE,'HH24:MI') AS SAILINGDEPARTURETIME,",
              "DEPARTUREPORT.CODE || '-' || ARRIVALPORT.CODE AS LEGCODE,",
              "DEPARTUREPORT.NAME || ' - ' ||   ARRIVALPORT.NAME AS LEGNAME,",
              "DEPARTUREPORT.CODE AS ROUTEDEPARTUREPORT,",
              "DEPARTUREPORT.NAME AS ROUTEDEPARTUREPORTNAME,",
              "SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME AS ROUTEDEPARTUREDATE,",
              "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') AS ROUTEDEPARTUREDATETIME,",
              "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'HH24:MI') AS ROUTEDEPARTURETIME,",
              "DEPARTUREPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') || ')' AS DEPARTUREPORTDATETIME,",
              "ARRIVALPORT.CODE AS ROUTEARRIVALPORT,",
              "ARRIVALPORT.NAME AS ROUTEARRIVALPORTNAME,",
              "SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME AS ROUTEARRIVALDATE,",
              "TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') AS ROUTEARRIVALDATETIME,",
              "TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'HH24:MI') AS ROUTEARRIVALTIME,",
              "ARRIVALPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') || ')' AS ARRIVALPORTDATETIME,",
              "DEPARTUREPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') || ') - ' || ARRIVALPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') || ')' AS ROUTEDEPARTUREARRIVALDATETIME,",
              "SHIPTEMPLATE.PHYSICALSHIPNAME,",
              "PHYSICALSHIP.DESCRIPTION AS PHYSICALSHIPDESCRIPTION,",
              "SUBSTR(SHIPTEMPLATE.CODE,1,3) AS VESSELCODE,",
              "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY') AS DEPARTUREDAY,",
              "SUBSTR(TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY'),1,3) AS DEPARTUREDAYS,",
              "SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME || ' (' || SUBSTR(TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY'),1,3) || ')' AS DEPARTUREDATEDAY,",
              "SAILINGVESSELLICENSE.VESSELLICENSECODE,",
              "SAILINGVESSELLICENSE.CREWNUMBER,",
              "SAILINGVESSELLICENSE.SELLABLECAPACITY,",
              "SAILINGVESSELLICENSE.MAXCAPACITY",
              "FROM EBOOKING.MSP_SAILING SAILING",
              "INNER JOIN EBOOKING.MSP_SHIPTEMPLATE SHIPTEMPLATE",
              "    ON SHIPTEMPLATE.CODE = SAILING.SHIPTEMPLATECODE  ",
              "  AND SHIPTEMPLATE.STARTDATE = SAILING.SHIPTEMPLATESTARTDATE",
              "  AND SAILING.HIDEINFORMATION = 'N'",
              "INNER JOIN EBOOKING.MSP_PHYSICALSHIP PHYSICALSHIP",
              "    ON PHYSICALSHIP.NAME = SHIPTEMPLATE.PHYSICALSHIPNAME   ",
              "  AND PHYSICALSHIP.STARTDATE = SHIPTEMPLATE.PHYSICALSHIPSTARTDATE",
              "INNER JOIN EBOOKING.MSP_SAILINGPORTSCHEDULE SAILINGPORTSCHEDULEDEPARTURE",
              "    ON SAILINGPORTSCHEDULEDEPARTURE.SAILINGCODE = SAILING.CODE",
              "  AND SAILINGPORTSCHEDULEDEPARTURE.SAILINGSTARTDATE = SAILING.STARTDATE",
              "INNER JOIN EBOOKING.MSP_SAILINGPORTSCHEDULE SAILINGPORTSCHEDULEARRIVAL",
              "    ON SAILINGPORTSCHEDULEARRIVAL.SAILINGCODE = SAILING.CODE",
              "  AND SAILINGPORTSCHEDULEARRIVAL.SAILINGSTARTDATE = SAILING.STARTDATE",
              "INNER JOIN EBOOKING.MSP_LEG LEG",
              "    ON SAILINGPORTSCHEDULEDEPARTURE.PORTCODE = LEG.DEPARTURE_PORT",
              "  AND SAILINGPORTSCHEDULEDEPARTURE.PORTSTARTDATE = LEG.DEPARTURE_PORTSTARTDATE",
              "  AND SAILINGPORTSCHEDULEARRIVAL.PORTCODE = LEG.ARRIVAL_PORT",
              "  AND SAILINGPORTSCHEDULEARRIVAL.PORTSTARTDATE = LEG.ARRIVAL_PORTSTARTDATE",
              "INNER JOIN EBOOKING.MSP_PORT DEPARTUREPORT",
              "    ON DEPARTUREPORT.CODE = SAILINGPORTSCHEDULEDEPARTURE.PORTCODE",
              "INNER JOIN EBOOKING.MSP_PORT ARRIVALPORT",
              "    ON ARRIVALPORT.CODE = SAILINGPORTSCHEDULEARRIVAL.PORTCODE",
              "INNER JOIN EBOOKING.MSP_SAILINGVESSELLICENSE SAILINGVESSELLICENSE",
              "    ON SAILING.CODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
              "  AND SAILING.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
              "  AND SAILING.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE ",
              "  AND SAILING.SHIPTEMPLATESTARTDATE = SAILINGVESSELLICENSE.SHIPTEMPLATESTARTDATE",
              "  AND ARRIVALPORT.CODE = SUBSTR(SAILINGVESSELLICENSE.LEGCODE,5,3) ",
              "  AND SAILINGVESSELLICENSE.ENDDATE = '99991231000000'",
              "WHERE SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME IS NOT NULL",
              "AND SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME IS NOT NULL",
              "AND SAILINGPORTSCHEDULEDEPARTURE.PORTORDER - SAILINGPORTSCHEDULEARRIVAL.PORTORDER < 0 ) ALLSAILINGS",
              "LEFT OUTER JOIN ",
              "(SELECT ",
              "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
              "SAILINGSELLABLEPRODUCT.LEGCODE,",
              "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
              "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
              "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
              "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
              "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
              "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
              "AND SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
              "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
              "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0 ) ARRIVAL_ALLOCATION",
              "    ON ALLSAILINGS.SAILINGCODE = ARRIVAL_ALLOCATION.SAILINGCODE",
              "  AND ALLSAILINGS.ROUTEARRIVALPORT = ARRIVAL_ALLOCATION.ARRIVALPORT ",
              "LEFT OUTER JOIN ",
              "(SELECT ",
              "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
              "SAILINGSELLABLEPRODUCT.LEGCODE,",
              "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
              "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
              "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
              "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
              "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
              "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
              "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
              "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
              "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0) DEPARTURE_ALLOCATION",
              "    ON ALLSAILINGS.SAILINGCODE = DEPARTURE_ALLOCATION.SAILINGCODE",
              "  AND ALLSAILINGS.ROUTEDEPARTUREPORT = DEPARTURE_ALLOCATION.DEPARTUREPORT",
              "  AND DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE = ARRIVAL_ALLOCATION.PHYSICALRESOURCECODE) ALL_ALLOCATIONS",
              "",
              "ORDER BY ROUTEDEPARTUREDATE, RESOURCETYPESORT"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Query"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
              "SAILINGCODE,",
              "SAILINGDEPARTUREDATE,",
              "SAILINGDEPARTUREDATETIME,",
              "SAILINGDEPARTURETIME,",
              "LINECODE,",
              "LEGCODE,",
              "LEGNAME,",
              "ROUTEDEPARTUREPORT,",
              "ROUTEDEPARTUREPORTNAME,",
              "ROUTEDEPARTUREDATE,",
              "ROUTEDEPARTUREDATETIME,",
              "ROUTEDEPARTURETIME,",
              "DEPARTUREPORTDATETIME,",
              "ROUTEARRIVALPORT,",
              "ROUTEARRIVALPORTNAME,",
              "ROUTEARRIVALDATE,",
              "ROUTEARRIVALDATETIME,",
              "ROUTEARRIVALTIME,",
              "ARRIVALPORTDATETIME,",
              "ROUTEDEPARTUREARRIVALDATETIME,",
              "PHYSICALSHIPNAME,",
              "PHYSICALSHIPDESCRIPTION,",
              "LEGCODE || ' ' || '(' || VESSELCODE || ')' AS VESSELCODE,",
              "DEPARTUREDAY,",
              "DEPARTUREDAYS,",
              "DEPARTUREDATEDAY,",
              "CASE WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN '1PASSENGER'     ",
              "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN '2CAR DECK '",
              "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN '3CABIN    '",
              "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN '4CHAIR    '",
              "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN '5ONBOARD  '     ",
              "END RESOURCETYPE, ",
              "CASE  ",
              "     WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 1 ",
              "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 2",
              "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 3",
              "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 4",
              "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 5     ",
              "END RESOURCETYPESORT, ",
              "CASE WHEN PHYSICALRESOURCECODE IN ('BUS') THEN 'BUS (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('FOH') THEN 'FOH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('POH') THEN 'POH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE NOT IN ('BUS', 'FOH', 'POH', 'UH') THEN PHYSICALRESOURCECODE  ",
              "END AS PHYSICALRESOURCECODE,",
              "PHYSICALRESOURCETYPE,",
              "SOLDCAPACITY,",
              "AVAILABLECAPACITY ",
              "FROM ",
              "(SELECT ",
              "ALLSAILINGS.SAILINGCODE,",
              "ALLSAILINGS.SAILINGDEPARTUREDATE,",
              "ALLSAILINGS.SAILINGDEPARTUREDATETIME,",
              "ALLSAILINGS.SAILINGDEPARTURETIME,",
              "ALLSAILINGS.LINECODE,",
              "ALLSAILINGS.LEGCODE,",
              "ALLSAILINGS.LEGNAME,",
              "ALLSAILINGS.ROUTEDEPARTUREPORT,",
              "ALLSAILINGS.ROUTEDEPARTUREPORTNAME,",
              "ALLSAILINGS.ROUTEDEPARTUREDATE,",
              "ALLSAILINGS.ROUTEDEPARTUREDATETIME,",
              "ALLSAILINGS.ROUTEDEPARTURETIME,",
              "ALLSAILINGS.DEPARTUREPORTDATETIME,",
              "ALLSAILINGS.ROUTEARRIVALPORT,",
              "ALLSAILINGS.ROUTEARRIVALPORTNAME,",
              "ALLSAILINGS.ROUTEARRIVALDATE,",
              "ALLSAILINGS.ROUTEARRIVALDATETIME,",
              "ALLSAILINGS.ROUTEARRIVALTIME,",
              "ALLSAILINGS.ARRIVALPORTDATETIME,",
              "ALLSAILINGS.ROUTEDEPARTUREARRIVALDATETIME,",
              "ALLSAILINGS.PHYSICALSHIPNAME,",
              "ALLSAILINGS.PHYSICALSHIPDESCRIPTION,",
              "ALLSAILINGS.VESSELCODE,",
              "ALLSAILINGS.DEPARTUREDAY,",
              "ALLSAILINGS.DEPARTUREDAYS,",
              "ALLSAILINGS.DEPARTUREDATEDAY,",
              "DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE,",
              "CASE WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('PAX', 'CHILD')                                  THEN 'PASSENGER'     ",
              "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 'CAR DECK'",
              "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 'CABIN'",
              "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('SEA', 'SEAWC')                                  THEN 'CHAIR'",
              "     WHEN DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 'ONBOARD'     ",
              "END PHYSICALRESOURCETYPE, ",
              "CASE WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY > ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (DEPARTURE_ALLOCATION.SOLDCAPACITY)",
              "     WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY = ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (DEPARTURE_ALLOCATION.SOLDCAPACITY)",
              "     WHEN (DEPARTURE_ALLOCATION.SOLDCAPACITY < ARRIVAL_ALLOCATION.SOLDCAPACITY) THEN (ARRIVAL_ALLOCATION.SOLDCAPACITY)",
              "END SOLDCAPACITY,",
              "CASE WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY < ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY)",
              "     WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY = ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY)",
              "     WHEN (DEPARTURE_ALLOCATION.AVAILABLECAPACITY > ARRIVAL_ALLOCATION.AVAILABLECAPACITY) THEN (ARRIVAL_ALLOCATION.AVAILABLECAPACITY)",
              "END AVAILABLECAPACITY ",
              "FROM ",
              "(SELECT ",
              "SAILING.CODE AS SAILINGCODE,",
              "SAILING.LINECODE,",
              "SAILING.SAILINGDEPARTUREDATE,",
              "TO_CHAR(SAILING.SAILINGDEPARTUREDATE,'DD-MON-YY HH24:MI') AS SAILINGDEPARTUREDATETIME,",
              "TO_CHAR(SAILING.SAILINGDEPARTUREDATE,'HH24:MI') AS SAILINGDEPARTURETIME,",
              "DEPARTUREPORT.CODE || '-' || ARRIVALPORT.CODE AS LEGCODE,",
              "DEPARTUREPORT.NAME || ' - ' ||   ARRIVALPORT.NAME AS LEGNAME,",
              "DEPARTUREPORT.CODE AS ROUTEDEPARTUREPORT,",
              "DEPARTUREPORT.NAME AS ROUTEDEPARTUREPORTNAME,",
              "SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME AS ROUTEDEPARTUREDATE,",
              "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') AS ROUTEDEPARTUREDATETIME,",
              "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'HH24:MI') AS ROUTEDEPARTURETIME,",
              "DEPARTUREPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') || ')' AS DEPARTUREPORTDATETIME,",
              "ARRIVALPORT.CODE AS ROUTEARRIVALPORT,",
              "ARRIVALPORT.NAME AS ROUTEARRIVALPORTNAME,",
              "SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME AS ROUTEARRIVALDATE,",
              "TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') AS ROUTEARRIVALDATETIME,",
              "TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'HH24:MI') AS ROUTEARRIVALTIME,",
              "ARRIVALPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') || ')' AS ARRIVALPORTDATETIME,",
              "DEPARTUREPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME,'DD-MON-YY HH24:MI') || ') - ' || ARRIVALPORT.NAME || ' (' || TO_CHAR(SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME,'DD-MON-YY HH24:MI') || ')' AS ROUTEDEPARTUREARRIVALDATETIME,",
              "SHIPTEMPLATE.PHYSICALSHIPNAME,",
              "PHYSICALSHIP.DESCRIPTION AS PHYSICALSHIPDESCRIPTION,",
              "SUBSTR(SHIPTEMPLATE.CODE,1,3) AS VESSELCODE,",
              "TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY') AS DEPARTUREDAY,",
              "SUBSTR(TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY'),1,3) AS DEPARTUREDAYS,",
              "SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME || ' (' || SUBSTR(TO_CHAR(SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME, 'DAY'),1,3) || ')' AS DEPARTUREDATEDAY,",
              "SAILINGVESSELLICENSE.VESSELLICENSECODE,",
              "SAILINGVESSELLICENSE.CREWNUMBER,",
              "SAILINGVESSELLICENSE.SELLABLECAPACITY,",
              "SAILINGVESSELLICENSE.MAXCAPACITY",
              "FROM EBOOKING.MSP_SAILING SAILING",
              "INNER JOIN EBOOKING.MSP_SHIPTEMPLATE SHIPTEMPLATE",
              "    ON SHIPTEMPLATE.CODE = SAILING.SHIPTEMPLATECODE  ",
              "  AND SHIPTEMPLATE.STARTDATE = SAILING.SHIPTEMPLATESTARTDATE",
              "  AND SAILING.HIDEINFORMATION = 'N'",
              "INNER JOIN EBOOKING.MSP_PHYSICALSHIP PHYSICALSHIP",
              "    ON PHYSICALSHIP.NAME = SHIPTEMPLATE.PHYSICALSHIPNAME   ",
              "  AND PHYSICALSHIP.STARTDATE = SHIPTEMPLATE.PHYSICALSHIPSTARTDATE",
              "INNER JOIN EBOOKING.MSP_SAILINGPORTSCHEDULE SAILINGPORTSCHEDULEDEPARTURE",
              "    ON SAILINGPORTSCHEDULEDEPARTURE.SAILINGCODE = SAILING.CODE",
              "  AND SAILINGPORTSCHEDULEDEPARTURE.SAILINGSTARTDATE = SAILING.STARTDATE",
              "INNER JOIN EBOOKING.MSP_SAILINGPORTSCHEDULE SAILINGPORTSCHEDULEARRIVAL",
              "    ON SAILINGPORTSCHEDULEARRIVAL.SAILINGCODE = SAILING.CODE",
              "  AND SAILINGPORTSCHEDULEARRIVAL.SAILINGSTARTDATE = SAILING.STARTDATE",
              "INNER JOIN EBOOKING.MSP_LEG LEG",
              "    ON SAILINGPORTSCHEDULEDEPARTURE.PORTCODE = LEG.DEPARTURE_PORT",
              "  AND SAILINGPORTSCHEDULEDEPARTURE.PORTSTARTDATE = LEG.DEPARTURE_PORTSTARTDATE",
              "  AND SAILINGPORTSCHEDULEARRIVAL.PORTCODE = LEG.ARRIVAL_PORT",
              "  AND SAILINGPORTSCHEDULEARRIVAL.PORTSTARTDATE = LEG.ARRIVAL_PORTSTARTDATE",
              "INNER JOIN EBOOKING.MSP_PORT DEPARTUREPORT",
              "    ON DEPARTUREPORT.CODE = SAILINGPORTSCHEDULEDEPARTURE.PORTCODE",
              "INNER JOIN EBOOKING.MSP_PORT ARRIVALPORT",
              "    ON ARRIVALPORT.CODE = SAILINGPORTSCHEDULEARRIVAL.PORTCODE",
              "INNER JOIN EBOOKING.MSP_SAILINGVESSELLICENSE SAILINGVESSELLICENSE",
              "    ON SAILING.CODE = SAILINGVESSELLICENSE.SAILINGCODE  ",
              "  AND SAILING.STARTDATE = SAILINGVESSELLICENSE.SAILINGSTARTDATE",
              "  AND SAILING.SHIPTEMPLATECODE = SAILINGVESSELLICENSE.SHIPTEMPLATECODE ",
              "  AND SAILING.SHIPTEMPLATESTARTDATE = SAILINGVESSELLICENSE.SHIPTEMPLATESTARTDATE",
              "  AND ARRIVALPORT.CODE = SUBSTR(SAILINGVESSELLICENSE.LEGCODE,5,3) ",
              "  AND SAILINGVESSELLICENSE.ENDDATE = '99991231000000'",
              "WHERE SAILINGPORTSCHEDULEDEPARTURE.DEPARTURETIME IS NOT NULL",
              "AND SAILINGPORTSCHEDULEARRIVAL.ARRIVALTIME IS NOT NULL",
              "AND SAILINGPORTSCHEDULEDEPARTURE.PORTORDER - SAILINGPORTSCHEDULEARRIVAL.PORTORDER < 0 ) ALLSAILINGS",
              "LEFT OUTER JOIN ",
              "(SELECT ",
              "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
              "SAILINGSELLABLEPRODUCT.LEGCODE,",
              "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
              "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
              "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
              "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
              "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
              "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
              "AND SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
              "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
              "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0 ) ARRIVAL_ALLOCATION",
              "    ON ALLSAILINGS.SAILINGCODE = ARRIVAL_ALLOCATION.SAILINGCODE",
              "  AND ALLSAILINGS.ROUTEARRIVALPORT = ARRIVAL_ALLOCATION.ARRIVALPORT ",
              "LEFT OUTER JOIN ",
              "(SELECT ",
              "SAILINGSELLABLEPRODUCT.SAILINGCODE,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 1,3) AS DEPARTUREPORT,",
              "SUBSTR(SAILINGSELLABLEPRODUCT.LEGCODE, 5,3) AS ARRIVALPORT,",
              "SAILINGSELLABLEPRODUCT.LEGCODE,",
              "SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE,",
              "SAILINGSELLABLEPRODUCT.SELLABLECAPACITY,",
              "SAILINGSELLABLEPRODUCT.SOLDCAPACITY,",
              "SAILINGSELLABLEPRODUCT.AVAILABLECAPACITY",
              "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
              "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
              "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
              "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
              "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0) DEPARTURE_ALLOCATION",
              "    ON ALLSAILINGS.SAILINGCODE = DEPARTURE_ALLOCATION.SAILINGCODE",
              "  AND ALLSAILINGS.ROUTEDEPARTUREPORT = DEPARTURE_ALLOCATION.DEPARTUREPORT",
              "  AND DEPARTURE_ALLOCATION.PHYSICALRESOURCECODE = ARRIVAL_ALLOCATION.PHYSICALRESOURCECODE) ALL_ALLOCATIONS",
              "",
              "ORDER BY ROUTEDEPARTUREDATE, RESOURCETYPESORT</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "PhysicalResources",
        "columns": [
          {
            "name": "PhysicalResourceCode",
            "dataType": "string",
            "sourceColumn": "PHYSICALRESOURCECODE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ResourceType",
            "dataType": "string",
            "sourceColumn": "RESOURCETYPE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ResourceTypeSort",
            "dataType": "double",
            "sourceColumn": "RESOURCETYPESORT",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "ResourceCode",
            "dataType": "string",
            "sourceColumn": "RESOURCECODE",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "Query",
            "dataView": "full",
            "source": {
              "query": [
                "select distinct PHYSICALRESOURCECODE,",
                "CASE WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 'PASSENGER'     ",
                "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 'CAR DECK '",
                "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 'CABIN    '",
                "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 'CHAIR    '",
                "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 'ONBOARD  '     ",
                "END RESOURCETYPE, ",
                "CASE  ",
                "     WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 1 ",
                "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 2",
                "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 3",
                "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 4",
                "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 5     ",
                "END RESOURCETYPESORT, ",
                "CASE WHEN PHYSICALRESOURCECODE IN ('BUS') THEN 'BUS (FT)' ",
                "     WHEN PHYSICALRESOURCECODE IN ('FOH') THEN 'FOH (FT)' ",
                "     WHEN PHYSICALRESOURCECODE IN ('POH') THEN 'POH (FT)' ",
                "     WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' ",
                "     WHEN PHYSICALRESOURCECODE NOT IN ('BUS', 'FOH', 'POH', 'UH') THEN PHYSICALRESOURCECODE  ",
                "END AS RESOURCECODE",
                "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
                "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
                "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
                "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
                "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0"
              ],
              "dataSource": "Oracle scan.stg01.rac.bcferries.corp"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct PHYSICALRESOURCECODE,",
                  "CASE WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 'PASSENGER'     ",
                  "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 'CAR DECK '",
                  "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 'CABIN    '",
                  "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 'CHAIR    '",
                  "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 'ONBOARD  '     ",
                  "END RESOURCETYPE, ",
                  "CASE  ",
                  "     WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 1 ",
                  "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 2",
                  "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 3",
                  "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 4",
                  "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 5     ",
                  "END RESOURCETYPESORT, ",
                  "CASE WHEN PHYSICALRESOURCECODE IN ('BUS') THEN 'BUS (FT)' ",
                  "     WHEN PHYSICALRESOURCECODE IN ('FOH') THEN 'FOH (FT)' ",
                  "     WHEN PHYSICALRESOURCECODE IN ('POH') THEN 'POH (FT)' ",
                  "     WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' ",
                  "     WHEN PHYSICALRESOURCECODE NOT IN ('BUS', 'FOH', 'POH', 'UH') THEN PHYSICALRESOURCECODE  ",
                  "END AS RESOURCECODE",
                  "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
                  "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
                  "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
                  "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
                  "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select distinct PHYSICALRESOURCECODE,",
              "CASE WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 'PASSENGER'     ",
              "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 'CAR DECK '",
              "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 'CABIN    '",
              "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 'CHAIR    '",
              "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 'ONBOARD  '     ",
              "END RESOURCETYPE, ",
              "CASE  ",
              "     WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 1 ",
              "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 2",
              "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 3",
              "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 4",
              "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 5     ",
              "END RESOURCETYPESORT, ",
              "CASE WHEN PHYSICALRESOURCECODE IN ('BUS') THEN 'BUS (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('FOH') THEN 'FOH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('POH') THEN 'POH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE NOT IN ('BUS', 'FOH', 'POH', 'UH') THEN PHYSICALRESOURCECODE  ",
              "END AS RESOURCECODE",
              "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
              "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
              "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
              "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
              "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Query"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct PHYSICALRESOURCECODE,",
              "CASE WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 'PASSENGER'     ",
              "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 'CAR DECK '",
              "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 'CABIN    '",
              "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 'CHAIR    '",
              "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 'ONBOARD  '     ",
              "END RESOURCETYPE, ",
              "CASE  ",
              "     WHEN PHYSICALRESOURCECODE IN ('PAX', 'CHILD') THEN 1 ",
              "     WHEN PHYSICALRESOURCECODE IN ('BUS', 'CV', 'FOH', 'GWD', 'GWT', 'POH',  'UH')  THEN 2",
              "     WHEN PHYSICALRESOURCECODE IN ('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B') THEN 3",
              "     WHEN PHYSICALRESOURCECODE IN ('SEA', 'SEAWC') THEN 4",
              "     WHEN PHYSICALRESOURCECODE IN ('CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM','WCPSH', 'WCXPSH') THEN 5     ",
              "END RESOURCETYPESORT, ",
              "CASE WHEN PHYSICALRESOURCECODE IN ('BUS') THEN 'BUS (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('FOH') THEN 'FOH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('POH') THEN 'POH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' WHEN PHYSICALRESOURCECODE IN ('UH') THEN 'UH (FT)' ",
              "     WHEN PHYSICALRESOURCECODE NOT IN ('BUS', 'FOH', 'POH', 'UH') THEN PHYSICALRESOURCECODE  ",
              "END AS RESOURCECODE",
              "FROM EBOOKING.MSP_SAILINGSELLABLEPRODUCT SAILINGSELLABLEPRODUCT",
              "WHERE SAILINGSELLABLEPRODUCT.ENDDATE = '99991231000000'",
              "AND   SAILINGSELLABLEPRODUCT.PHYSICALRESOURCECODE IN ",
              "('I2B', 'I4B', 'O2B', 'O4B', 'P2B', 'P4B', 'W2B', 'SEA', 'SEAWC', 'BUS', 'CV', 'FOH', 'POH', 'UH', 'PAX', 'CONFRM', 'NBUFBK', 'NBUFDN', 'PACBUF', 'SEAWST', 'SITKA', 'STATRM', 'CHILD', 'WCPSH', 'WCXPSH')",
              "AND SAILINGSELLABLEPRODUCT.SELLABLECAPACITY > 0</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "a2a584b6-afb9-4485-8f6e-92561c912818",
        "fromTable": "DepartureAllocation",
        "fromColumn": "DepartureAllocationKey",
        "toTable": "Sailings",
        "toColumn": "DepartureAllocationKey"
      },
      {
        "name": "d3bc8447-5c85-463b-a702-25921b733a50",
        "fromTable": "ArrivalAllocation",
        "fromColumn": "ArrivalAllocationKey",
        "toTable": "Sailings",
        "toColumn": "ArrivalAllocationKey"
      },
      {
        "name": "2a494311-913d-4558-83fd-2246cc8927ec",
        "fromTable": "ArrivalAllocation",
        "fromColumn": "PhysicalResourceCode",
        "toTable": "PhysicalResources",
        "toColumn": "PhysicalResourceCode"
      },
      {
        "name": "358baa79-7424-40c3-b2c5-7829330bc58c",
        "fromTable": "DepartureAllocation",
        "fromColumn": "PhysicalResourceCode",
        "toTable": "PhysicalResources",
        "toColumn": "PhysicalResourceCode"
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "400"
      }
    ]
  },
  "id": "SemanticModel"
}